{"Post":[{"title":"apache日志处理分析合集","slug":"apache-log-processing-of-collection","content":" 统计访问量最多的前N个IP，倒序排列 cat 日志文件 | awk '{print $1}'|sort|uniq -c|sort -r -n -k1|head -数量 统计访问量最多的50个IP，倒序排列，并且排除包含\"bot\"和\"spider\"的记录 cat access_20100921.log |egrep -v \"bot|spider\"| awk '{print $1}'|sort|uniq -c|sort -r -n -k1|head -50 ","date":1285046506000,"updated":1586328684111,"size":652},{"title":"常用的正则表达式","slug":"a-lot-of-regular-expressions","content":" 比较常用的 /*匹配双字节字符(包括汉字在内)，可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）*/ [^x00-xff] /*匹配空白行的正则表达式，可以用来删除空白行*/ ns*r /*匹配HTML标记的正则表达式，网上流传的版本太糟糕，这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力*/ <(S*?)[^>]*>.*?|<.*? /> /*匹配首尾空白字符的正则表达式，可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式*/ ^s*|s*$ /*匹配Email地址的正则表达式，表单验证时很实用*/ w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)* /*匹配网址URL的正则表达式，网上流传的版本功能很有限，上面这个基本可以满足需求*/ [a-zA-z]+://[^s]* /*匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)，表单验证时很实用*/ ^[a-zA-Z][a-zA-Z0-9_]{4,15}$ /*匹配国内电话号码，匹配形式如 0511-4405222 或 021-87888822*/ d{3}-d{8}|d{4}-d{7} /*匹配腾讯QQ号，腾讯QQ号从10000开始*/ [1-9][0-9]{4,} /*匹配中国邮政编码，中国邮政编码为6位数字*/ [1-9]d{5}(?!d) /*匹配身份证，中国的身份证为15位或18位*/ d{15}|d{18} /*匹配ip地址，提取ip地址时有用*/ d+.d+.d+.d+ 匹配特定数字 处理大量数据时有用，具体应用时注意修正 /*匹配正整数*/ ^[1-9]d*$ /*匹配负整数*/ ^-[1-9]d*$ /*匹配整数*/ ^-?[1-9]d*$ /*匹配非负整数（正整数 + 0）*/ ^[1-9]d*|0$ /*匹配非正整数（负整数 + 0）*/ ^-[1-9]d*|0$ /*匹配正浮点数*/ ^[1-9]d*.d*|0.d*[1-9]d*$ /*匹配负浮点数*/ ^-([1-9]d*.d*|0.d*[1-9]d*)$ /*匹配浮点数*/ ^-?([1-9]d*.d*|0.d*[1-9]d*|0?.0+|0)$ /*匹配非负浮点数（正浮点数 + 0）*/ ^[1-9]d*.d*|0.d*[1-9]d*|0?.0+|0$ /*匹配非正浮点数（负浮点数 + 0）*/ ^(-([1-9]d*.d*|0.d*[1-9]d*))|0?.0+|0$ 匹配特定字符串 /*匹配由26个英文字母组成的字符串*/ ^[A-Za-z]+$ /*匹配由26个英文字母的大写组成的字符串*/ ^[A-Z]+$ /*匹配由26个英文字母的小写组成的字符串*/ ^[a-z]+$ /*匹配由数字和26个英文字母组成的字符串*/ ^[A-Za-z0-9]+$ /*匹配由数字、26个英文字母或者下划线组成的字符串*/ ^w+$ 表单验证 在使用RegularExpressionValidator验证控件时的验证功能及其验证表达式介绍如下: /*只能输入数字*/ ^[0-9]*$ /*只能输入n位的数字*/ ^d{n}$ /*只能输入至少n位数字*/ ^d{n,}$ /*只能输入m-n位的数字*/ ^d{m,n}$ /*只能输入零和非零开头的数字*/ ^(0|[1-9][0-9]*)$ /*只能输入有两位小数的正实数*/ ^[0-9]+(.[0-9]{2})?$ /*只能输入有1-3位小数的正实数*/ ^[0-9]+(.[0-9]{1,3})?$ /*只能输入非零的正整数*/ ^+?[1-9][0-9]*$ /*只能输入非零的负整数*/ ^-[1-9][0-9]*$ /*只能输入长度为3的字符*/ ^.{3}$ /*只能输入由26个英文字母组成的字符串*/ ^[A-Za-z]+$ /*只能输入由26个大写英文字母组成的字符串*/ ^[A-Z]+$ /*只能输入由26个小写英文字母组成的字符串*/ ^[a-z]+$ /*只能输入由数字和26个英文字母组成的字符串*/ ^[A-Za-z0-9]+$ /*只能输入由数字、26个英文字母或者下划线组成的字符串*/ ^w+$ /*验证用户密码，正确格式为：以字母开头，长度在6-18之间， 只能包含字符、数字和下划线*/ ^[a-zA-Z]\\w{5,17}$ /*只能输入汉字*/ ^[u4e00-u9fa5],{0,}$ /*验证Email地址*/ ^w+[-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$ /*验证InternetURL*/ ^http://([w-]+.)+[w-]+(/[w-./?%&=]*)?$ /*验证电话号码，正确格式为：\"XXXX-XXXXXXX\"，\"XXXX-XXXXXXXX\"，\"XXX-XXXXXXX\"，\"XXX-XXXXXXXX\"，\"XXXXXXX\"，\"XXXXXXXX\"*/ ^((d{3,4})|d{3,4}-)?d{7,8}$ /*验证身份证号（15位或18位数字）*/ ^d{15}|d{}18$ /*验证一年的12个月，正确格式为\"01\"-\"09\"和\"1\"-\"12\"*/ ^(0?[1-9]|1[0-2])$ /*验证一个月的31天，正确格式为：\"01\"-\"09\"和\"1\"-\"31\"*/ ^((0?[1-9])|((1|2)[0-9])|30|31)$ 特定的字符 /*匹配中文字符的正则表达式*/ [u4e00-u9fa5] /*匹配双字节字符(包括汉字在内)*/ [^x00-xff] /*匹配空行的正则表达式*/ n[s| ]*r /*匹配HTML标记的正则表达式*/ /<(.*)>.*|<(.*) />/ /*匹配首尾空格的正则表达式*/ (^s*)|(s*$) /*匹配Email地址的正则表达式*/ w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)* /*匹配网址URL的正则表达式*/ http://([w-]+.)+[w-]+(/[w- ./?%&=]*)? 应用 计算字符串的长度 一个双字节字符长度计2，ASCII字符计1 String.prototype.len=function(){return this.replace([^x00-xff]/g,\"aa\").length;} javascript中的trim javascript中没有像vbscript那样的trim函数，我们就可以利用这个表达式来实现 String.prototype.trim = function(){return this.replace(/(^s*)|(s*$)/g, \"\");} 分解和转换IP地址 /*IP地址转换成对应数值*/ function IP2V(ip){     var re=/(d+).(d+).(d+).(d+)/g //匹配IP地址的正则表达式     if(re.test(ip)){         return RegExp.$1*Math.pow(255,3))+RegExp.$2*Math.pow(255,2))+RegExp.$3*255+RegExp.$4*1;     } else {         throw new Error(\"Not a valid IP address!\");     } } 从URL地址中提取文件名 应用于javascript程序 s=\"http://www.9499.net/page1.htm\"; s=s.replace(/(.*/){0,}([^.]+).*/ig,\"$2\") ;  //Page1.htm ","date":1277689340000,"updated":1586328684109,"size":3524},{"title":"在apache的log中找出访问次数最多的N个IP。","slug":"apache-log-top-ip-statistics","content":" 根据需求修改文件名和行数即可   awk '{print $1}' 日志文件名 |sort |uniq -c|sort -nr|head -行数 输出： 1234 123.456.789.0  321 11.22.33.44   56 22.33.44.55   34 33.44.55.66   ...... ","date":1278559086000,"updated":1586328684112,"size":311},{"title":"城府修练","slug":"ayutthaya-discipline","content":" 沉稳 1. 不要随便显露你的情绪。 2. 不要逢人就诉说你的困难和遭遇。 3. 在征询别人的意见之前，自己先思考，但不要先讲。 4. 不要一有机会就唠叨你的不满。 5. 重要的决定尽量有别人商量，最好隔一天再发布。 6. 讲话不要有任何的慌张，走路也是。 7. 自信是好，但是别忽略任何人的想法。 8. 人无高低，不要一副拽拽的样子，对人对事，别忘了礼貌。 细心 1. 对身边发生的事情，常思考它们的因果关系。 2. 对做不到位的问题，要发掘它们的根本症结。 3. 对习以为常的做事方法，要有改进或优化的建议。 4. 做什么事情都要养成有条不紊和井然有序的习惯。 5. 经常去找几个别人看不出来的毛病或弊端。 6. 自己要随时随地对有所不足的地方补位。 胆识 1. 不要常用缺乏自信的词句。 2. 不要常常反悔，轻易推翻已经决定的事。 3. 在众人争执不休时，不要没有主见。 4. 整体氛围低落时，你要乐观、阳光。 5. 做任何事情都要用心，因为有人在看着你。 6. 事情不顺的时候，歇口气，重新寻找突破口，就算结束也要干净利落。 大度 1. 不要刻意把有可能是伙伴的人变成对手或者敌人。 2. 对别人的小过失、小错误不要斤斤计较。 3. 在金钱上要大方，舍的本身就是得，小舍小得，大舍大得，不舍不得。 4. 不要有权力的傲慢和知识的偏见。 5. 个人学习成果和成就都应和别人分享。 诚信 1. 做不到的事情不要说，说了就努力做到。 2. 虚的口号或标语不要常挂嘴上。 3. 停止一切\"不道德\"的手段。 4. 耍弄小聪明，要不得！ 担当 1. 检讨任何过失的时候，先从自身或自己人开始反省。 2. 事情结束后，先审查过错，再列述功劳。 3. 一个计划，要统筹全局，规划未来。 4. 勇于承担责任所造成的损失。 内涵 1. 学习各方面的知识，虚心观察周围的事物。眼界宽阔。 2. 了解自己，培养属于自己正确的审美观。 3. 笑对生活。懒惰要不得。培养健康的生活习惯。 4. 不要盲目的做任何事。要有目标。 5. 不仅仅只关注内在美，外在美也很重要。 6. 不要整天的对着电脑，玩着无聊的东西。 7. 理智的判断，学会控制情绪。","date":1295800359000,"updated":1586328684113,"size":1357},{"title":"linux下的httpd(apache)安装及配置","slug":"apache-install-and-configuration","content":" 下载安装包 wget http://apache.etoak.com/httpd/httpd-2.2.11.tar.gz 创建apache用户 groupadd apache;useradd -g apache apache 编译安装 ./configure --prefix=/usr/local/apache2 \\ --enable-modules=all \\ --enable-ssl \\ --enable-so \\ --enable-rewrite \\ --enable-mime-magic \\ --enable-file-cache \\ --enable-cache \\ --enable-disk-cache \\ --enable-mem-cache \\ --enable-static-rotatelogs \\ --enable-vhost-alias make make install 配置 修改apache配置文件 vi /usr/local/apache2/conf/httpd.conf 修改: DirectoryIndex index.html index.htm index.php User apache Group apache 添加: ServerName 127.0.0.1:80 AddType application/x-httpd-php .php .php3 AddType application/x-httpd-php-source .phps 启动apache /usr/local/apache2/bin/apachectl start 设置开机启动 vi /etc/rc.local 添加 /usr/local/apache2/bin/apachectl start 感谢老男赐予的文档...","date":1277265337000,"updated":1586328684110,"size":1419},{"title":"Apache URL Rewriting 技巧及实例","slug":"apache-url-rewriting-tips-and-examples","content":" 环境需求 apache:mod_rewrite 当你的服务器使用apache的时候，需要加载此模块。 IIS:ISAPI_rewrite 在windows的IIS上也可以实现同样的功能，那么需要安装ISAPI_rewrite。 RewriteRule基础知识 一个完整的RewriteRule语句分成三个部分 1. 匹配：传入的URL应该受到规则; 2. 替换：匹配的请求被发送; 3. [标志]：影响重写请求。 例子 一个完整的文件系统资源路径，它映射请求到你的文件系统的任意位置上，就像Alias指令那样。 RewriteRule ^/games.* /usr/local/games/web 一个网络资源的路径，如果DocumentRoot设置为/usr/local/apache2/htdocs ，那么，这个指令将http://example.com/foo转到路径/usr/local/apache2/htdocs/bar。 RewriteRule ^/foo$ /bar 一个绝对的URL重写，跳转到另一url最直接的办法 RewriteRule ^/product/view$ http://site2.example.com/seeproduct.html [R] 由上面的例子引申出的，括号中的\".*\"在匹配时赋值给了变量$1，$1可以作为任何匹配到的文字写入到替换规则中。一个请求**http://example.com/product/r14df/view**将被映射到路径**/var/web/productdb/r14df **。 RewriteRule ^/product/(.*)/view$ /var/web/productdb/$1 RewriteCond重写条件 一个或多个RewriteCond指令可以用来限制RewriteRule的请求类型，它的语句也分为三部分 1. 变量的特征描述、要求； 2. 正则表达式 ，必须符合变量； 3. [标志]，用来描述如何进行匹配。 例子 将符合此IP范围内的所有请求发送至域名： RewriteCond %{REMOTE_ADDR} ^10\\.2\\. RewriteRule (.*) http://intranet.example.com$1 当有多个RewriteCond指令时，他们都会被RewriteRule所采用。例:当cookie中含有\"go\"的时候才处理请求字符串\"hack\"，否则拒绝，写法： RewriteCond %{QUERY_STRING} hack RewriteCond %{HTTP_COOKIE} !go RewriteRule .* - [F] 注意：\"!\"感叹号是**否定**匹配，也就是说当条件中 cookie没有\"go\"且请求中含有\"hack\"，将会遭到拒绝。 在RewriteCond指令中也有像RewriteRule中所用的\"$1\"、\"$2\"匹配变量，但写法列有不同，使用的符号是\"%\"，比如\"%1\"、\"%2\"。例：匹配主机名和目录，拼接成新的请求： RewriteCond %{HTTP_HOST} (.*) RewriteRule ^/(.*) /sites/%1/$1 如果请求是**http://example.com/foo/bar** ，那么**%1**将包含**example.com**和**$1**将包含**foo/bar**。 一些常用的例子 简单的替换 这个例子中我们替换`/~user`到`/u/user`和修复缺少末尾的斜杠`/u/user` RewriteRule ^/~([^/]+)/?(.*) /u/$1/$2 [R] RewriteRule ^/([uge])/( [^/]+ )$ /$1/$2/ [R] 改变根目录 \"移动的DocumentRoot\"，将站点的根/改写为/e/www/ RewriteEngine on RewriteRule ^/$ /e/www/ [R] 无www的跳转到有www RewriteEngine on RewriteCond %{http_host} ^domain.com [NC] RewriteRule ^(.*)$ http://www.domain.com/$1 [R=301,NC] 还是上面的例子，但是对于/mytest/my目录不跳转，也就是可以直接访问 http://domain.com/mytest/my RewriteEngine on RewriteCond %{HTTP_HOST} ^domain.com [NC] RewriteCond %{REQUEST_URI} !/mytest/my [NC] RewriteRule ^(.*)$ http://www.domain.com/$1 [R=301,NC] 结尾的斜线问题 在通常的情况下，当你访问 /~quux/foo 服务器会认为这是一个文件，它并不是像/~quux/foo/xxx.gif那样实际存在的，也许你只是忘记了加上\"/\"，但服务器会让你看到一个优雅的错误页面。为了解决这个问题，我们可以这样来写： RewriteEngine on RewriteBase /~quux/ RewriteRule ^foo$ foo/ [R] 以上仅仅是针对一个目录的，下面的写法更加的暴力，任何文件甚至都能作为下一级目录的顶端来使用，我们就会看到/~quux/foo/xxx.gif/这种奇异现象 RewriteEngine on RewriteBase /~quux/ RewriteCond %{REQUEST_FILENAME}  -d RewriteRule ^(.+[^/])$ $1/  [R] 将url的解释权交给某个页面 我们伟达的wordpress就是这么做的，这种方式为我们集中管理各个应用（页面）提供了宝贵的经验和思路。 下面的例子，用语言来解释：\"**把/后面任何非真实存在的请求全部交给index.php来处理**\" 也就是说 http://youdomain.com/**xxx/yyy/zzz/aaa.gif?ccc=ddd**中，域名后面红色加粗的部分 xxx/yyy/zzz/aaa.gif?ccc=ddd 会当做一个字符串，全部交给index.php进行分析与处理。 RewriteEngine On RewriteBase / RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule . /index.php [L] 参数列表 对rewrite的参数进行了相近的介绍 常用的参数 1. **redirect|R [=code]** (强制重定向 redirect)<br>以http://thishost[:thisport]/(使  新的URL成为一个URI) 为前缀的Substitution可以强制性执行一个外部重定向。  如果code没有指定，则产生一个HTTP响应代码302(临时性移动)。  如果需要使用在300-400范围内的其他响应代码，只需在此指定这个数值即可， 另外，还可以使用下列符号名称之一: temp (默认的), permanent, seeother. 用它可以把规范化的URL反馈给客户端，如, 重写``/~''为 ``/u/''，或对/u/user加上斜杠，等等。**注意:** 在使用这个标记时，必须确保该替换字段是一个有效的URL! 否则，它会指向一个无效的位置! 并且要记住，此标记本身只是对URL加上 http://thishost[:thisport]/的前缀，重写操作仍然会继续。 通常，你会希望停止重写操作而立即重定向，则还需要使用'L'标记. 2. **forbidden|F** (强制URL为被禁止的 forbidden)<br>强制当前URL为被禁止的，即，立即反馈一个HTTP响应代码403(被禁止的)。 使用这个标记，可以链接若干RewriteConds以有条件地阻塞某些URL。 3. **gone|G** (强制URL为已废弃的 gone)<br>强制当前URL为已废弃的，即，立即反馈一个HTTP响应代码410(已废弃的)。 使用这个标记，可以标明页面已经被废弃而不存在了. 4. **proxy|P** (强制为代理 proxy)<br>此标记使替换成分被内部地强制为代理请求，并立即(即， 重写规则处理立即中断)把处理移交给代理模块。 你必须确保此替换串是一个有效的(比如常见的以 http://hostname开头的)能够为Apache代理模块所处理的URI。 使用这个标记，可以把某些远程成分映射到本地服务器名称空间， 从而增强了ProxyPass指令的功能。注意: 要使用这个功能，代理模块必须编译在Apache服务器中。 如果你不能确定，可以检查\"httpd -l\"的输出中是否有mod_proxy.c。 如果有，则mod_rewrite可以使用这个功能； 如果没有，则必须启用mod_proxy并重新编译\"httpd\"程序。 5. **last|L** (最后一个规则 last)<br>立即停止重写操作，并不再应用其他重写规则。 它对应于Perl中的last命令或C语言中的break命令。 这个标记可以阻止当前已被重写的URL为其后继的规则所重写。 举例，使用它可以重写根路径的URL(\"/\")为实际存在的URL, 比如, \"/e/www/\". 6. **next|N** (重新执行 next round)<br>重新执行重写操作(从第一个规则重新开始)这时再次进行处理的URL已经不是原始的URL了，而是经最后一个重写规则处理的URL。 它对应于Perl中的next命令或C语言中的continue命令。 此标记可以重新开始重写操作，即, 立即回到循环的头部。**但是要小心，不要制造死循环!** 7. **chain|C** (与下一个规则相链接 chained)<br>此标记使当前规则与下一个(其本身又可以与其后继规则相链接的，并可以如此反复的)规则相链接。 它产生这样一个效果:  如果一个规则被匹配，通常会继续处理其后继规则， 即，这个标记不起作用；如果规则不能被匹配，  则其后继的链接的规则会被忽略。比如，在执行一个外部重定向时， 对一个目录级规则集，你可能需要删除\".www\"(此处不应该出现\".www\"的)。 8. **type|T**=MIME-type (强制MIME类型 type)<br>强制目标文件的MIME类型为MIME-type。 比如，它可以用于模拟mod_alias中的ScriptAlias指令， 以内部地强制被映射目录中的所有文件的MIME类型为\"application/x-httpd-cgi\"。 9. **nosubreq|NS** (仅用于不对内部子请求进行处理 no internal sub-request)<br>在当前请求是一个内部子请求时，此标记强制重写引擎跳过该重写规则。 比如，在mod_include试图搜索可能的目录默认文件(index.xxx)时， Apache会内部地产生子请求。对子请求，它不一定有用的，而且如果整个规则集都起作用， 它甚至可能会引发错误。所以，可以用这个标记来排除某些规则。根据你的需要遵循以下原则: 如果你使用了有CGI脚本的URL前缀，以强制它们由CGI脚本处理， 而对子请求处理的出错率(或者开销)很高，在这种情况下，可以使用这个标记。 10. **nocase|NC** (忽略大小写 no case)<br>它使Pattern忽略大小写，即, 在Pattern与当前URL匹配时，\"A-Z\" 和\"a-z\"没有区别。 11. **qsappend|QSA** (追加请求串 query string append)<br>此标记强制重写引擎在已有的替换串中追加一个请求串，而不是简单的替换。 如果需要通过重写规则在请求串中增加信息，就可以使用这个标记。 12. **noescape|NE** (在输出中不对URI作转义 no URI escaping)<br>此标记阻止mod_rewrite对重写结果应用常规的URI转义规则。 一般情况下，特殊字符(如\"%\", \"$\", \";\"等)会被转义为等值的十六进制编码。 此标记可以阻止这样的转义，以允许百分号等符号出现在输出中，如： RewriteRule /foo/(.*) /bar?arg=P1\\%3d$1 [R,NE] 可以使\"/foo/zed\"转向到一个安全的请求\"/bar?arg=P1=zed\"。 13. **passthrough|PT** (移交给下一个处理器 pass through)<br>此标记强制重写引擎将内部结构request_rec中的uri字段设置为 filename字段的值，它只是一个小修改，使之能对来自其他URI到文件名翻译器的 Alias，ScriptAlias, Redirect 等指令的输出进行后续处理。举一个能说明其含义的例子： 如果要通过mod_rewrite的重写引擎重写/abc为/def， 然后通过mod_alias使/def转变为/ghi，可以这样:    RewriteRule ^/abc(.*) /def$1 [PT] Alias /def /ghi如果省略了PT标记，虽然mod_rewrite运作正常， 即，作为一个使用API的URI到文件名翻译器， 它可以重写uri=/abc/...为filename=/def/...， 但是，后续的mod_alias在试图作URI到文件名的翻译时，则会失效。 注意: **如果需要混合使用不同的包含URI到文件名翻译器的模块时， 就必须使用这个标记**。 混合使用mod_alias和mod_rewrite就是个典型的例子。 For **Apache** hackers 如果当前Apache API除了URI到文件名hook之外，还有一个文件名到文件名的hook， 就不需要这个标记了!  但是，如果没有这样一个hook，则此标记是唯一的解决方案。 Apache Group讨论过这个问题，并在Apache 2.0  版本中会增加这样一个hook。'skip|S=num' (跳过后继的规则 skip) 此标记强制重写引擎跳过当前匹配规则后继的num个规则。 它可以实现一个伪if-then-else的构造: 最后一个规则是then从句，而被跳过的skip=N个规则是else从句. (它和'chain|C'标记是不同的!) 1. **env|E=**VAR:VAL (设置环境变量 environment variable)      此标记使环境变量VAR的值为VAL, VAL可以包含可扩展的反向引用的正则表达式$N和%N。 此标记可以多次使用以设置多个变量。 这些变量可以在其后许多情况下被间接引用，但通常是在XSSI (via &lt;!--\\#echo var=\"VAR\"--&gt;) or CGI (如 $ENV{'VAR'})中， 也可以在后继的RewriteCond指令的pattern中通过%{ENV:VAR}作引用。 使用它可以从URL中剥离并记住一些信息。 2. **cookie|CO=**NAME:VAL:domain[:lifetime[:path]] (设置cookie)      它在客户端浏览器上设置一个cookie。 cookie的名称是NAME，其值是VAL。 domain字段是该cookie的域，比如'.apache.org', 可选的lifetime是cookie生命期的分钟数， 可选的path是cookie的路径。","date":1278053246000,"updated":1586328684112,"size":7366},{"title":"Blender 3D 技巧收集","slug":"blender-skill","content":" Modifiers cannot be applied to multi-user data Press U \\> Objects and Data. Then apply your modifier. Using just Object will make the object a new, separate datablock for the mesh (but will ignore modifiers). However, using Object and Data will make both the objects mesh and it's modifiers a new, separate datablock. 骚操作 复位变更 - alt + g 清除位移 - alt + s 清除缩放 - alt + r 清除旋转","date":1586328684114,"updated":1586328684114,"size":476},{"title":"crontable中的百分号\"%\"问题","slug":"corntable-percent-sign-problem","content":" 写个 crontab ，命令是类似这样的 /path/to/script `date +%Y-%m-%d` 直接运行很正常，但是在 crotnab 里就出错。 /bin/sh: -c: line 1: unexpected EOF while looking for matching ``' /bin/sh: -c: line 2: syntax error: unexpected end of file google 了好一阵才找到答案。原来 crontab 里的 % 是有特殊意义的，在这里需要转义。man 5 crontab 可以看到， Percent-signs (%) in the command, unless escaped with backslash (\\), will be changed into newline characters, and all data after the first % will be sent to the command as standard input. **% 如果没有用 \\ 转义，就会被替换成换行。所以之前的 crontab 就出错了。** 解决办法：可以在 % 前面都加个 \\ ，对于这个例子，写成 date +\\%Y-\\%m-\\%d。 /path/to/script `date +\\%Y-\\%m-\\%d` 感谢神仙赐予的知识","date":1279594886000,"updated":1586328684118,"size":1052},{"title":"Mac系统用bash shell用默认浏览器打开网址","slug":"bash-shell-open-default-web-browser-on-mac","content":" open http://codante.org -a \"$(VERSIONER_PERL_PREFER_32_BIT=true perl -MMac::InternetConfig -le 'print +(GetICHelper \"http\")[1]')\" ","date":1453306542000,"updated":1586328684114,"size":242},{"title":"学英语要从兴趣开始","slug":"by-the-interest-in-learning-english","content":" 时态 这是学英语时最让人头疼的部分，其实将它们高清楚是很容易的！ 一般现在时 I make love with her everyday. 一般过去时 I made love with her yesterday. 一般将来时 I will make love with her tomorrow. 现在进行时 I am making love with her 过去进行时 I was making love with her at this time yesterday 将来进行时 I will be making love with her at this time tomorrow 现在完成时 I have made love with her by now. 过去完成时 I had made love with her before yesterday. 将来完成时 I will have made love with her by tomorrow. 现在完成进行时 I have been making love with her for two hours. 过去完成进行时 I had been making love with her for two hours when her husband came in. 将来完成进行时 I will have been making love with her for two hours when her husband wakes up tomorrow morning.","date":1297872750000,"updated":1586328684116,"size":841},{"title":"浏览器中rem和px的关系","slug":"browser-rem-px","content":" 介绍 **rem**是跟随页面中<html>的单位，无论在页面中的任何位置，rem都是相对于(且仅相对于)<html>的，相较**em**、**百分比(%)**来讲，在页面中定义字号时使用**rem**会更加便于计算。 一般浏览器的默认字号为**16px**，那么默认的对应关系为： | px | rem | |---|---| | 12 | 12 / 16 = .75 | | 14 | 14 / 16 = .875 | | 16 | 16 / 16 = 1 | | 18 | 18 / 16 = 1.125 | | 20 | 20 / 16 = 1.25 | | 24 | 24 / 16 = 1.5 | | 30 | 30 / 16 = 1.875 | | 36 | 36 / 16 = 2.25 | | 42 | 42 / 16 = 2.625 | | 48 | 48 / 16 = 3 | 很多时候为了方便计算，会为<html>设置一个更加便于计算的值，在元素中设置font-size值为**62.5%**(16 * 0.625 = 10)，或者直接设置为10px，在之后的设置中书写的基本为整数倍： | px | rem | |---|---| | 12 | 12 / 10 = 1.2 | | 14 | 14 / 10 = 1.4 | | 16 | 16 / 10 = 1.6 | | 18 | 18 / 10 = 1.8 | | 20 | 20 / 10 = 2 | | 24 | 24 / 10 = 2.4 | | 30 | 30 / 10 = 3 | | 36 | 36 / 10 = 3.6 | | 42 | 42 / 10 = 4.2 | | 48 | 48 / 10 = 4 | [https://caniuse.com/#search=rem]() ![](http://static.0.codante.org/b/a/ba3799d048192b262d4cce5f4a21d391a402f5f2.png) 应用 html {   font-size: 10px; } input {   font-size: 2rem; /*相当于 10 * 2 = 20*/ } /*假设有 .a > .b > .c > input.d 嵌套的元素*/ .a {   font-size: 2em; } .b {   font-size: 1.5em; } .c {   font-size: 0.8em; } input.d { \tfont-size: 0.5em; /* 10 * 2 * 1.5 * 0.8 * 0.5 = 12 (大写的😓) */ \tfont-size: 1.2rem /* 10 * 1.2 = 12 */ } ","date":1547699053000,"updated":1586328684115,"size":1322},{"title":"CSS Expression（动态属性）用法总结","slug":"css-expression-usage-summary","content":" CSS Expression 动态 css属性，ie 私有，从5.0开始引入（IE8 不支持），参考 [MSDN][0]。一般只用在IE6的hack。 优点 css属性动态生成，所以基本 js 能做的它都能做。选择器用的是 css的，比 js 方便得多。 缺点 expression 会反复执行，有严重的效率问题。触发方式并不是通过事件，类似于js中的 interval 。 实例 背景闪烁 IE6的背景闪烁Bug Fix body { zoom: expression(function(el){ document.execCommand('BackgroundImageCache', false, true); el.style.zoom = '1'; }(this)); } input样式 给不同 type 的 input 赋予不同的样式 input { zoom: expression(function(el){     el.style.zoom = \"1\";     el.className ? el.className+=\" \"+el.type : el.className=el.type; }(this)); } 隔行换色 zebra lists .test { unicode-bidi: expression(function(el){     el.style.unicodeBidi = \"normal\";     var childs = el.getElementsByTagName(\"li\");     for(var i=0; i         (i % 2)?childs[i].className+=\" even\":childs[i].className+=\" odd\";     } }(this)); } :befor,:after 模拟\" :before\" 或者 \":after\" .test { letter-spacing: expression(function(el){     el.style.letterSpacing = \"0\";     var newchild = document.createElement(\"span\");     newchild.className=\"after\";     newchild.appendChild(document.createTextNode(\" World!\"));     el.appendChild(newchild); }(this)); } 图片缩放 模拟图片的：max-width 和 max-height (或 min-width 和 min-height) .max-width span img { max-width:120px; max-height:120px; zoom:expression(function(el){     el.style.zoom = \"1\";     var resizeImg = function() {         if (el.width &gt; 120 || el.height &gt; 120) {             if (el.width &gt; el.height) {                 el.width = \"120\";                 el.height = el.height * (el.width / 120);             } else {                 el.height = \"120\";                 el.width = el.width * (el.height / 120);             }         }     }     if (el.complete) {         resizeImg();     } else {         el.onload = function() {             resizeImg();         }     } }(this)); } IE6的鼠标滑过 a之外元素:hover .ie6-hover input:hover, .ie6-hover .h { border:1px solid red; } .enable-ie6-hover input { _zoom:expression(function(el){     el.style.zoom = \"0\";     el.onmouseenter = function() {         el.className = \"h\";     };     el.onmouseleave = function() {         el.className = \"\";     }; }(this)); } IE6行高问题 line-height bug .ie6-line-height-bug { background:\\#f2f2f2; line-height:50px; zoom:1; } .ie6-line-height-bug-fixed input { _zoom: expression(function(el){     el.style.zoom = \"1\";     var iefixer = document.createElement(\"b\");     iefixer.style.zoom = 1;     el.parentNode.insertBefore(iefixer, el); }(this)); } [0]: http://msdn.microsoft.com/en-us/library/ms537634.aspx","date":1297387721000,"updated":1586328684119,"size":3021},{"title":"CSS中的各种缩写","slug":"css-shorthand","content":" css缩写的主要规则如下： 颜色 color 16进制的色彩值，如果每两位的值相同，可以缩写一半，例如： \\#000000可以缩写为\\#000;\\#336699可以缩写为\\#369; 盒尺寸 通常有下面四种书写方法: property:value1; /*表示所有边都是一个值value1*/ property:value1 value2;  /*表示top和bottom的值是value1,right和left的值是value2*/ property:value1 value2 value3;  /*表示top的值是value1，right和left的值是value2，bottom的值是value3*/ property:value1 value2 value3 value4;  /*四个值依次表示top,right,bottom,left*/ 方便的记忆方法是顺时针，**上 右 下 左**。具体应用在margin和padding的例子如下： margin:1em 0 2em 0.5em; 边框 border 边框的属性如下： border-width:1px; border-style:solid; border-color:\\#000; 可以缩写为一句： border:1px solid \\#000; 语法是border:尺寸样式颜色; 背景 Backgrounds 背景的属性如下： background-color:\\#f00; background-image:url(background.gif); background-repeat:no-repeat; background-attachment:fixed; background-position:0 0; 可以缩写为一句： background:\\#f00 url(background.gif) no-repeat fixed 0 0; 语法是background:背景颜色背景图片填充类型附属定位; 你可以省略其中一个或多个属性值，如果省略，该属性值将用浏览器默认值，默认值为： color: **transparent** image: **none** repeat: **repeat** attachment: **scroll** position: **0% 0%** 字体 fonts 字体的属性如下： font-style:italic; font-variant:small-caps; font-weight:bold; font-size:1em; line-height:140%; font-family:\"Lucida Grande\",sans-serif; 可以缩写为一句： font:italic small-caps bold 1em/140% \"Lucida Grande\",sans-serif; 注意，如果你缩写字体定义，至少要定义font-size和font-family两个值。 列表 lists 取消默认的圆点和序号可以这样写list-style:none;, list的属性如下: list-style-type:square; list-style-position:inside; list-style-image:url(image.gif); 可以缩写为一句： list-style:square inside url(image.gif); ","date":1586328684119,"updated":1586328684120,"size":1679},{"title":"在windows中创建软链接，junction的使用方法","slug":"create-a-soft-link-in-the-windows-junction-of-use","content":" junction 软链接也可以称作符号链接，类似于unix中的ln -s。 其实windows也是有这个功能的，不过windows貌似没有内置相关的符号连接工具。最好用的工具应该是Microsoft网站上提供的SysInternals套件，里面包含了大量的实用程序，其中junction.exe就是用来管理符号连接的。 使用junction所创建的符号链接文件夹并不会占用任何磁盘空间，它仅仅是指向了源文件夹。 官方网址：[http://technet.microsoft.com/en-us/sysinternals/bb896768][0] 适用环境 * 必需为NTFS文件格式 * windows XP+ * windows server 2003+ 下载安装 地址：[http://download.sysinternals.com/Files/Junction.zip][1] 将junction.zip解压得到junction.exe，直接扔到C:\\WINDOWS\\system32 命令格式 创建 junction [-s] 链接路径 源路径 *其中参数-s为递归子文件夹 删除 junction -d 链接路径 举例 D盘中有个文件夹movies，存储大量的视频，想实现访问C:\\movies等于访问D\"\\movies的效果。 首先确保C盘下不存在 movies文件夹，之后开始-&gt;运行(windows功能键+R也可)，出入cmd调出命令行，执行以下代码： junction -s C:\\movies D:\\movies 出现提示： Created: C:\\movies Targetted at: D:\\movies 此时，软链接创建完毕。 而删除时只需要： junction -d C:\\movies 很方便吧~ 用这种方法可以配合同步网盘，将比较大的硬盘用来存储，工作盘可以挪到系统盘上。 [0]: http://technet.microsoft.com/en-us/sysinternals/bb896768 [1]: http://download.sysinternals.com/Files/Junction.zip","date":1297508497000,"updated":1586328684118,"size":1436},{"title":"CSS3自定义滚动条样式","slug":"css3-custom-scrollbar","content":" 滚动条主体 // 具体含义及其他设置项： ::-webkit-scrollbar {...}                // 滚动条整体部分 ::-webkit-scrollbar-thumb {...}          // 滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条） ::-webkit-scrollbar-track {...}          // 滚动条的轨道（里面装有Thumb） ::-webkit-scrollbar-button {...}         // 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。 ::-webkit-scrollbar-track-piece {...}    // 内层轨道，滚动条中间部分（除去） ::-webkit-scrollbar-corner {...}         // 边角，即两个滚动条的交汇处 ::-webkit-resizer {...}                  // 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件 伪类 :horizontal {...}      // horizontal伪类适用于任何水平方向上的滚动条   :vertical {...}        // vertical伪类适用于任何垂直方向的滚动条      :decrement {...}       // decrement伪类适用于按钮和轨道碎片。表示递减的按钮或轨道碎片，例如可以使区域向上或者向右移动的区域和按钮      :increment {...}       // increment伪类适用于按钮和轨道碎片。表示递增的按钮或轨道碎片，例如可以使区域向下或者向左移动的区域和按钮      :start {...}           // start伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的前面      :end {...}             // end伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的后面      :double-button {...}   // double-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一对按钮。也就是轨道碎片紧挨着一对在一起的按钮。      :single-button {...}   // single-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一个按钮。也就是轨道碎片紧挨着一个单独的按钮。      :no-button {...}       // no-button伪类表示轨道结束的位置没有按钮。      :corner-present {...}  // corner-present伪类表示滚动条的角落是否存在。      :window-inactive {...} //适用于所有滚动条，表示包含滚动条的区域，焦点不在该窗口的时候。 示例 // 滚动条上半边或左半边 ::-webkit-scrollbar-track-piece:start {...}   // 当焦点不在当前区域滑块的状态 ::-webkit-scrollbar-thumb:window-inactive {...}   // 当鼠标在水平滚动条下面的按钮上的状态 ::-webkit-scrollbar-button:horizontal:decrement:hover {...}   常用 /* 定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸 */ ::-webkit-scrollbar {     width: 10px;     height: 10px;     background-color: #F5F5F5  } /* 定义滚动条轨道 内阴影+圆角 */ ::-webkit-scrollbar-track {     -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);     border-radius: 10px;     background-color: #FFF; } /* 定义滑块 内阴影+圆角 */ ::-webkit-scrollbar-thumb {     border-radius: 10px;     -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);     background-color: #aaa; } ","date":1527914448000,"updated":1586328684121,"size":2101},{"title":"CSS3圆角属性在各浏览器中的实现","slug":"css3-rounded-attributes-of-the-implementation-of-the-browser","content":" 圆角属性border-radius在CSS3中出现了，目前为止IE仍然没有支持它... 这里就不浪费口水了。 根据浏览器所用引擎的不同，圆角的使用方式也略有不同。 火狐 firefox目前还不能直接支持border-radius，所以只能使用其特有的属性。 代码结构：-moz-border-radius: {1,4} | inherit 如果设置四个角都是一样圆角的话，可以这样 -moz-border-radius:5px; 当然也可根据需要对四个角单独设置，顺序是顺时针从左上开始，上左、上右、下右、下左， -moz-border-radius-topleft: 5px; -moz-border-radius-topright: 5px; -moz-border-radius-bottomright: 5px; -moz-border-radius-bottomleft: 5px; 也可以用合并起来一起设置 -moz-border-radius:5px 0 5px 0; webkit Safari, Google Chrome 都是基于Webkit 的。 代码结构：-webkit-border-radius：{1,2} | inherit; 如果设置四个角都是一样圆角的话，可以这样 -webkit-border-radius:3px; 如果是单独设置四个角的话，需要采取这种方式 -webkit-border-top-left-radius:3px 5px; -webkit-border-top-right-radius:3px 5px; -webkit-border-bottom-right-radius:3px 5px; -webkit-border-bottom-left-radius:3px 5px; webkit的每个角都能设置的更加细致，分别对每个角的x、y进行设置，表现出非正圆的弧形，带来的问题就是无法像火狐那样全部合并来写。 如果是要合并的话，只能使用-webkit-border-radius:3px;或者-webkit-border-radius:3px 5px; 非window环境 在Unix/Linux/BSD系统中非火狐浏览器，主要使用KED出品的khtml引擎。 代码结构：-khtml-border-radius: {1,2} | inherit 类似于webkit。怎么说呢，虽然是小众，加上也无妨。 IE 要不是因为在中国拥有50%以上的占有率还真不想提它，这个恨呐！ 刚在网上翻了翻，还真有解决的办法。 在样式表里增加行为(behavior)，什么东西？你懂的！以前写hover的时候用过，这里还得用。 为了兼容IE，可以用以下代码： -moz-border-radius: 15px; -khtml-border-radius: 15px; -webkit-border-radius: 15px; border-radius: 15px; behavior: url(border-radius.htc); 效果演示 [http://unite.codante.org/development/tester/border-radius/][0] 下载：[border-radius.zip][1] [0]: http://unite.codante.org/development/tester/border-radius/ [1]: http://codante.org/wp-content/uploads/2011/02/border-radius.zip","date":1297395693000,"updated":1586328684121,"size":2016},{"title":"检测移动设备及鼠标/触摸事件兼容","slug":"detecting-mobile-device-event","content":" **MAC触摸板也支持touch，加入了区分判断** (function () {     // IOS desktop has touch events, make them busting     var hasTouch = !!(('ontouchstart' in global && !/Mac OS X /.test(global.navigator.userAgent)) || global.DocumentTouch && document instanceof global.DocumentTouch);     return {         hasTouch: hasTouch,         startEvt: hasTouch ? 'touchstart' : 'mousedown',         moveEvt: hasTouch ? 'touchmove' : 'mousemove',         endEvt: hasTouch ? 'touchend' : 'mouseup',         cancelEvt: hasTouch ? 'touchcancel' : 'mouseout',         resizeEvt: 'onorientationchange' in global ? 'orientationchange' : 'resize'     }; })(); ","date":1586328684123,"updated":1586328684123,"size":688},{"title":"Cydia更改模式-三种模式自由切换","slug":"cydia-change-the-mode-to-switch-three-modes","content":" 中文版的 Cydia -&gt; 软件源 -&gt; 设置 -&gt; 选择模式 For english Cydia -&gt; Sources -&gt; Settings -&gt; Choose 上午想装个vim，怎么也找不到软件包，发现模式不对，又不知道在哪改... 说实话 cydia这玩意装上以后就基本上没在碰过，搜了半天也没个说明白的，还差点重装了（凸那些乱出主意的）","date":1309490507000,"updated":1586328684122,"size":601},{"title":"判断 iframe 是否加载完成的完美方法","slug":"determine-the-method-of-iframe-loaded","content":" var iframe = document.createElement(\"iframe\"); iframe.src = \"http://www.planabc.net\"; if (iframe.attachEvent){ iframe.attachEvent(\"onload\", function(){     alert(\"Local iframe is now loaded.\"); }); } else { iframe.onload = function(){     alert(\"Local iframe is now loaded.\"); }; } document.body.appendChild(iframe); ","date":1586328684124,"updated":1586328684124,"size":386},{"title":"MPEG-2，MPEG-4，H.264 编码标准的区别","slug":"different-in-mpeg2-mpeg4-h264","content":" 宏块匹配像素精度 - MPEG2中，运动估计的精度是1/2的像素，通过线性插值实现（可能有简单修正）； - H.264和MPEG4 都可以支持1/4像素的精度； 参考帧的数量 - MPEG2，MPEG4的P帧只能有一帧参考帧，B帧可以有两帧参考帧； - H.264可以最多有15帧参考帧，一般情况下选择3-5帧作为参考帧； 滤波器的结构 - 插值滤波器 \t- MPEG4里面是简单的线性插值； \t- H.264里面是5抽头的滤波器； - deblocking \t- MPEG2没有环内deblocking工具； \t- MPEG4有deblocking工具，但是属于postprocessing; \t- H.264有环内deblocking工具； I帧的编码 - MPEG2没有INTRA预测，但是有DC参数预测； - MPEG4没有INTRA预测，支持DC预测，并且支持两个AC参数的预测； - H.264支持INTRA预测，4*4共有9种模式； 匹配宏块大小的区别 - MPEG2最小匹配块尺寸为8*8； - MPEG4同样也为8*8； - H.264最小可以到4*4尺寸； DCT变换的不同 - MPEG系列为8*8的DCT变换，逆变换时会出现漂移现象； - H.264为整数4*4的DCT变换，而且直流系数经过HADMARD变换之后做的DCT变换，整数DCT变换可以防止逆变换时出现漂移现象； 量化之后的编码 - MPEG2/MPEG4则都是基于huffman，并且头部的语法相对比较简单，很少使用变长码； - H.264提供基于上下文的CAVLC和CABAC； 编码之后的结构 - MPEG2/MPEG4都是分层结构； - H.264则是提供NAL单层结构，提供参数集合的形式； 量化参数的区别 - MPEG4提供31个量化参数（量化模式：常量化，系统默认量化矩阵，自定义量化矩阵）； - H.264提供51个量化参数（量化模式：常量化，量化矩阵，自定义有否还不确定）；","date":1586328684125,"updated":1586328684125,"size":944},{"title":"设计模式","slug":"design-pattern","content":" 创建型 Factory Method（工厂方法） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey69scmmiaj20eo050jrp.jpg) 意图 定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method 使一个类的实例化延迟到其子类。 适用性 当一个类不知道它所必须创建的对象的类的时候。 当一个类希望由它的子类来指定它所创建的对象的时候。 当类将创建对象的职责委托给多个帮助子类中的某一个，并且你希望将哪一个帮助子类是代理者这一信息局部化的时候。 Abstract Factory（抽象工厂） ![](http://ww2.sinaimg.cn/large/699ef9c0jw1ey699h2iq8j20fw077gm9.jpg) 意图 提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。 适用性 一个系统要独立于它的产品的创建、组合和表示时。 一个系统要由多个产品系列中的一个来配置时。 当你要强调一系列相关的产品对象的设计以便进行联合使用时。 当你提供一个产品类库，而只想显示它们的接口而不是实现时。 Builder（建造者） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey69xu3hijj20fb05a74h.jpg) 意图 将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。 适用性 当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。 当构造过程必须允许被构造的对象有不同的表示时。 Prototype（原型） ![](http://ww4.sinaimg.cn/large/699ef9c0jw1ey69ydhs0jj20dr06cwes.jpg) 意图 用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。 适用性 当要实例化的类是在运行时刻指定时，例如，通过动态装载；或者 为了避免创建一个与产品类层次平行的工厂类层次时；或者 当一个类的实例只能有几个不同状态组合中的一种时。建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。 Singleton（单例） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey69zvor67j20az03u0st.jpg) 意图 保证一个类仅有一个实例，并提供一个访问它的全局访问点。 适用性 当类只能有一个实例而且客户可以从一个众所周知的访问点访问它时。 当这个唯一实例应该是通过子类化可扩展的，并且客户应该无需更改代码就能使用一个扩展的实例时。 结构型 Adapter Class/Object（适配器） ![](http://ww2.sinaimg.cn/large/699ef9c0jw1ey6a0dj8smj20ed0an3z2.jpg) 意图 将一个类的接口转换成客户希望的另外一个接口。Adapter 模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。 适用性 你想使用一个已经存在的类，而它的接口不符合你的需求。 你想创建一个可以复用的类，该类可以与其他不相关的类或不可预见的类（即那些接口可能不一定兼容的类）协同工作。 （仅适用于对象Adapter）你想使用一些已经存在的子类，但是不可能对每一个都进行子类化以匹配它们的接口。对象适配器可以适配它的父类接口。 Bridge（桥接） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey6a0vnhksj20fe067wes.jpg) 意图 将抽象部分与它的实现部分分离，使它们都可以独立地变化。 适用性 你不希望在抽象和它的实现部分之间有一个固定的绑定关系。例如这种情况可能是因为，在程序运行时刻实现部分应可以被选择或者切换。 类的抽象以及它的实现都应该可以通过生成子类的方法加以扩充。这时Bridge 模式使你可以对不同的抽象接口和实现部分进行组合，并分别对它们进行扩充。 对一个抽象的实现部分的修改应对客户不产生影响，即客户的代码不必重新编译。 （C++）你想对客户完全隐藏抽象的实现部分。在C++中，类的表示在类接口中是可见的。 有许多类要生成。这样一种类层次结构说明你必须将一个对象分解成两个部分。Rumbaugh 称这种类层次结构为“嵌套的普化”（nested generalizations）。 你想在多个对象间共享实现（可能使用引用计数），但同时要求客户并不知道这一点。一个简单的例子便是Coplien 的String 类，在这个类中多个对象可以共享同一个字符串表示（StringRep）。 Composite（组合） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey6a1znrvmj20fb06ut93.jpg) 意图 将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。 适用性 你想表示对象的部分-整体层次结构。 你希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。 ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey6a6mopmxj20fd06sq3d.jpg) 意图 动态地给一个对象添加一些额外的职责。就增加功能来说，Decorator 模式相比生成子类更为灵活。 适用性 在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责。 处理那些可以撤消的职责。 当不能采用生成子类的方法进行扩充时。一种情况是，可能有大量独立的扩展，为支持每一种组合将产生大量的子类，使得子类数目呈爆炸性增长。另一种情况可能是因为类定义被隐藏，或类定义不能用于生成子类。 Facade（外观） ![](http://ww3.sinaimg.cn/large/699ef9c0jw1ey6a78rls0j20d7054q32.jpg) 意图 为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。 适用性 当你要为一个复杂子系统提供一个简单接口时。子系统往往因为不断演化而变得越来越复杂。大多数模式使用时都会产生更多更小的类。这使得子系统更具可重用性，也更容易对子系统进行定制，但这也给那些不需要定制子系统的用户带来一些使用上的困难。Facade 可以提供一个简单的缺省视图，这一视图对大多数用户来说已经足够，而那些需要更多的可定制性的用户可以越过facade层。 客户程序与抽象类的实现部分之间存在着很大的依赖性。引入facade 将这个子系统与客户以及其他的子系统分离，可以提高子系统的独立性和可移植性。 当你需要构建一个层次结构的子系统时，使用facade模式定义子系统中每层的入口点。如果子系统之间是相互依赖的，你可以让它们仅通过facade进行通讯，从而简化了它们之间的依赖关系。 Flyweight（享元） ![](http://ww3.sinaimg.cn/large/699ef9c0jw1ey6a7pbw4dj20ft09xaaq.jpg) 意图 运用共享技术有效地支持大量细粒度的对象。 适用性 一个应用程序使用了大量的对象。 完全由于使用大量的对象，造成很大的存储开销。 对象的大多数状态都可变为外部状态。 如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象。 应用程序不依赖于对象标识。由于Flyweight 对象可以被共享，对于概念上明显有别的对象，标识测试将返回真值。 Proxy（代理） ![](http://ww3.sinaimg.cn/large/699ef9c0jw1ey6a9bnfsjj20du05ht8u.jpg) 意图 为其他对象提供一种代理以控制对这个对象的访问。 适用性 在需要用比较通用和复杂的对象指针代替简单的指针的时候，使用Proxy模式。下面是一 些可以使用Proxy 模式常见情况： 1. 远程代理（Remote Proxy）为一个对象在不同的地址空间提供局部代表。 NEXTSTEP使用NXProxy 类实现了这一目的。Coplien称这种代理为“大使” （Ambassador）。 2. 虚代理（Virtual Proxy）根据需要创建开销很大的对象。在动机一节描述的ImageProxy 就是这样一种代理的例子。 3. 保护代理（Protection Proxy）控制对原始对象的访问。保护代理用于对象应该有不同 的访问权限的时候。例如，在Choices 操作系统中KemelProxies为操作系统对象提供 了访问保护。 4. 智能指引（Smart Reference）取代了简单的指针，它在访问对象时执行一些附加操作。 它的典型用途包括： \t- 对指向实际对象的引用计数，这样当该对象没有引用时，可以自动释放它（也称为SmartPointers）。 \t- 当第一次引用一个持久对象时，将它装入内存。 \t- 在访问一个实际对象前，检查是否已经锁定了它，以确保其他对象不能改变它。 行为型 Interpreter（解释器） ![](http://ww4.sinaimg.cn/large/699ef9c0jw1ey6a85310dj20bw068jrn.jpg) 意图 给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。 适用性 当有一个语言需要解释执行，并且你可将该语言中的句子表示为一个抽象语法树时，可使用解释器模式。而当存在以下情况时该模式效果最好： 该文法简单对于复杂的文法，文法的类层次变得庞大而无法管理。此时语法分析程序生成器这样的工具是更好的选择。它们无需构建抽象语法树即可解释表达式，这样可以节省空间而且还可能节省时间。 效率不是一个关键问题最高效的解释器通常不是通过直接解释语法分析树实现的，而是首先将它们转换成另一种形式。例如，正则表达式通常被转换成状态机。但即使在这种情况下，转换器仍可用解释器模式实现，该模式仍是有用的。 Template Method（模板方法） ![](http://ww4.sinaimg.cn/large/699ef9c0jw1ey6a9tl0h2j20ad05zweo.jpg) 意图 定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。TemplateMethod 使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。 适用性 一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现。 各子类中公共的行为应被提取出来并集中到一个公共父类中以避免代码重复。这是Opdyke 和Johnson 所描述过的“重分解以一般化”的一个很好的例子。首先识别现有代码中的不同之处，并且将不同之处分离为新的操作。最后，用一个调用这些新的操作的模板方法来替换这些不同的代码。 控制子类扩展。模板方法只在特定点调用“hook ”操作（参见效果一节），这样就只允许在这些点进行扩展。 Chain of Responsibility（责任链） ![](http://ww4.sinaimg.cn/large/699ef9c0jw1ey6abfcf5vj20aa0560su.jpg) 意图 使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。 适用性 有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。 你想在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。 可处理一个请求的对象集合应被动态指定。 Command（命令） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey6abppgarj20fe04u74i.jpg) 意图 将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤消的操作。 适用性 抽象出待执行的动作以参数化某对象，你可用过程语言中的回调（call back）函数表达这种参数化机制。所谓回调函数是指函数先在某处注册，而它将在稍后某个需要的时候被调用。Command 模式是回调机制的一个面向对象的替代品。 在不同的时刻指定、排列和执行请求。一个Command对象可以有一个与初始请求无关的生存期。如果一个请求的接收者可用一种与地址空间无关的方式表达，那么就可将负责该请求的命令对象传送给另一个不同的进程并在那儿实现该请求。 支持取消操作。Command的Excute 操作可在实施操作前将状态存储起来，在取消操作时这个状态用来消除该操作的影响。Command 接口必须添加一个Unexecute操作，该操作取消上一次Execute调用的效果。执行的命令被存储在一个历史列表中。可通过向后和向前遍历这一列表并分别调用Unexecute和Execute来实现重数不限的“取消”和“重做”。 支持修改日志，这样当系统崩溃时，这些修改可以被重做一遍。在Command接口中添加装载操作和存储操作，可以用来保持变动的一个一致的修改日志。从崩溃中恢复的过程包括从磁盘中重新读入记录下来的命令并用Execute操作重新执行它们。 用构建在原语操作上的高层操作构造一个系统。这样一种结构在支持事务（transaction）的信息系统中很常见。一个事务封装了对数据的一组变动。Command模式提供了对事务进行建模的方法。Command有一个公共的接口，使得你可以用同一种方式调用所有的事务。同时使用该模式也易于添加新事务以扩展系统。 Iterator（迭代器） ![](http://ww3.sinaimg.cn/large/699ef9c0jw1ey6ac8tkioj20ek06qmxh.jpg) 意图 提供一种方法顺序访问一个聚合对象中各个元素，而又不需暴露该对象的内部表示。 适用性 访问一个聚合对象的内容而无需暴露它的内部表示。 支持对聚合对象的多种遍历。 为遍历不同的聚合结构提供一个统一的接口（即，支持多态迭代）。 Mediator（中介者） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey6acknpu0j20dz03rdfx.jpg) 意图 用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。 适用性 一组对象以定义良好但是复杂的方式进行通信。产生的相互依赖关系结构混乱且难以理解。 一个对象引用其他很多对象并且直接与这些对象通信，导致难以复用该对象。 想定制一个分布在多个类中的行为，而又不想生成太多的子类。 Memento（备忘录） ![](http://ww1.sinaimg.cn/large/699ef9c0jw1ey6acxk2jij20f104faab.jpg) 意图 在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样以后就可将该对象恢复到原先保存的状态。 适用性 必须保存一个对象在某一个时刻的（部分）状态，这样以后需要时它才能恢复到先前的状态。 如果一个用接口来让其它对象直接得到这些状态，将会暴露对象的实现细节并破坏对象的封装性。 Observer（观察者） ![](http://ww2.sinaimg.cn/large/699ef9c0jw1ey6ad7vvbsj20fe05pt98.jpg) 意图 定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。 适用性 当一个抽象模型有两个方面，其中一个方面依赖于另一方面。将这二者封装在独立的对象中以使它们可以各自独立地改变和复用。 当对一个对象的改变需要同时改变其它对象，而不知道具体有多少对象有待改变。 当一个对象必须通知其它对象，而它又不能假定其它对象是谁。换言之，你不希望这些对象是紧密耦合的。 State（状态） ![](http://ww4.sinaimg.cn/large/699ef9c0jw1ey6adna8v1j20ck04njri.jpg) 意图 允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。 适用性 一个对象的行为取决于它的状态，并且它必须在运行时刻根据状态改变它的行为。 一个操作中含有庞大的多分支的条件语句，且这些分支依赖于该对象的状态。这个状态通常用一个或多个枚举常量表示。通常，有多个操作包含这一相同的条件结构。State模式将每一个条件分支放入一个独立的类中。这使得你可以根据对象自身的情况将对象的状态作为一个对象，这一对象可以不依赖于其他对象而独立变化。 Strategy（策略） ![](http://ww2.sinaimg.cn/large/699ef9c0jw1ey6adz59bqj20el04o74k.jpg) 意图 定义一系列的算法，把它们一个个封装起来，并且使它们可相互替换。本模式使得算法可独立于使用它的客户而变化。 适用性 许多相关的类仅仅是行为有异。“策略”提供了一种用多个行为中的一个行为来配置一个类的方法。 需要使用一个算法的不同变体。例如，你可能会定义一些反映不同的空间/时间权衡的算法。当这些变体实现为一个算法的类层次时，可以使用策略模式。 算法使用客户不应该知道的数据。可使用策略模式以避免暴露复杂的、与算法相关的数据结构。 一个类定义了多种行为，并且这些行为在这个类的操作中以多个条件语句的形式出现。将相关的条件分支移入它们各自的Strategy类中以代替这些条件语句。 Visitor（访问者） ![](http://ww4.sinaimg.cn/large/699ef9c0jw1ey6aedb8whj20ad05x74i.jpg) 意图 定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。TemplateMethod 使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。 适用性 一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现。 各子类中公共的行为应被提取出来并集中到一个公共父类中以避免代码重复。这是Opdyke和Johnson所描述过的“重分解以一般化”的一个很好的例子。首先识别现有代码中的不同之处，并且将不同之处分离为新的操作。最后，用一个调用这些新的操作的模板方法来替换这些不同的代码。 控制子类扩展。模板方法只在特定点调用“hook ”操作（参见效果一节），这样就只允许在这些点进行扩展。","date":1586328684123,"updated":1586328684123,"size":8289},{"title":"判断javascript加载完成的方法","slug":"determine-the-method-of-javascript-loaded","content":" function include_js(file) { var _doc = document.getElementsByTagName('head')[0]; var js = document.createElement('script'); js.setAttribute('type', 'text/javascript'); js.setAttribute('src', file); _doc.appendChild(js); if (!/*@cc_on!@*/0) { //if not IE     //Firefox2、Firefox3、Safari3.1+、Opera9.6+ support js.onload     js.onload = function () {         alert('Firefox2、Firefox3、Safari3.1+、Opera9.6+ support js.onload');     } } else {     //IE6、IE7 support js.onreadystatechange     js.onreadystatechange = function () {         if (js.readyState == 'loaded' || js.readyState == 'complete') {             alert('IE6、IE7 support js.onreadystatechange');         }     } } return false; } //execution function include_js('http://www.planabc.net/wp-includes/js/jquery/jquery.js'); ","date":1586328684125,"updated":1586328684125,"size":846},{"title":"【ES6】中的import，export，default","slug":"es6-import-export-default-cheatsheet","content":" ![](http://static.0.codante.org/5/6/56470bf3538dfd279f58638cd607ef401196fdbb.png) 命名导出 //------ lib.js ------ export const sqrt = Math.sqrt; export function square(x) {     return x * x; } export function diag(x, y) {     return sqrt(square(x) + square(y)); } //------ main.js ------ import { square, diag } from 'lib'; console.log(square(11)); // 121 console.log(diag(4, 3)); // 5 或者 //------ main.js ------ import * as lib from 'lib'; console.log(lib.square(11)); // 121 console.log(lib.diag(4, 3)); // 5 默认导出 //------ myFunc.js ------ export default function () { ... }; //------ main.js ------ import myFunc from 'myFunc'; myFunc(); 命名 + 默认 导出 //------ underscore.js ------ export default function (obj) {     ... } export function each(obj, iterator, context) {     ... } export { each as forEach } //------ main.js ------ import _, { each } from 'underscore'; ... 环形依赖 // lib.js import Main from 'main'; var lib = {message: \"This Is A Lib\"}; export { lib as Lib }; // main.js import { Lib } from 'lib'; export default class Main {    // .... } **参考资料** [http://2ality.com/2014/09/es6-modules-final.html]() [https://gist.github.com/vasco3/22b09ef0ca5e0f8c5996#modules]()","date":1544694719000,"updated":1586328684128,"size":1415},{"title":"一些很实用的英文口头语","slug":"english-spoken-some-very-useful","content":" - low key 低调   - I've been back and forth.我犹豫不定。 - squeezed juice 鲜榨的果汁 - juice with pulp 带果肉的果汁 - side effect 副作用 - he can't come to the phone now.他现在不能接电话 - herbal tea 花草茶 - ready for a refill? 我再给你倒一杯吧？ - i love what u have done with this place.我喜欢这里的布置。 - what was tonight?今晚本来要做什么？ - i can't feel my hands.我手麻了。 - have an affair 外遇 - will anyone miss me if i weren't here? 我在不在这里有什么区别吗？ - i saw a lot of stuff. 我大开眼界了、 - call security 通知警卫 - dog walker 遛狗的人 - does sth. mean squat to u? 对你来说sth狗屁不是吗？ - what's up with the greedy? 怎么这么贪啊？ - work an extra shift 多轮一班 - go on, i dare u!  有种你就去！ - u r a freak!  你这个变态！ - i sensed it was u. 我感觉到是你了、 - i apologize on behalf of him.我替他道歉。 - why are u changing the subject?为什么要转移话题？ - this is so meant to be! 这就是天意！ - there's no need to place blame. 没有指责的必要。 - curling iron 卷发机 - it's gonna leave a stain。这要留印子的。 - i have part of the fault. 我也有责任。 - distract her with a doll 拿娃娃哄她开心 - they are all well received 收到的反响都很好 - talk u up 说你的好话 - stand firm to  努力坚持 - i was just leering 我只是用余光看看 - organize my thoughts 整理思绪 - get a little preoccupied 事先有事 - no way to recover 没有掩饰的机会了 - bouncy  活泼 - intern    实习生 - mug   抢劫 - drug dealer 毒贩子 - admire your candor   你还真胆大 - we are rolling  摄像机正在拍摄 - hairnet  发罩 - go through this stack 看看这一叠 - r u spying on me？你监视我？ - just messing with u！跟你开玩笑呢！ - enough is enough！闹够了 - flyers 寻人（物）海报 - it's insensitive of me。 我这么做很伤人 - u don't have to be brag。 拽什么啊？ - nod along   跟着点头 - a totally separate subject 完全题外话 - i thought it was the other way around 我以为是反过来的 - close my account 注销银行卡 - cuff him 把他铐起来 - Woody，tingly 痒 - creep me out 雷死我了 - no peeking 不要偷看啊 - sneakbite kit  毒蛇解药 - i feel wild today 我今天好亢奋！ - I'm kind of beat 我有点累了 - my ears r ringing so bad.我耳鸣得厉害。 - can u get the door?你能去开门吗 - make a huge fool of myself 出了洋相 - r u mocking me?你嘲笑我？ - hatrack 草包 - sth.is beyond crap 那是扯淡 - any luck? 找到了吗？ - don't u rush me. 别催我！ - it doesn't count. 那不算。 - she's gonna be crushed. 她会崩溃的。 - she's healed.她好了。（病或者伤害） - goose bumps 鸡皮疙瘩 - overreact 反应过度 - patch things up with sb.和某人修复关系 - pierce my ears 打耳洞 - corss that off my list 从单子上划掉 - how did it go? 怎么样？ - present an award 颁奖 - natural charisma 天生丽质 - cut him some slack 放他一马 - get over with 忘记 - get in line 排队（everybody get in line)大家排好队 - i don't have the energy for this 我没有能力应付这个 - u got me. 你还真问住我了","date":1292387647000,"updated":1586328684127,"size":2748},{"title":"文件类型与 mime-type 对对照表","slug":"files-mime-type","content":" | 文件后缀 | mime-type | |---|---| | .*（二进制流，不知道下载文件类型） | application/octet-stream | | .tif | image/tiff | | .001 | application/x-001 | | .301 | application/x-301 | | .323 | text/h323 | | .906 | application/x-906 | | .907 | drawing/907 | | .a11 | application/x-a11 | | .acp | audio/x-mei-aac | | .ai | application/postscript | | .aif | audio/aiff | | .aifc | audio/aiff | | .aiff | audio/aiff | | .anv | application/x-anv | | .asa | text/asa | | .asf | video/x-ms-asf | | .asp | text/asp | | .asx | video/x-ms-asf | | .au | audio/basic | | .avi | video/avi | | .awf | application/vnd.adobe.workflow | | .biz | text/xml | | .bmp | application/x-bmp | | .bot | application/x-bot | | .c4t | application/x-c4t | | .c90 | application/x-c90 | | .cal | application/x-cals | | .cat | application/vnd.ms-pki.seccat | | .cdf | application/x-netcdf | | .cdr | application/x-cdr | | .cel | application/x-cel | | .cer | application/x-x509-ca-cert | | .cg4 | application/x-g4 | | .cgm | application/x-cgm | | .cit | application/x-cit | | .class | java/* | | .cml | text/xml | | .cmp | application/x-cmp | | .cmx | application/x-cmx | | .cot | application/x-cot | | .crl | application/pkix-crl | | .crt | application/x-x509-ca-cert | | .csi | application/x-csi | | .css | text/css | | .cut | application/x-cut | | .dbf | application/x-dbf | | .dbm | application/x-dbm | | .dbx | application/x-dbx | | .dcd | text/xml | | .dcx | application/x-dcx | | .der | application/x-x509-ca-cert | | .dgn | application/x-dgn | | .dib | application/x-dib | | .dll | application/x-msdownload | | .doc | application/msword | | .dot | application/msword | | .drw | application/x-drw | | .dtd | text/xml | | .dwf | Model/vnd.dwf | | .dwf | application/x-dwf | | .dwg | application/x-dwg | | .dxb | application/x-dxb | | .dxf | application/x-dxf | | .edn | application/vnd.adobe.edn | | .emf | application/x-emf | | .eml | message/rfc822 | | .ent | text/xml | | .epi | application/x-epi | | .eps | application/x-ps | | .eps | application/postscript | | .etd | application/x-ebx | | .exe | application/x-msdownload | | .fax | image/fax | | .fdf | application/vnd.fdf | | .fif | application/fractals | | .fo | text/xml | | .frm | application/x-frm | | .g4 | application/x-g4 | | .gbr | application/x-gbr | | .gif | image/gif | | .gl2 | application/x-gl2 | | .gp4 | application/x-gp4 | | .hgl | application/x-hgl | | .hmr | application/x-hmr | | .hpg | application/x-hpgl | | .hpl | application/x-hpl | | .hqx | application/mac-binhex40 | | .hrf | application/x-hrf | | .hta | application/hta | | .htc | text/x-component | | .htm | text/html | | .html | text/html | | .htt | text/webviewhtml | | .htx | text/html | | .icb | application/x-icb | | .ico | image/x-icon | | .ico | application/x-ico | | .iff | application/x-iff | | .ig4 | application/x-g4 | | .igs | application/x-igs | | .iii | application/x-iphone | | .img | application/x-img | | .ins | application/x-internet-signup | | .isp | application/x-internet-signup | | .IVF | video/x-ivf | | .java | java/* | | .jfif | image/jpeg | | .jpe | image/jpeg | | .jpe | application/x-jpe | | .jpeg | image/jpeg | | .jpg | image/jpeg | | .jpg | application/x-jpg | | .js | application/x-javascript | | .jsp | text/html | | .la1 | audio/x-liquid-file | | .lar | application/x-laplayer-reg | | .latex | application/x-latex | | .lavs | audio/x-liquid-secure | | .lbm | application/x-lbm | | .lmsff | audio/x-la-lms | | .ls | application/x-javascript | | .ltr | application/x-ltr | | .m1v | video/x-mpeg | | .m2v | video/x-mpeg | | .m3u | audio/mpegurl | | .m4e | video/mpeg4 | | .mac | application/x-mac | | .man | application/x-troff-man | | .math | text/xml | | .mdb | application/msaccess | | .mdb | application/x-mdb | | .mfp | application/x-shockwave-flash | | .mht | message/rfc822 | | .mhtml | message/rfc822 | | .mi | application/x-mi | | .mid | audio/mid | | .midi | audio/mid | | .mil | application/x-mil | | .mml | text/xml | | .mnd | audio/x-musicnet-download | | .mns | audio/x-musicnet-stream | | .mocha | application/x-javascript | | .movie | video/x-sgi-movie | | .mp1 | audio/mp1 | | .mp2 | audio/mp2 | | .mp2v | video/mpeg | | .mp3 | audio/mp3 | | .mp4 | video/mpeg4 | | .mpa | video/x-mpg | | .mpd | application/vnd.ms-project | | .mpe | video/x-mpeg | | .mpeg | video/mpg | | .mpg | video/mpg | | .mpga | audio/rn-mpeg | | .mpp | application/vnd.ms-project | | .mps | video/x-mpeg | | .mpt | application/vnd.ms-project | | .mpv | video/mpg | | .mpv2 | video/mpeg | | .mpw | application/vnd.ms-project | | .mpx | application/vnd.ms-project | | .mtx | text/xml | | .mxp | application/x-mmxp | | .net | image/pnetvue | | .nrf | application/x-nrf | | .nws | message/rfc822 | | .odc | text/x-ms-odc | | .out | application/x-out | | .p10 | application/pkcs10 | | .p12 | application/x-pkcs12 | | .p7b | application/x-pkcs7-certificates | | .p7c | application/pkcs7-mime | | .p7m | application/pkcs7-mime | | .p7r | application/x-pkcs7-certreqresp | | .p7s | application/pkcs7-signature | | .pc5 | application/x-pc5 | | .pci | application/x-pci | | .pcl | application/x-pcl | | .pcx | application/x-pcx | | .pdf | application/pdf | | .pdf | application/pdf | | .pdx | application/vnd.adobe.pdx | | .pfx | application/x-pkcs12 | | .pgl | application/x-pgl | | .pic | application/x-pic | | .pko | application/vnd.ms-pki.pko | | .pl | application/x-perl | | .plg | text/html | | .pls | audio/scpls | | .plt | application/x-plt | | .png | image/png | | .png | application/x-png | | .pot | application/vnd.ms-powerpoint | | .ppa | application/vnd.ms-powerpoint | | .ppm | application/x-ppm | | .pps | application/vnd.ms-powerpoint | | .ppt | application/vnd.ms-powerpoint | | .ppt | application/x-ppt | | .pr | application/x-pr | | .prf | application/pics-rules | | .prn | application/x-prn | | .prt | application/x-prt | | .ps | application/x-ps | | .ps | application/postscript | | .ptn | application/x-ptn | | .pwz | application/vnd.ms-powerpoint | | .r3t | text/vnd.rn-realtext3d | | .ra | audio/vnd.rn-realaudio | | .ram | audio/x-pn-realaudio | | .ras | application/x-ras | | .rat | application/rat-file | | .rdf | text/xml | | .rec | application/vnd.rn-recording | | .red | application/x-red | | .rgb | application/x-rgb | | .rjs | application/vnd.rn-realsystem-rjs | | .rjt | application/vnd.rn-realsystem-rjt | | .rlc | application/x-rlc | | .rle | application/x-rle | | .rm | application/vnd.rn-realmedia | | .rmf | application/vnd.adobe.rmf | | .rmi | audio/mid | | .rmj | application/vnd.rn-realsystem-rmj | | .rmm | audio/x-pn-realaudio | | .rmp | application/vnd.rn-rn_music_package | | .rms | application/vnd.rn-realmedia-secure | | .rmvb | application/vnd.rn-realmedia-vbr | | .rmx | application/vnd.rn-realsystem-rmx | | .rnx | application/vnd.rn-realplayer | | .rp | image/vnd.rn-realpix | | .rpm | audio/x-pn-realaudio-plugin | | .rsml | application/vnd.rn-rsml | | .rt | text/vnd.rn-realtext | | .rtf | application/msword | | .rtf | application/x-rtf | | .rv | video/vnd.rn-realvideo | | .sam | application/x-sam | | .sat | application/x-sat | | .sdp | application/sdp | | .sdw | application/x-sdw | | .sit | application/x-stuffit | | .slb | application/x-slb | | .sld | application/x-sld | | .slk | drawing/x-slk | | .smi | application/smil | | .smil | application/smil | | .smk | application/x-smk | | .snd | audio/basic | | .sol | text/plain | | .sor | text/plain | | .spc | application/x-pkcs7-certificates | | .spl | application/futuresplash | | .spp | text/xml | | .ssm | application/streamingmedia | | .sst | application/vnd.ms-pki.certstore | | .stl | application/vnd.ms-pki.stl | | .stm | text/html | | .sty | application/x-sty | | .svg | text/xml | | .swf | application/x-shockwave-flash | | .tdf | application/x-tdf | | .tg4 | application/x-tg4 | | .tga | application/x-tga | | .tif | image/tiff | | .tif | application/x-tif | | .tiff | image/tiff | | .tld | text/xml | | .top | drawing/x-top | | .torrent | application/x-bittorrent | | .tsd | text/xml | | .txt | text/plain | | .uin | application/x-icq | | .uls | text/iuls | | .vcf | text/x-vcard | | .vda | application/x-vda | | .vdx | application/vnd.visio | | .vml | text/xml | | .vpg | application/x-vpeg005 | | .vsd | application/vnd.visio | | .vsd | application/x-vsd | | .vss | application/vnd.visio | | .vst | application/vnd.visio | | .vst | application/x-vst | | .vsw | application/vnd.visio | | .vsx | application/vnd.visio | | .vtx | application/vnd.visio | | .vxml | text/xml | | .wav | audio/wav | | .wax | audio/x-ms-wax | | .wb1 | application/x-wb1 | | .wb2 | application/x-wb2 | | .wb3 | application/x-wb3 | | .wbmp | image/vnd.wap.wbmp | | .wiz | application/msword | | .wk3 | application/x-wk3 | | .wk4 | application/x-wk4 | | .wkq | application/x-wkq | | .wks | application/x-wks | | .wm | video/x-ms-wm | | .wma | audio/x-ms-wma | | .wmd | application/x-ms-wmd | | .wmf | application/x-wmf | | .wml | text/vnd.wap.wml | | .wmv | video/x-ms-wmv | | .wmx | video/x-ms-wmx | | .wmz | application/x-ms-wmz | | .wp6 | application/x-wp6 | | .wpd | application/x-wpd | | .wpg | application/x-wpg | | .wpl | application/vnd.ms-wpl | | .wq1 | application/x-wq1 | | .wr1 | application/x-wr1 | | .wri | application/x-wri | | .wrk | application/x-wrk | | .ws | application/x-ws | | .ws2 | application/x-ws | | .wsc | text/scriptlet | | .wsdl | text/xml | | .wvx | video/x-ms-wvx | | .xdp | application/vnd.adobe.xdp | | .xdr | text/xml | | .xfd | application/vnd.adobe.xfd | | .xfdf | application/vnd.adobe.xfdf | | .xhtml | text/html | | .xls | application/vnd.ms-excel | | .xls | application/x-xls | | .xlw | application/x-xlw | | .xml | text/xml | | .xpl | audio/scpls | | .xq | text/xml | | .xql | text/xml | | .xquery | text/xml | | .xsd | text/xml | | .xsl | text/xml | | .xslt | text/xml | | .xwd | application/x-xwd | | .x_b | application/x-x_b | | .sis | application/vnd.symbian.install | | .sisx | application/vnd.symbian.install | | .x_t | application/x-x_t | | .ipa | application/vnd.iphone | | .apk | application/vnd.android.package-archive | | .xap | application/x-silverlight-app","date":1528382508000,"updated":1586328684129,"size":10194},{"title":"Excel CSV 解决自动科学技术法","slug":"excel-csv-serial-number","content":" 解决科学计数 用程序导出的csv数据字段如果为很长很长的数字，比如身份证，带区号的手机，带前导0的数字等，就会被转换成科学计数法 看例子 \"4173\",\"SpeedyCorp\",\"268435459705526269\",\"\",\"268435459705526269\",\"848 Model Widget\",\"2011-01-17\" 如果直接打开会出现 4173    SpeedyCorp  2.68435E+17     2.68435E+17 848 Model Widget    2011-01-17 长数字都被转换成科学计数法了... 其实在字段前加上\"=\"即可解决 \"4173\",\"SpeedyCorp\",=\"268435459705526269\",\"\",\"268435459705526269\",\"848 Model Widget\",\"2011-01-17\" 打开后 4173    SpeedyCorp  268435459705526269     2.68435E+17 848 Model Widget    2011-01-17 参考资料 [http://superuser.com/questions/234997/how-can-i-stop-excel-from-eating-my-delicious-csv-files-and-excreting-useless-da](http://superuser.com/questions/234997/how-can-i-stop-excel-from-eating-my-delicious-csv-files-and-excreting-useless-da)","date":1586328684129,"updated":1586328684129,"size":861},{"title":"Flash中的wmode参数详解","slug":"flash-wmode-parameter-in-the-detailed","content":" 参数详解 wmode即窗口模式总共有三种，看看当年Macromedia官方的说法： * Window: Use the Window value to play a Flash Player movie in its own  rectangular window on a web page. This is the default value for wmode  and it works the way the classic Flash Player works. This normally  provides the fastest animation performance. * Opaque: By using the Opaque value you can use JavaScript to  move or resize movies that don't need a transparent background. Opaque  mode makes the movie hide everything behind it on the page.  Additionally, opaque mode moves elements behind Flash movies (for  example, with dynamic HTML) to prevent them from showing through. * Transparent: Transparent mode allows the background of the HTML  page, or the DHTML layer underneath the Flash movie or layer, to show  through all the transparent portions of the movie. This allows you to  overlap the movie with other elements of the HTML page. Animation  performance might be slower when you use this value. window 默认情况下的显示模式，在这种模式下flash  player有自己的窗口句柄，这就意味着flash影片是存在于Windows中的一个显示实例，并且是在浏览器核心显示窗口之上的，所以flash只 是貌似显示在浏览器中，但这也是flash最快最有效率的渲染模式。由于他是独立于浏览器的HTML渲染表面，这就导致默认显示方式下flash总是会遮 住位置与他重合的所有DHTML层。 但是大多数苹果电脑浏览器会允许DHTML层显示在flash之上，但当flash影片播放时会出现比较诡异的现象，比如DHTML层像被flash刮掉一块一样显示异常。 opaque 这是一种无窗口模式，在这种情况下flash player没有自己的窗口句柄，这就需要浏览器需要告诉flash  player在浏览器的渲染表面绘制的时间和位置。这时flash影片就不会在高于浏览器HTML渲染表面而是与其他元素一样在同一个页面上,因此你就可 以使用z-index值来控制DHTML元素是遮盖flash或者被遮盖。 transparent 透明模式，在这种模式下flash  player会将stage的背景色alpha值将为0并且只会绘制stage上真实可见的对象，同样你也可以使用z-index来控制flash影片的 深度值，但是与Opaque模式不同的是这样做会降低flash影片的回放效果，而且在9.0.115之前的flash  player版本设置wmode=\"opaque\"或\"transparent\"会导致全屏模式失效。 了解了各种模式的实现方式和意义在以后的开发中就可以按照具体情况选择设置wmode属性的值了。","date":1289960111000,"updated":1586328684130,"size":2269},{"title":"HTTP状态码","slug":"http-header-status-code","content":" 常见的 * 200 - OK，服务器成功返回网页   - Standard response for successful HTTP requests. * 301 - Moved Permanently（永久跳转），请求的网页已永久跳转到新位置。     - This and all future requests should be directed to the given. * 403 - Forbidden（禁止访问）,服务器拒绝请求     - forbidden request (matches a deny filter) =&gt; HTTP 403     - The request was a legal request, but the server is refusing to respond to it. * 404 - Not Found,服务器找不到请求的页面。     - The requested resource could not be found but may be available again in the future. * 500 - Internal Server Error（内部服务器错误）     - internal error in haproxy =&gt; HTTP 500     - A generic error message, given when no more specific message is suitable. * 502 - Bad Gateway（坏的网关）,一般是网关服务器请求后端服务时，后端服务没有按照http协议正确返回结果。     - the server returned an invalid or incomplete response =&gt; HTTP 502     - The server was acting as a gateway or proxy and received an invalid response from the upstream server. * 503 - Service Unavailable（服务当前不可用）,可能因为超载或停机维护。     - no server was available to handle the request =&gt; HTTP 503     - The server is currently unavailable (because it is overloaded or down for maintenance). * 504 - Gateway Timeout（网关超时）,一般是网关服务器请求后端服务时，后端服务没有在特定的时间内完成服务。     - the server failed to reply in time =&gt; HTTP 504     - The server was acting as a gateway or proxy and did not receive a timely response from the upstream server. 其他 * 100 : Continue * 101 : Switching Protocols * 102 : Processing * 200 : OK * 201 : Created * 202 : Accepted * 203 : Non-Authoritative Information * 204 : No Content * 205 : Reset Content * 206 : Partial Content * 207 : Multi-Status * 226 : IM Used * 300 : Multiple Choices * 301 : Moved Permanently * 302 : Found * 303 : See Other * 304 : Not Modified * 305 : Use Proxy * 306 : Reserved * 307 : Temporary Redirect * 400 : Bad Request * 401 : Unauthorized * 402 : Payment Required * 403 : Forbidden * 404 : Not Found * 405 : Method Not Allowed * 406 : Not Acceptable * 407 : Proxy Authentication Required * 408 : Request Timeout * 409 : Conflict * 410 : Gone * 411 : Length Required * 412 : Precondition Failed * 413 : Request Entity Too Large * 414 : Request-URI Too Long * 415 : Unsupported Media Type * 416 : Requested Range Not Satisfiable * 417 : Expectation Failed * 422 : Unprocessable Entity * 423 : Locked * 424 : Failed Dependency * 426 : Upgrade Required * 500 : Internal Server Error * 501 : Not Implemented * 502 : Bad Gateway * 503 : Service Unavailable * 504 : Gateway Timeout * 505 : HTTP Version Not Supported * 506 : Variant Also Negotiates * 507 : Insufficient Storage * 510 : Not Extended","date":1321445019000,"updated":1586328684133,"size":2673},{"title":"Git 配置及指令","slug":"git-configuration-commands","content":" 新建代码库 在当前目录新建一个Git代码库 $ git init 新建一个目录，将其初始化为Git代码库 $ git init [project-name] 下载一个项目和它的整个代码历史 $ git clone [url] 配置 Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。 显示当前的Git配置 $ git config -l [--local] 编辑Git配置文件 $ git config -e [--global] 设置提交代码时的用户信息 $ git config [--local] user.name \"[name]\" $ git config [--lcoal] user.email \"[email address]\" 增加/删除文件 添加指定文件到暂存区 $ git add [file1] [file2] ... 添加指定目录到暂存区，包括子目录 $ git add [dir] 添加当前目录的所有文件到暂存区 $ git add . 删除工作区文件，并且将这次删除放入暂存区 $ git rm [file1] [file2] ... 停止追踪指定文件，但该文件会保留在工作区 $ git rm --cached [file] 改名文件，并且将这个改名放入暂存区 $ git mv [file-original] [file-renamed] 代码提交 提交暂存区到仓库区 $ git commit -m [message] 提交暂存区的指定文件到仓库区 $ git commit [file1] [file2] ... -m [message] 提交工作区自上次commit之后的变化，直接到仓库区 $ git commit -a 提交时显示所有diff信息 $ git commit -v 使用一次新的commit，替代上一次提交 如果代码没有任何新变化，则用来改写上一次commit的提交信息 $ git commit --amend -m [message] 重做上一次commit，并包括指定文件的新变化 $ git commit --amend [file1] [file2] ... 分支 列出所有本地分支 $ git branch 列出所有远程分支 $ git branch -r 列出所有本地分支和远程分支 $ git branch -a 列出所有本地分支及其与远端分支的追踪关系 $ git branch -vv 新建一个分支，但依然停留在当前分支 $ git branch [branch-name] 新建一个分支，并切换到该分支 $ git checkout -b [branch] 新建一个分支，指向指定commit $ git branch [branch] [commit] 新建一个分支，与指定的远程分支建立追踪关系 $ git branch --track [branch] [remote-branch] 切换到指定分支，并更新工作区 $ git checkout [branch-name] 建立追踪关系，在现有分支与指定的远程分支之间 $ git branch --set-upstream [branch] [remote-branch] 合并指定分支到当前分支 $ git merge [branch] 选择一个commit，合并进当前分支 $ git cherry-pick [commit] 删除分支 $ git branch -d [branch-name] 删除远程分支 $ git push origin --delete [branch-name] $ git branch -dr [remote/branch] 标签 列出所有tag $ git tag 新建一个tag在当前commit $ git tag [tag] 新建一个tag在指定commit $ git tag [tag] [commit] 查看tag信息 $ git show [tag] 提交指定tag $ git push [remote] [tag] 提交所有tag $ git push [remote] --tags 新建一个分支，指向某个tag $ git checkout -b [branch] [tag] 查看信息 显示有变更的文件 $ git status 显示当前分支的版本历史 $ git log 显示commit历史，以及每次commit发生变更的文件 $ git log --stat 显示某个文件的版本历史，包括文件改名 $ git log --follow [file] $ git whatchanged [file] 显示指定文件相关的每一次diff $ git log -p [file] 显示指定文件是什么人在什么时间修改过 $ git blame [file] 显示暂存区和工作区的差异 $ git diff 显示暂存区和上一个commit的差异 $ git diff --cached [file] 显示工作区与当前分支最新commit之间的差异 $ git diff HEAD 显示两次提交之间的差异 $ git diff [first-branch]...[second-branch] 显示某次提交的元数据和内容变化 $ git show [commit] 显示某次提交发生变化的文件 $ git show --name-only [commit] 显示某次提交时，某个文件的内容 $ git show [commit]:[filename] 显示当前分支的最近几次提交 $ git reflog 远程同步 下载远程仓库的所有变动 $ git fetch [remote] 显示所有远程仓库 $ git remote -v 显示某个远程仓库的信息 $ git remote show [remote] 增加一个新的远程仓库，并命名 $ git remote add [shortname] [url] 取回远程仓库的变化，并与本地分支合并 $ git pull [remote] [branch] 上传本地指定分支到远程仓库 $ git push [remote] [branch] 强行推送当前分支到远程仓库，即使有冲突 $ git push [remote] --force 推送所有分支到远程仓库 $ git push [remote] --all 撤销 恢复暂存区的指定文件到工作区 $ git checkout [file] 恢复某个commit的指定文件到工作区 $ git checkout [commit] [file] 恢复上一个commit的所有文件到工作区 $ git checkout . 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变 $ git reset [file] 重置暂存区与工作区，与上一次commit保持一致 $ git reset --hard 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变 $ git reset [commit] 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致 $ git reset --hard [commit] 重置当前HEAD为指定commit，但保持暂存区和工作区不变 $ git reset --keep [commit] 新建一个commit，用来撤销指定commit 后者的所有变化都将被前者抵消，并且应用到当前分支 $ git revert [commit] submodule 添加一个submodule $ git submodule add [url] [dir] 初始化 $ git submodule init [dir] 更新 $ git submodule update [dir] 克隆一个带有submodule的远程代码仓库 $ git clone [url] $ git submodule init $ git submodule update 或者 $ git clone --recursive [url] Reference - [git官方doc](https://git-scm.com/docs) - [常用Git命令清单 by ruanyifeng](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)","date":1586328684131,"updated":1586328684131,"size":3997},{"title":"磁盘阵列 - RAID图文详解","slug":"disk-array-raid-details","content":" RAID 概述 1988 年美国加州大学伯克利分校的 D.A.Patterson 教授等首次在论文 “A Case of Redundant Array of Inexpensive Disks” 中提出了 RAID 概念，即廉价冗余磁盘阵列（Redundant Array of Inexpensive Disks）。由于当时大容量磁盘比较昂贵，RAID 的基本思想是将多个容量较小、相对廉价的磁盘进行有机组合，从而以较低的成本获得与昂贵大容量磁盘相当的容量、性能、可靠性。随着磁盘成本和价格的不断降低，RAID 可以使用大部分的磁盘，“廉价”已经毫无意义。因此，RAID 咨询委员会（RAID Advisory Board, RAB）决定用“ 独立 ”替代“ 廉价 ”，于时 RAID 变成了独立磁盘冗余阵列（Redundant Array of Independent Disks）。但这仅仅是名称的变化，实质内容没有改变。 RAID 这种设计思想很快被业界接纳，RAID 技术作为高性能、高可靠的存储技术，已经得到了非常广泛的应用。RAID 主要利用数据条带、镜像和数据校验技术来获取高性能、可靠性、容错能力和扩展性，根据运用或组合运用这三种技术的策略和架构，可以把 RAID 分为不同的等级，以满足不同数据应用的需求。D.A.Patterson 等的论文中定义了 RAID1~RAID5 原始 RAID 等级，1988 年以来又扩展了 RAID0 和 RAID6。近年来，存储厂商不断推出诸如 RAID7、RAID10/01、RAID50、RAID53、RAID100 等 RAID 等级，但这些并无统一的标准。目前业界公认的标准是 RAID0~RAID5，除 RAID2 外的四个等级被定为工业标准，而在实际应用领域中使用最多的 RAID 等级是 RAID0、RAID1、RAID3、RAID5、RAID6 和 RAID10。 从实现角度看，RAID 主要分为软 RAID、硬 RAID 以及软硬混合 RAID 三种。软 RAID 所有功能均有操作系统和 CPU 来完成，没有独立的 RAID 控制/处理芯片 和 I/O 处理芯片，效率自然最低。硬 RAID 配备了专门的 RAID 控制/处理芯片 和 I/O 处理芯片以及阵列缓冲，不占用 CPU 资源，但成本很高。软硬混合 RAID 具备 RAID 控制/处理芯片，但缺乏 I/O 处理芯片，需要 CPU 和驱动程序来完成，性能和成本在软 RAID 和硬 RAID 之间。 RAID 每一个等级代表一种实现方法和技术，等级之间并无高低之分。在实际应用中，应当根据用户的数据应用特点，综合考虑可用性、性能和成本来选择合适的 RAID 等级，以及具体的实现方式。 基本原理 RAID（Redundant Array of Independent Disks）即独立磁盘冗余阵列，通常简称为磁盘阵列。简单地说，RAID 是由多个独立的高性能磁盘驱动器组成的磁盘子系统，从而提供比单个磁盘更高的存储性能和数据冗余的技术。RAID 是一类多磁盘管理技术，其向主机环境提供了成本适中、数据可靠性高的高性能存储。SNIA 对 RAID 的定义是：一种磁盘阵列，部分物理存储空间用来记录保存在剩余空间上的用户数据的冗余信息。当其中某一个磁盘或访问路径发生故障时，冗余信息可用来重建用户数据。磁盘条带化虽然与 RAID 定义不符，通常还是称为 RAID（即 RAID0）。 RAID 的初衷是为大型服务器提供高端的存储功能和冗余的数据安全。在整个系统中，RAID 被看作是由两个或更多磁盘组成的存储空间，通过并发地在多个磁盘上读写数据来提高存储系统的 I/O 性能。大多数 RAID 等级具有完备的数据校验、纠正措施，从而提高系统的容错性，甚至镜像方式，大大增强系统的可靠性，Redundant 也由此而来。 这里要提一下 JBOD（Just a Bunch of Disks）。最初 JBOD 用来表示一个没有控制软件提供协调控制的磁盘集合，这是 RAID 区别与 JBOD 的主要因素。目前 JBOD 常指磁盘柜，而不论其是否提供 RAID 功能。 RAID 的两个关键目标是提高数据可靠性和 I/O 性能。磁盘阵列中，数据分散在多个磁盘中，然而对于计算机系统来说，就像一个单独的磁盘。通过把相同数据同时写入到多块磁盘（典型地如镜像），或者将计算的校验数据写入阵列中来获得冗余能力，当单块磁盘出现故障时可以保证不会导致数据丢失。有些 RAID 等级允许更多地 磁盘同时发生故障，比如 RAID6，可以是两块磁盘同时损坏。在这样的冗余机制下，可以用新磁盘替换故障磁盘，RAID 会自动根据剩余磁盘中的数据和校验数据重建丢失的数据，保证数据一致性和完整性。数据分散保存在 RAID 中的多个不同磁盘上，并发数据读写要大大优于单个磁盘，因此可以获得更高的聚合 I/O 带宽。当然，磁盘阵列会减少全体磁盘的总可用存储空间，牺牲空间换取更高的可靠性和性能。比如，RAID1 存储空间利用率仅有 50%，RAID5 会损失其中一个磁盘的存储容量，空间利用率为 (n-1)/n 。 磁盘阵列可以在部分磁盘（单块或多块，根据实现而论）损坏的情况下，仍能保证系统不中断地连续运行。在重建故障磁盘数据至新磁盘的过程中，系统可以继续正常运行，但是性能方面会有一定程度上的降低。一些磁盘阵列在添加或删除磁盘时必须停机，而有些则支持热交换（Hot Swapping），允许不停机下替换磁盘驱动器。这种高端磁盘阵列主要用于要求高可能性的应用系统，系统不能停机或尽可能少的停机时间。一般来说，RAID 不可作为数据备份的替代方案，它对非磁盘故障等造成的数据丢失无能为力，比如病毒、人为破坏、意外删除等情形。此时的数据丢失是相对操作系统、文件系统、卷管理器或者应用系统来说的，对于 RAID 系统来身，数据都是完好的，没有发生丢失。所以，数据备份、灾 备等数据保护措施是非常必要的，与 RAID 相辅相成，保护数据在不同层次的安全性，防止发生数据丢失。 RAID 中主要有三个关键概念和技术：镜像（Mirroring）、数据条带（Data Stripping）和数据校验（Data parity）。镜像，将数据复制到多个磁盘，一方面可以提高可靠性，另一方面可并发从两个或多个副本读取数据来提高读性能。显而易见，镜像的写性能要稍低，确保数据正确地写到多个磁盘需要更多的时间消耗。数据条带，将数据分片保存在多个不同的磁盘，多个数据分片共同组成一个完整数据副本，这与镜像的多个副本是不同的，它通常用于性能考虑。数据条带具有更高的并发粒度，当访问数据时，可以同时对位于不同磁盘上数据进行读写操作，从而获得非常可观的 I/O 性能提升。数据校验，利用冗余数据进行数据错误检测和修复，冗余数据通常采用海明码、异或操作等算法来计算获得。利用校验功能，可以很大程度上提高磁盘阵列的可靠性、鲁棒性和容错能力。不过，数据校验需要从多处读取数据并进行计算和对比，会影响系统性能。不同等级的 RAID 采用一个或多个以上的三种技术，来获得不同的数据可靠性、可用性和 I/O 性能。至于设计何种 RAID（甚至新的等级或类型）或采用何种模式的 RAID，需要在深入理解系统需求的前提下进行合理选择，综合评估可靠性、性能和成本来进行折中的选择。 RAID 思想从提出后就广泛被业界所接纳，存储工业界投入了大量的时间和财力来研究和开发相关产品。而且，随着处理器、内存、计算机接口等技术的不断发展，RAID 不断地发展和革新，在计算机存储领域得到了广泛的应用，从高端系统逐渐延伸到普通的中低端系统。RAID 技术如此流行，源于其具有显著的特征和优势，基本可以满足大部分的数据存储需求。总体说来，RAID 主要优势有如下几点： 大容量 这是 RAID 的一个显然优势，它扩大了磁盘的容量，由多个磁盘组成的 RAID 系统具有海量的存储空间。现在单个磁盘的容量就可以到 1TB 以上，这样 RAID 的存储容量就可以达到 PB 级，大多数的存储需求都可以满足。一般来说，RAID 可用容量要小于所有成员磁盘的总容量。不同等级的 RAID 算法需要一定的冗余开销，具体容量开销与采用算法相关。如果已知 RAID 算法和容量，可以计算出 RAID 的可用容量。通常，RAID 容量利用率在 50%~90% 之间。 高性能 RAID 的高性能受益于数据条带化技术。单个磁盘的 I/O 性能受到接口、带宽等计算机技术的限制，性能往往很有限，容易成为系统性能的瓶颈。通过数据条带化，RAID 将数据 I/O 分散到各个成员磁盘上，从而获得比单个磁盘成倍增长的聚合 I/O 性能。 可靠性 可用性和可靠性是 RAID 的另一个重要特征。从理论上讲，由多个磁盘组成的 RAID 系统在可靠性方面应该比单个磁盘要差。这里有个隐含假定：单个磁盘故障将导致整个 RAID 不可用。RAID 采用镜像和数据校验等数据冗余技术，打破了这个假定。镜像是最为原始的冗余技术，把某组磁盘驱动器上的数据完全复制到另一组磁盘驱动器上，保证总有数据副本可用。比起镜像 50% 的冗余开销，数据校验要小很多，它利用校验冗余信息对数据进行校验和纠错。RAID 冗余技术大幅提升数据可用性和可靠性，保证了若干磁盘出错时，不会导致数据的丢失，不影响系统的连续运行。 可管理性 实际上，RAID 是一种虚拟化技术，它对多个物理磁盘驱动器虚拟成一个大容量的逻辑驱动器。对于外部主机系统来说，RAID 是一个单一的、快速可靠的大容量磁盘驱动器。这样，用户就可以在这个虚拟驱动器上来组织和存储应用系统数据。从用户应用角度看，可使存储系统简单易用，管理也很便利。由于 RAID 内部完成了大量的存储管理工作，管理员只需要管理单个虚拟驱动器，可以节省大量的管理工作。RAID 可以动态增减磁盘驱动器，可自动进行数据校验和数据重建，这些都可以大大简化管理工作。 关键技术 镜像 镜像是一种冗余技术，为磁盘提供保护功能，防止磁盘发生故障而造成数据丢失。对于 RAID 而言，采用镜像技术 典型地 将会同时在阵列中产生两个完全相同的数据副本，分布在两个不同的磁盘驱动器组上。镜像提供了完全的数据冗余能力，当一个数据副本失效不可用时，外部系统仍可正常访问另一副本，不会对应用系统运行和性能产生影响。而且，镜像不需要额外的计算和校验，故障修复非常快，直接复制即可。镜像技术可以从多个副本进行并发读取数据，提供更高的读 I/O 性能，但不能并行写数据，写多个副本会会导致一定的 I/O 性能降低。 镜像技术提供了非常高的数据安全性，其代价也是非常昂贵的，需要至少双倍的存储空间。高成本限制了镜像的广泛应用，主要应用于至关重要的数据保护，这种场合下数据丢失会造成巨大的损失。另外，镜像通过“拆分”能获得特定时间点的上数据快照，从而可以实现一种备份窗口几乎为零的数据备份技术。 数据条带 磁盘存储的性能瓶颈在于磁头寻道定位，它是一种慢速机械运动，无法与高速的 CPU 匹配。再者，单个磁盘驱动器性能存在物理极限，I/O 性能非常有限。RAID 由多块磁盘组成，数据条带技术将数据以块的方式分布存储在多个磁盘中，从而可以对数据进行并发处理。这样写入和读取数据就可以在多个磁盘上同时进行，并发产生非常高的聚合 I/O，有效提高了整体 I/O 性能，而且具有良好的线性扩展性。这对大容量数据尤其显著，如果不分块，数据只能按顺序存储在磁盘阵列的磁盘上，需要时再按顺序读取。而通过条带技术，可获得数倍与顺序访问的性能提升。 数据条带技术的分块大小选择非常关键。条带粒度可以是一个字节至几 KB 大小，分块越小，并行处理能力就越强，数据存取速度就越高，但同时就会增加块存取的随机性和块寻址时间。实际应用中，要根据数据特征和需求来选择合适的分块大小，在数据存取随机性和并发处理能力之间进行平衡，以争取尽可能高的整体性能。 数据条带是基于提高 I/O 性能而提出的，也就是说它只关注性能，而对数据可靠性、可用性没有任何改善。实际上，其中任何一个数据条带损坏都会导致整个数据不可用，采用数据条带技术反而增加了数据发生丢失的概念率。 数据校验 镜像具有高安全性、高读性能，但冗余开销太昂贵。数据条带通过并发性来大幅提高性能，然而对数据安全性、可靠性未作考虑。数据校验是一种冗余技术，它用校验数据来提供数据的安全，可以检测数据错误，并在能力允许的前提下进行数据重构。相对镜像，数据校验大幅缩减了冗余开销，用较小的代价换取了极佳的数据完整性和可靠性。数据条带技术提供高性能，数据校验提供数据安全性，RAID 不同等级往往同时结合使用这两种技术。 采用数据校验时，RAID 要在写入数据同时进行校验计算，并将得到的校验数据存储在 RAID 成员磁盘中。校验数据可以集中保存在某个磁盘或分散存储在多个不同磁盘中，甚至校验数据也可以分块，不同 RAID 等级实现各不相同。当其中一部分数据出错时，就可以对剩余数据和校验数据进行反校验计算重建丢失的数据。校验技术相对于镜像技术的优势在于节省大量开销，但由于每次数据读写都要进行大量的校验运算，对计算机的运算速度要求很高，必须使用硬件 RAID 控制器。在数据重建恢复方面，检验技术比镜像技术复杂得多且慢得多。 海明校验码和异或校验是两种最为常用的数据校验算法。海明校验码是由 理查德·海明 提出的，不仅能检测错误，还能给出错误位置并自动纠正。海明校验的基本思想是：将有效信息按照某种规律分成若干组，对每一个组作奇偶测试并安排一个校验位，从而能提供多位检错信息，以定位错误点并纠正。可见海明校验实质上是一种多重奇偶校验。异或校验通过异或逻辑运算产生，将一个有效信息与一个给定的初始值进行异或运算，会得到校验信息。如果有效信息出现错误，通过校验信息与初始值的异或运算能还原正确的有效信息。 RAID 等级 JBOD JBOD (Just a Bunch Of Disks）不是标准的 RAID 等级，它通常用来表示一个没有控制软件提供协调控制的磁盘集合。JBOD 将多个物理磁盘串联起来，提供一个巨大的逻辑磁盘。JBOD（如图 1 ）的数据存放机制是由第一块磁盘开始按顺序往后存储，当前磁盘存储空间用完后，再依次往后面的磁盘存储数据。JBOD 存储性能完全等同于单块磁盘，而且也不提供数据安全保护。它只是简单提供一种扩展存储空间的机制，JBOD 可用存储容量等于所有成员磁盘的存储空间之和。目前 JBOD 常指磁盘柜，而不论其是否提供 RAID 功能。 ![](http://static.0.codante.org/0/f/0f32692f8f672e0e98d037168ae2eef64168c27a.png) 图1 JBOD 标准 RAID 等级 SNIA、Berkeley 等组织机构把 RAID0、RAID1、RAID2、RAID3、RAID4、RAID5、RAID6 七个等级定为标准的 RAID 等级，这也被业界和学术界所公认。标准等级是最基本的 RAID 配置集合，单独或综合利用数据条带、镜像和数据校验技术。标准 RAID 可以组合，即 RAID 组合等级，满足 对性能、安全性、可靠性要求更高的存储应用需求。 RAID0 RAID0 是一种简单的、无数据校验的数据条带化技术。实际上不是一种真正的 RAID，因为它并不提供任何形式的冗余策略。RAID0 将所在磁盘条带化后组成大容量的存储空间（如图 2 所示），将数据分散存储在所有磁盘中，以独立访问方式实现多块磁盘的并读访问。由于可以并发执行 I/O 操作，总线带宽得到充分利用。再加上不需要进行数据校验，RAID0 的性能在所有 RAID 等级中是最高的。理论上讲，一个由 n 块磁盘组成的 RAID0，它的读写性能是单个磁盘性能的 n 倍，但由于总线带宽等多种因素的限制，实际的性能提升低于理论值。 RAID0 具有低成本、高读写性能、100% 的高存储空间利用率等优点，但是它不提供数据冗余保护，一旦数据损坏，将无法恢复。因此，RAID0 一般适用于对性能要求严格但对数据安全性和可靠性不高的应用，如视频、音频存储、临时数据缓存空间等。 ![](http://static.0.codante.org/8/2/820446213be080eceed46bfba1f6a9bda5de292c.png) 图2 RAID0 ：无冗错的数据条带 RAID1 RAID1 称为镜像，它将数据完全一致地分别写到工作磁盘和镜像 磁盘，它的磁盘空间利用率为 50% 。RAID1 在数据写入时，响应时间会有所影响，但是读数据的时候没有影响。RAID1 提供了最佳的数据保护，一旦工作磁盘发生故障，系统自动从镜像磁盘读取数据，不会影响用户工作。工作原理如图 3 所示。 RAID1 与 RAID0 刚好相反，是为了增强数据安全性使两块 磁盘数据呈现完全镜像，从而达到安全性好、技术简单、管理方便。RAID1 拥有完全容错的能力，但实现成本高。RAID1 应用于对顺序读写性能要求高以及对数据保护极为重视的应用，如对邮件系统的数据保护。 ![](http://static.0.codante.org/0/0/00dda51b0f61c197fc38204a9dbebc7d42309ea8.png) 图3 RAID1 ：无校验的相互镜像 RAID2 RAID2 称为纠错海明码磁盘阵列，其设计思想是利用海明码实现数据校验冗余。海明码是一种在原始数据中加入若干校验码来进行错误检测和纠正的编码技术，其中第 2n 位（ 1, 2, 4, 8, … ）是校验码，其他位置是数据码。因此在 RAID2 中，数据按位存储，每块磁盘存储一位数据编码，磁盘数量取决于所设定的数据存储宽度，可由用户设定。图 4 所示的为数据宽度为 4 的 RAID2，它需要 4 块数据磁盘和 3 块校验磁盘。如果是 64 位数据宽度，则需要 64 块 数据磁盘和 7 块校验磁盘。可见，RAID2 的数据宽度越大，存储空间利用率越高，但同时需要的磁盘数量也越多。 海明码自身具备纠错能力，因此 RAID2 可以在数据发生错误的情况下对纠正错误，保证数据的安全性。它的数据传输性能相当高，设计复杂性要低于后面介绍的 RAID3、RAID4 和 RAID5 。 但是，海明码的数据冗余开销太大，而且 RAID2 的数据输出性能受阵列中最慢磁盘驱动器的限制。再者，海明码是按位运算，RAID2 数据重建非常耗时。由于这些显著的缺陷，再加上大部分磁盘驱动器本身都具备了纠错功能，因此 RAID2 在实际中很少应用，没有形成商业产品，目前主流存储磁盘阵列均不提供 RAID2 支持。 ![](http://static.0.codante.org/f/0/f0062e3fcfe005d9279b9fff22ae5b66bdc1c355.png) 图 4 RAID2 ：海明码校验 RAID3 RAID3（图 5 ）是使用专用校验盘的并行访问阵列，它采用一个专用的磁盘作为校验盘，其余磁盘作为数据盘，数据按位可字节的方式交叉存储到各个数据盘中。RAID3 至少需要三块磁盘，不同磁盘上同一带区的数据作 XOR 校验，校验值写入校验盘中。RAID3 完好时读性能与 RAID0 完全一致，并行从多个磁盘条带读取数据，性能非常高，同时还提供了数据容错能力。向 RAID3 写入数据时，必须计算与所有同条带的校验值，并将新校验值写入校验盘中。一次写操作包含了写数据块、读取同条带的数据块、计算校验值、写入校验值等多个操作，系统开销非常大，性能较低。 如果 RAID3 中某一磁盘出现故障，不会影响数据读取，可以借助校验数据和其他完好数据来重建数据。假如所要读取的数据块正好位于失效磁盘，则系统需要读取所有同一条带的数据块，并根据校验值重建丢失的数据，系统性能将受到影响。当故障磁盘被更换后，系统按相同的方式重建故障盘中的数据至新磁盘。 RAID3 只需要一个校验盘，阵列的存储空间利用率高，再加上并行访问的特征，能够为高带宽的大量读写提供高性能，适用大容量数据的顺序访问应用，如影像处理、流媒体服务等。目前，RAID5 算法不断改进，在大数据量读取时能够模拟 RAID3，而且 RAID3 在出现坏盘时性能会大幅下降，因此常使用 RAID5 替代 RAID3 来运行具有持续性、高带宽、大量读写特征的应用。 ![](http://static.0.codante.org/7/e/7eb6559d8059bf7e23861f5f97368715ecf14a7a.png) 图5 RAID3 ：带有专用位校验的数据条带 RAID4 RAID4 与 RAID3 的原理大致相同，区别在于条带化的方式不同。RAID4（图 6 ）按照 块的方式来组织数据，写操作只涉及当前数据盘和校验盘两个盘，多个 I/O 请求可以同时得到处理，提高了系统性能。RAID4 按块存储可以保证单块的完整性，可以避免受到其他磁盘上同条带产生的不利影响。 RAID4 在不同磁盘上的同级数据块同样使用 XOR 校验，结果存储在校验盘中。写入数据时，RAID4 按这种方式把各磁盘上的同级数据的校验值写入校验 盘，读取时进行即时校验。因此，当某块磁盘的数据块损坏，RAID4 可以通过校验值以及其他磁盘上的同级数据块进行数据重建。 RAID4 提供了 非常好的读性能，但单一的校验盘往往成为系统性能的瓶颈。对于写操作，RAID4 只能一个磁盘一个磁盘地写，并且还要写入校验数据，因此写性能比较差。而且随着成员磁盘数量的增加，校验盘的系统瓶颈将更加突出。正是如上这些限制和不足，RAID4 在实际应用中很少见，主流存储产品也很少使用 RAID4 保护。 ![](http://static.0.codante.org/4/9/49b75ca80570820653ec75f1319717eadd1b0cf7.png) 图6 RAID4 ：带有专用块级校验的数据条带 RAID5 RAID5 应该是目前最常见的 RAID 等级，它的原理与 RAID4 相似，区别在于校验数据分布在阵列中的所有磁盘上，而没有采用专门的校验磁盘。对于数据和校验数据，它们的写操作可以同时发生在完全不同的磁盘上。因此，RAID5 不存在 RAID4 中的并发写操作时的校验盘性能瓶颈问题。另外，RAID5 还具备很好的扩展性。当阵列磁盘 数量增加时，并行操作量的能力也随之增长，可比 RAID4 支持更多的磁盘，从而拥有更高的容量以及更高的性能。 RAID5（图 7）的磁盘上同时存储数据和校验数据，数据块和对应的校验信息存保存在不同的磁盘上，当一个数据盘损坏时，系统可以根据同一条带的其他数据块和对应的校验数据来重建损坏的数据。与其他 RAID 等级一样，重建数据时，RAID5 的性能会受到较大的影响。 RAID5 兼顾存储性能、数据安全和存储成本等各方面因素，它可以理解为 RAID0 和 RAID1 的折中方案，是目前综合性能最佳的数据保护解决方案。RAID5 基本上可以满足大部分的存储应用需求，数据中心大多采用它作为应用数据的保护方案。 ![](http://static.0.codante.org/e/5/e5c0dd47ca75f1a23e8a7c093df1346c058d053e.png) 图7 RAID5 ：带分散校验的数据条带 RAID6 前面所述的各个 RAID 等级都只能保护因单个磁盘失效而造成的数据丢失。如果两个磁盘同时发生故障，数据将无法恢复。RAID6（如图 8 ）引入双重校验的概念，它可以保护阵列中同时出现两个磁盘失效时，阵列仍能够继续工作，不会发生数据丢失。RAID6 等级是在 RAID5 的基础上为了进一步增强数据保护而设计的一种 RAID 方式，它可以看作是一种扩展的 RAID5 等级。 RAID6 不仅要支持数据的恢复，还要支持校验数据的恢复，因此实现代价很高，控制器的设计也比其他等级更复杂、更昂贵。RAID6 思想最常见的实现方式是采用两个独立的校验算法，假设称为 P 和 Q，校验数据可以分别存储在两个不同的校验盘上，或者分散存储在所有成员磁盘中。当两个磁盘同时失效时，即可通过求解两元方程来重建两个磁盘上的数据。 RAID6 具有快速的读取性能、更高的容错能力。但是，它的成本要高于 RAID5 许多，写性能也较差，并有设计和实施非常复杂。因此，RAID6 很少得到实际应用，主要用于对数据安全等级要求非常高的场合。它一般是替代 RAID10 方案的经济性选择。 ![](http://static.0.codante.org/6/e/6eab91bc7fc0fe0b83c4abc244d659dd81836f44.png) 图8 RAID6 ：带双重分散校验的数据条带 RAID 组合等级 标准 RAID 等级各有优势和不足。自然地，我们想到把多个 RAID 等级组合起来，实现优势互补，弥补相互的不足，从而达到在性能、数据安全性等指标上更高的 RAID 系统。目前在业界和学术研究中提到的 RAID 组合等级主要有 RAID00、RAID01、RAID10、RAID100、RAID30、RAID50、RAID53、RAID60，但实际得到较为广泛应用的只有 RAID01 和 RAID10 两个等级。当然，组合等级的实现成本一般都非常昂贵，只是在 少数特定场合应用。 RAID00 简单地说，RAID00 是由多个成员 RAID0 组成的高级 RAID0 。它与 RAID0 的区别在于，RAID0 阵列替换了原先的成员磁盘。可以把 RAID00 理解为两层条带化结构的磁盘阵列，即对条带再进行条带化。这种阵列可以提供更大的存储容量、更高的 I/O 性能和更好的 I/O 负均衡。 RAID01 和 RAID10 一些文献把这两种 RAID 等级看作是等同的，本文认为是不同的。RAID01 是先做条带化再作镜像，本质是对物理磁盘实现镜像；而 RAID10 是先做镜像再作条带化，是对虚拟磁盘实现镜像。相同的配置下，通常 RAID01 比 RAID10 具有更好的容错能力，原理如图 9 所示。 RAID01 兼备了 RAID0 和 RAID1 的优点，它先用两块磁盘建立镜像，然后再在镜像内部做条带化。RAID01 的数据将同时写入到两个磁盘阵列中，如果其中一个阵列损坏，仍可继续工作，保证数据安全性的同时又提高了性能。RAID01 和 RAID10 内部都含有 RAID1 模式，因此整体磁盘利用率均仅为 50% 。 ![](http://static.0.codante.org/7/7/77309636b9513709a684f689a47db3a91181e908.png) ![](http://static.0.codante.org/b/b/bb58bfea3274217de510620cf3322313be7aca4c.png) 图 9 典型的 RAID01（上）和 RAID10（下）模型 RAID100 通常看作 RAID 1+0+0，有时也称为 RAID 10+0，即条带化的 RAID10 。原理如图 10 所示。RAID100 的缺陷与 RAID10 相同，任意一个 RAID1 损坏一个磁盘不会发生数据丢失，但是剩下的磁盘存在单点故障的危险。最顶层的 RAID0，即条带化任务，通常由软件层来完成。 RAID100 突破了单个 RAID 控制器对物理磁盘数量的限制，可以获得更高的 I/O 负载均衡，I/O 压力分散到更多的磁盘上，进一步提高随机读性能，并有效降低热点盘故障风险。因此，RAID100 通常是大数据库的最佳选择。 ![](http://static.0.codante.org/6/b/6be2f5f14833b22c36e42d34cad7961ea7be184a.png) 图10 典型的 RAID100 模型 RAID30（RAID53）、RAID50 和 RAID60 这三种 RAID 等级与 RAID00 原理基本相同，区别在于成员 “ 磁盘 ” 换成了 RAID3、RAID5 和 RAID6，分别如图 11、12、13 所示。其中，RAID30 通常又被称为 RAID53 。其实，可把这些等级 RAID 统称为 RAID X0 等级，X 可为标准 RAID 等级，甚至组合等级（如 RAID100 ）。利用多层 RAID 配置，充分利用 RAID X 与 RAID0 的优点，从而获得在存储容量、数据安全性和 I/O 负载均衡等方面的大幅性能提升。 ![](http://static.0.codante.org/4/6/46100c86c2d08d4e16f94576fddf781f599104a4.png) 图11 典型的 RAID30 模型 ![](http://static.0.codante.org/7/6/762b6b7877e8f3d154ce5679079ccea1a9d6c009.png) 图12 典型的 RAID50 模型 ![](http://static.0.codante.org/1/6/163128798df9cf58a5a51e83d60e44a6865ec268.png) 图13 典型的 RAID60 模型 非标准 RAID 等级 虽然标准 RAID 和组合 RAID 在具体实现上存在一定程度的不同，但与标准规范是保持一致或兼容的。然而除此之外，一些存储厂商还实现了非标准的 RAID 等级，往往都是公司私有的产品。这里简单介绍几个非标准 RAID 等级。 RAID7 RAID7 的全称是最优化的异步高 I/O 速率和高数据传输率，它与其他 RAID 等级有着明显区别。它不仅仅是一种技术，它还是一个独立存储计算机，自身带的操作系统和管理工具，完全可以独立运行。 RAID7 的存储计算机操作系统是一套实时事件驱动操作系统，其主要用来进行系统初始化和安排 RAID7 磁盘阵列的所有数据传输，并把它们转换到相应的物理存储驱动器上。RAID7 通过自身系统中的专用控制板来控制读写速度，存储计算机操作系统可使主机 I/O 传递性能达到最佳。如果一个磁盘出现故障，RAID7 还能够自动执行恢复操作，并可管理备份磁盘的重建过程。 RAID7 突破了以往 RAID 标准的技术架构，采用了非同步访问，极大地减轻了数据写瓶颈，提高了 I/O 速度。RAID7 系统内置实时操作系统还可自动对主机发送过来的读写指令进行优化处理，以智能化方式将可能被读取的数据预先读入快速缓存中，从而大大减少了磁头的转动次数，提高存储系统的 I/O 速度。 RAID7 可帮助用户有效地管理日益庞大的数据存储系统，并使系统的运行效率大大提高，满足不同用户的存储需求。但是，RAID7 的成本比其他 RAID 等级要高许多。另外，RAID7 已被某公司注册为商标，目前仅有一家公司提供 RAID7 的产品，用户没有更多的选择。技术封闭，缺乏主流专业存储厂商的参与和研发严重制约了 RAID7 的发展。 RAID-DP 按照 SNIA 最新的 RAID6 定义，双重数据校验的磁盘阵列都可归为 RAID6 等级。NetApp 公司按照 RAID6 的定义实现了 RAID-DP，使用双重的数据校验来保护数据，可以保证两块磁盘同时损坏的情况下不发生数据丢失。与该公司的 RAID4 实现对比，传统的 RAID6 实现会致使系统性能损失 30% 左右，而 RAID-DP 的性能下降低于 2% 。上层文件系统的请求首先写入后端的 NVRAM 中，确保即使在 掉电的情况下也不会有任何数据丢失。因此，数据块不会立即更新，当执行新来的写操作，会对写操作进行聚集，然后存储控制器尝试一次性写入包括校验数据在内的整个数据条带。RAID-DP 提供了比 RAID10 更好的数据保护，性能却不低于 RAID10 。对于相同大小的 RAID 组，在大多数情况下，RAID-DP 没有受到传统 RAID6 即时更新数据块的挑战，并提供更多的磁盘进行读写。它甚至允许磁盘固件实时更新而不发生任何中断。 RAID1.5 这是 HighPoint 公司的 RAID 产品，有时也被错误地称为 RAID15 。RAID1.5 仅使用两个磁盘驱动器同时进行数据条带化和镜像，数据可以同时从两块磁盘进行读取。这其中的大部分工作都由硬件来完成，而非驱动程序。Linux、Solaris 等操作系统实现的 RAID1 也可以实现同时从两块磁盘进行读取数据，因此 RAID1.5 并不优于传统的　RAID1。 RAID5E、RAID5EE 和 RAID6E 这种概念首次在 IBM ServerRAID 中被提出，E 是 Enhanced 的首字母。它们分别是对 RAID5 和 RAID6 的增强，增加了热冗余磁盘驱动器，冗余磁盘与其他磁盘一块进行数据块编排。这种设计使得 I/O 可以分散到包括热冗余在内的所在磁盘，从而减小单块磁盘的 I/O 带宽，提供更高的性能。然而，热冗余磁盘不能够被多个阵列共享。 在实现中，实际上不存在专用的热冗余磁盘，就像 RAID5 和 RAID6 中没有专用的校验磁盘一样，所有的冗余数据块分布在所的成员磁盘中。例如，一个 10 块磁盘的 RAID5E，包括 80% 数据块、10% 的冗余数据块和 10% 的校验数据。对于 RAID5E 和 RAID6E，冗余数据块位于阵列尾部，而 RAID5EE 则分布在整个 RAID 中。如果 RAID5E/5EE 中发生一块磁盘损坏，则系统会自动降级并重建至标准的 RAID5 。这一过程中，I/O 操作非常密集，并且需要花费大量时间，从几个小时至甚至几天，根据阵列的具体配置而异。当损坏磁盘被替换后，系统则又会自动升级并重建至原先的 RAID5E/5EE，同时非常耗时。在上面的重建过程中，数据没有冗余保护。由于系统升级和降级时，I/O 活动密集且所需时间过长，因此实际应用中成员磁盘数据限制在 4~8 块。一旦超过 8 块磁盘，由于损坏磁盘的重建耗时和重建中发生第二块磁盘损坏造成的数据丢失，RAID5E/5EE 所获得的性能提升和其他获益都将严重降低。 RAID S (Parity RAID) RAID S 是 EMC 公司的 Symmetrix 存储系统所使用的条带化校验 RAID 。该系统中，每个卷位于单独的物理磁盘上，多个卷组合进行数据校验。EMC 最早引入了 RAID S 概念，后来改名为 Parity RAID 并应用于 Symmetrix DMX 平台。EMC 现在也为 Symmetrix DMX 提供标准的 RAID5，RAID S 已经不再 EMC 产品中使用。 Intel Matrix RAID Matrix RAID 是 Intel ICH6R 和后继的南桥芯片的一个重要特征，可以通过 RAID BIOS 进行访问。它使用两块磁盘或者控制器能支持的最多磁盘，它的显著特征是允许 RAID0、1、5、10 多种数据卷混合共存，每块磁盘的指定部分分配给相应的 RAID 卷。Matrix RAID 主要用于改善性能和数据完整性，实际应用中可以将操作系统应用于小的 RAID0，而大的 RAID1 存储关键数据以及用户数据。海量的流媒体数据容易发生数据丢失，可以考虑使用这种 RAID 。linux 的 MD RAID 也可以实现类似的功能。 Linux MD RAID 10 RAID 10 是 Linux 内核所支持的软 RAID 等级之一，它还支持 RAID0、1、3、4、5、6 等级别。软 RAID 驱动程序通常通过构造典型的 RAID1+0 阵开来实现 RAID10，2.6.9 以后的内核也可作为单独的级别来实现。 MD RAID10 支持重复数据块的近布局和远布局两种模式。近布局与标准 RAID10 相同，镜像数据块相邻存储。对于 n 重镜像的 k 路条带，不要求 k 为 n 的 整倍数。两重镜像的2、3、4路条带的 MD RAID10 分布相当于 RAID1、RAID-1E 和 RAID10 。远布局模式下，所有磁盘被划分为 f（ f= 镜像数）个数据存储区，重复数据块相对于原始数据块具有一个磁盘和若干依偏移的距离，即保存在下一个磁盘对应存储区的偏移位置。这种设计能够提高镜像阵列的条带性能，有效提高顺序和随机读性能，但对写性能没有显著提升。许多应该通常具有读密集而写稀疏的特点，RAID10 适合此类数据应用。需要指出的是，近布局和远布局两种模式可以同时使用，这种情况下将有 n * f 个数据副本。 IBM ServerRAID 1E IBM 公司的 ServerRAID 阵列卡系列支持任意数量驱动器上的两路镜像，多个磁盘对数据块进行轮转镜像。这种配置能够对不相邻磁盘驱动器发生的损坏进行容错，其他的存储系统也支持这种模式，比如 SUN 公司的 StorEdge T3 。 RAID-K Kaleidescape 公司实现了一种称为 RAID-K 的 RAID 类型。RAID-K 与 RAID4 相似，但不对文件数据进行块级的条带化处理，它企图将整个电影或音乐集合完整地存储在单个磁盘上。另外，它的冗余校验信息可存储在多个磁盘上，从而适应由多个容量不同的磁盘所组成的逻辑磁盘。而且，冗余数据包含比校验信息更多的数据，用于获取更高的容错性。这些特征可以为影像、音乐提供更好的性能，增加数据存储的安全性。RAID-K 还可以允许用户以增量方式扩充存储容量，能够增加容量更大的磁盘，甚至它还可以增加包含数据（仅限影像和音乐）的磁盘。RAID-K 会自动把这些磁盘组建成 RAID-K 阵列和 Kaleidescape 文件系统。 RAID-Z RAID-Z 是集成在 SUN 公司 ZFS 文件系统中的一种与 RAID5 相似的 RAID 模式。利用写时复制策略，RAID-Z 避免了 RAID5 的写操作困境（即更新数据同时需要更新校验数据），它不用新数据覆盖旧数据，而是把新数据写到新位置并自动更新数据指针。对于小的写操作，仅仅执行完全的写条带操作，有效避免 “ 读取－更改－写回 ” 的操作需求。另外，还可以直接对小写操作使用镜像替换校验进行保护，因为文件系统了解下层存储结构，可以在必要时分配 额外存储空间。ZFS 还实现了 RAID-Z2，提供类似与 RAID6 的双重校验保护能力，可以保证不块磁盘发生损坏而不发生数据丢失。根据 2009 年 6 月的更新，ZFS 加入了三重校验 RAID 支持，或许称为 RAID-Z3 。 实现方式 通常计算机功能既可以由硬件来实现，也可以由软件来实现。对于 RAID 系统而言，自然也不例外，它可以采用软件方式实现，也可以采用硬件方式实现，或者采用软硬结合的方式实现。 软 RAID 软 RAID 没有专用的控制芯片和 I/O 芯片，完全由操作系统和 CPU 来实现所的 RAID 的功能。现代操作系统基本上都提供软 RAID 支持，通过在磁盘设备驱动程序上添加一个软件层，提供一个物理驱动器与逻辑驱动器之间的抽象层。目前，操作系统支持的最常见的 RAID 等级有 RAID0、RAID1、RAID10、RAID01 和 RAID5 等。比如，Windows Server 支持 RAID0、RAID1 和 RAID5 三种等级，Linux 支持 RAID0、RAID1、RAID4、RAID5、RAID6 等，Mac OS X Server、FreeBSD、NetBSD、OpenBSD、Solaris 等操作系统也都支持相应的 RAID 等级。 软 RAID 的配置管理和数据恢复都比较简单，但是 RAID 所有任务的处理完全由 CPU 来完成，如计算校验值，所以执行效率比较低下，这种方式需要消耗大量的运算资源，支持 RAID 模式 较少，很难广泛应用。 软 RAID 由操作系统来实现，因此系统所在分区不能作为 RAID 的逻辑成员磁盘，软 RAID 不能保护系统盘 D 。对于部分操作系统而言，RAID 的配置信息保存在系统信息中，而不是单独以文件形式保存在磁盘上。这样当系统意外崩溃而需要重新安装时，RAID 信息就会丢失。另外，磁盘的容错技术并不等于完全支持在线更换、热插拔或热交换，能否支持错误磁盘的热交换与操作系统实现相关，有的操作系统热交换。 硬 RAID 硬 RAID 拥有自己的 RAID 控制处理与 I/O 处理芯片，甚至还有阵列缓冲，对 CPU 的占用率和整体性能是三类实现中最优的，但实现成本也最高的。硬 RAID 通常都支持热交换技术，在系统运行下更换故障磁盘。 硬 RAID 包含 RAID 卡和主板上集成的 RAID 芯片，服务器平台多采用 RAID 卡。RAID 卡由 RAID 核心处理芯片（ RAID 卡上的 CPU ）、端口、缓存和电池 4 部分组成。其中，端口是指 RAID 卡支持的磁盘接口类型，如 IDE/ATA、SCSI、SATA、SAS、FC 等接口。 软硬混合 RAID 软 RAID 性能欠佳，而且不能保护系统分区，因此很难应用于桌面系统。而硬 RAID 成本非常昂贵，不同 RAID 相互独立，不具互操作性。因此，人们采取软件与硬件结合的方式来实现 RAID，从而获得在性能和成本上的一个折中，即较高的性价比。 这种 RAID 虽然采用了处理控制芯片，但是为了节省成本，芯片往往比较廉价且处理能力较弱，RAID 的任务处理大部分还是通过固件驱动程序由 CPU 来完成。 RAID 应用选择 RAID 等级的选择主要有三个因素，即数据可用性、I/O 性能和成本。　目前，在实际应用中常见的主流 RAID 等级是 RAID0，RAID1，RAID3，RAID5，RAID6 和 RAID10，它们之间的技术对比情况如表 1 所示。如果不要求可用性，选择 RAID0 以获得高性能。如果可用性和性能是重要的，而成本不是一个主要因素，则根据磁盘数量选择 RAID1 。如果可用性，成本和性能都同样重要，则根据一般的数据传输和磁盘数量选择 RAID3 或 RAID5 。在实际应用中，应当根据用户的数据应用特点和具体情况，综合考虑可用性、性能和成本来选择合适的 RAID 等级。 表1 主流 RAID 等级技术对比 | RAID等级 | RAID0 |RAID1 |RAID3 | RAID5 | RAID6 | RAID10 | |---|---|---|---|---|---|---| | 别名| 条带 | 镜像 | 专用奇偶校验条带 | 分布奇偶校验条带 | 双重奇偶校验条带 | 镜像加条带 | | 容错性 | 无 | 有 | 有 | 有 | 有 | 有 | | 冗余类型 | 无 | 有 | 有 | 有 | 有 | 有 | | 热备份选择 | 无 | 有 | 有 | 有 | 有 | 有 | | 读性能 | 高 | 低 | 高 | 高 | 高 | 高 | | 随机写性能 | 高 | 低 | 低 | 一般 | 低 | 一般 | | 连续写性能 | 高 | 低 | 低 | 低 | 低 | 一般 | | 需要磁盘数 | n≥1 | 2n (n≥1) | n≥3 | n≥3 | n≥4 | 2n(n≥2)≥4 | | 可用容量 ​ | 全部 | 50% | (n-1)/n | (n-1)/n | (n-2)/n | 50% | 近年来，企业的信息化水平不断发展，数据已经取代计算成为了信息计算的中心，信息数据的安全性就显得尤为至关重要。随着存储技术的持续发展，RAID 技术在成本、性能、数据安全性等诸多方面都将优于其他存储技术，例如磁带库、光盘库等，大多数企业数据中心首选 RAID 作为存储系统。当前存储行业的知名存储厂商均提供全线的磁盘阵列产品，包括面向个人和中小企业的入门级的低端 RAID 产品，面向大中型企业的中高端 RAID 产品。这些存储企业包括了国内外的主流存储厂商，如 EMC、IBM、HP、SUN、NetApp、NEC、HDS、H3C、Infortrend 、华赛等。另外，这些厂商在提供存储硬件系统的同时，还往往提供非常全面的软件系统，这也是用户采购产品的一个主要参考因素。 不同的存储厂商的产品在技术、成本、性能、管理、服务等方面各有优势和不足。用户选择 RAID 的原则是：在成本预算内，满足数据存储需求的前提下，选择最优的存储厂商解决方案。因此，首先用户需要对存储需求作深入的调研和分析，并给出成本预算，然后对众多存储厂商的解决方案进行分析和对比，最后选择出一个综合最优的存储方案。其中，存储产品的扩展性和存储厂家的售后服务需要重点考察，存储需求（如容量、性能）可能会不断升级，存储产品发生故障后的维修和支持保障，这些都要未雨先缪。 总结与展望 回顾 RAID 发展历史，从首次提出概念至今已有二十多年。在此期间，整个社会信息化水平不断提高，数据呈现爆炸式增长趋势，数据取代计算成为信息计算的中心。这促使人们对数据愈加重视，不断追求海量存储容量、高性能、高 安全性、高可用性、可扩展性、可管理性等等。RAID 技术在这样强大的存储需求推动下不断发展进步，时至今日技术已经非常成熟，在各种数据存储系统中得到了十分广泛的应用。 正是由于技术发展的成熟，RAID 技术的未来发展已经不被广泛看好，甚至预言在不久的将来会停止发展，称之为 “ 僵尸技术 ”，即虽然宣布死亡，但在很长一段时间内仍会继续发挥巨大的价值。 然而，当前的 RAID 技术仍然存在诸多不足，各种 RAID 模式都存在自身的缺陷，主要集中在读写性能、实现成本、恢复时间窗口、多磁盘损坏等方面。因此，RAID 技术显然还存在很大的提升空间，具有很大的发展潜力。近年来新出现的 RAID 模式以及学术研究显示了其未来的发展趋势，包括分布式校验、多重校验、混合 RAID 模式、水平和垂直条带、基于固态内存 RAID 、网络校验等等。特别指出的是，多核 CPU 和 GPU 是当前的热点技术，它们大幅提升了主机的可用计算资源，这可以解决 RAID 对计算资源的消耗问题，软 RAID 很可能将重新成为热点。另外，存储硬件性能的提升、存储虚拟化技术、重复数据删除技术以及其他存储技术都会极大地推动 RAID 技术的进一步创新和发展。","date":1540964048000,"updated":1586328684127,"size":19685},{"title":"haproxy设置websocket","slug":"haproxy-websocket","content":" frontend all 0.0.0.0:80    timeout client 86400000    default_backend www_backend    acl is_websocket hdr(Upgrade) -i WebSocket    acl is_websocket hdr_beg(Host) -i ws    use_backend socket_backend if is_websocket ","date":1586328684131,"updated":1586328684131,"size":351},{"title":"年轻人就是要奋斗！","slug":"hardworking","content":" **看到了一篇日志，觉得很鼓舞人心，年轻人就是要奋斗.....![][0]** **【奋斗篇】** 1。每天11：00点前睡觉，每天6：30点前起床 2。每天提醒自己，不要忘记梦想 3。多锻炼身体，身体垮了什么都没有了，男人女人要对自己好一点； 4。努力学习赚钱的本领，钱是一个人活着的根本，是做人的尊严； 5。常回家看看老妈老爸，常给姐姐哥哥电话，亲情是最珍贵的感情； 6。要学会做个倾听者，要多听听别人的感受，从中获得教训； 7。要学会玩，学会有品位的玩； 8。工作上的烦恼，不要带回家，解决不了任何问题，带回来会平添更多烦恼； 9。做工作的有心人； 11。学会奉承领导，多摆笑脸，不做恶人，三缄其口，三思而后行； 12。学会推拖事情，人善被人欺，马善被人骑； 13。不和没素养的人交往，免得受其影响； 14。不与小气的人交往，吃亏的总是自己； 15。对装B的人要一棒子打死，让他（她）下次再也牛不起来！ 16。不与已婚人或者已经同居的人谈感情，多半是浪费口舌，最后没什么收获，反而打击自己的生活激情； 17。要寻找与自己有共同价值观的人，爱自己的人，好好珍惜，好好保护，终了一生； 18。不要把感情浪费在没有希望的人身上，看重外在的人永远都是弱智，只有在伤痕累累时才明白，真正爱她(他)的人原来一直在她(他)身边关注她(他)，而她(他)却一直以为幸福很遥远； 19。不要过分将就一个人，过分将就不是爱情，是犯贱； 20。现实一点，爱情在现实面前总是那么苍白，浪漫的爱情只适合用于梦想； 21。做婚姻的有心人，好好准备步入婚姻，好好准备做一个好丈夫好妻子；{尽力} 22。做生活的有心人，用心准备营造一个美好的家庭，一个安全温馨的家庭；{尽力} 23。不要老是想做救世主，就算是救世主，也没必要去拯救世人。可怜之人，必有可恨之处，而且都是犹大； 24。不要轻易借钱给别人，借钱的人，许多都不想还钱； 25。要明白读过很多书的人不一定有很多知识，没上过学的人却不一定是文盲； 26。不要以貌取人，特别是女人，漂亮的也许是个魔鬼，丑陋的却可能是天使，上天总是公平的； 27。要做回自己，为自己活着； 28。要会装扮自己，邋遢不是一个酷的表现，是没教养的结果； 29。走自己的路，让NB说破嘴皮吧； 30。赚别人的钱，让贫穷见鬼去吧 。 **【现实篇】** 一、一大早被闹钟吵醒，说明还活着； [![][1]][0] 二、不得不从被窝里爬起来上班，说明没有失业； [![][2]][1] 三、收到一些短信，或吃饭聚聚，说明还有朋友想咱； [![][3]][2] 四、听别人的话有时刺耳，说明还有人注意你； [![][4]][3] 五、衣服越来越紧，说明吃得还算营养； [![][5]][4] 六、总想出国去看看，说明生活还有追求； [![][6]][5] 七、很想休息但没批准，说明还有一定位置离不开你； [![][7]][6] 八、看了这个文字还能发出会心的微笑，说明你是快乐幸福的 [![][8]][7] ** \"苦不苦想想长征两万五，累不累看看雷锋董存瑞\"** **记得这是老爸老妈在我儿时常常玩笑的话，但是借此，激励自己还是蛮合适的，不管什么年代，什么背景，奋斗恐怕都是我们实现价值所要经过的漫长过程吧.....就写到这，以此纪念我的北漂一周年.....热烈庆祝blue的漂龄达到一年，级别1.0，战斗力指数★，持续升级中...** [0]: http://piccache2.soso.com/face/_1741936907861372040 [1]: http://piccache3.soso.com/face/_12068042620045069803 [2]: http://piccache3.soso.com/face/_10588562147566172766 [3]: http://piccache2.soso.com/face/_14517093503558503031 [4]: http://piccache4.soso.com/face/_8341351443839529632 [5]: http://piccache4.soso.com/face/_174229135200853802 [6]: http://piccache1.soso.com/face/_6320478214380536216 [7]: http://piccache1.soso.com/face/_2297313088102471409 [0]: http://codante.org/wp-content/uploads/2010/12/qq.gif \"拼了\" [1]: http://piccache2.soso.com/face/_1741936907861372040 [2]: http://piccache3.soso.com/face/_12068042620045069803 [3]: http://piccache3.soso.com/face/_10588562147566172766 [4]: http://piccache2.soso.com/face/_14517093503558503031 [5]: http://piccache4.soso.com/face/_8341351443839529632 [6]: http://piccache4.soso.com/face/_174229135200853802 [7]: http://piccache1.soso.com/face/_6320478214380536216 [8]: http://piccache1.soso.com/face/_2297313088102471409","date":1292293591000,"updated":1586328684132,"size":2804},{"title":"Linux中关于CPU的一些说明","slug":"information-on-the-processor-linux","content":" 逻辑CPU个数 cat /proc/cpuinfo | grep \"processor\" | wc -l 物理CPU个数 cat /proc/cpuinfo | grep \"physical id\" | sort | uniq | wc -l \"siblings\"指的是一个物理CPU有几个逻辑CPU。 \"cpu cores\"指的是一个物理CPU有几个核。 不应该按照flags里是否有ht标志来判断系统是否有超线程能力，而应该： * 如果\"siblings\"和\"cpu cores\"**一致**，则说明**不支持**超线程，或者**超线程未打开**。 * 如果\"siblings\"是\"cpu cores\"**的两倍**，则说明**支持**超线程，并且**超线程已打开**。 举例说明 两个双核超线程CPU： processor   0 1 2 3 4 5 6 7 physical id 0 0 0 0 1 1 1 1 siblings    4 4 4 4 4 4 4 4 core id     0 0 1 1 0 0 1 1 cpu cores   2 2 2 2 2 2 2 2 感谢老男赐予的知识。","date":1283915771000,"updated":1586328684134,"size":678},{"title":"全世界最短的IE判断方法","slug":"ie-to-determine-the-shortest-way-around-the-world","content":" var isIE = !-[1,]; 仅仅需要6bytes即可进行判断，利用了IE与标准浏览器在处理数组的toString方法时的差异来完成的。 对于标准游览器，如果数组里面最后一个字符为逗号，js的引擎会自动剔除它。","date":1301540701000,"updated":1586328684134,"size":523},{"title":"JavaScript开发工具，全面&实用！","slug":"javascript-development-tools-comprehensive-and-practical","content":" 不管你是JavaScript新手还是经验丰富的开发者，你所使用的工具直接影响你的工作效率。开放源代码运动使得拥有得力的工具不再意味着付一大笔钱；实际上你什么都不用付出。本文中将介绍各种对JavaScript开发者真正有实用价值的免费工具。 测试器 * [JSLint --JavaScript的验证器][0]      JSLint取得一个JavaScript源代码并对其扫描。如果发现问题，它送回信息描述问题状况及在源代码中的大概位置。问题不一定就出在句法上，不过常常正是这里出错。JSLint查看一些风格约定和结构问题，它证明不了程序是否正确。它只是提供了另一双眼睛来帮助发现问题。 * [JsUnit][1]        JsUnit是一个客户端（内浏览器）JavaScript单元测试框架。它其实是JUnit给JavaScript的一个口岸。其中还有一个平台来在多个浏览器上以及运行不同操作系统的多个机器上的自动执行测试。 * [YUI Test][2]        YUI Test是一个测试框架，它针对基于浏览器的JavaScript解决方案。你可以用YUI Test在JavaScript 解决方案上轻松添加单元测试。 * [Obtrusive JavaScript Checker][3]        可作为Firefox扩展，Greasemonkey用户脚本，以及Ubiquity命令；Obtrusive JavaScript Checker是一种可以扫过页面上所有元素的工具，发现带有行内事件的HTML元素（这是有危害性的，JavaScript应该是不张扬的）时，它给这部分加红边使其凸显。 * [Crosscheck][4]        Crosscheck是一个开源测试框架，验证内浏览器JavaScript代码。它帮助你确保代码可以在Internet Explorer和Firefox等种种不同的浏览器上运行，而这些浏览器都不需要安装。 * [JSLitmus][5]        JSLitmus是一个轻量级工具用来制作JavaScript的特定标准测试。 * [JavaScriptMVC的测试插件][6]        JavaScriptMVC的测试库提供事件模拟，单元测试，Ajax 夹具，和一个控制台程序。 调试工具 * [Javascript调试工具包][7]      JavaScript调试工具包是一种跨浏览器调试JavaScript的eclipse plugin，它可以在IE,Firefox,Safari,Chrome,Opera甚至是移动浏览器上调试JavaScript。 * [Firebug][8]        作为最受欢迎的网页开发程序工具，Firebug是Firefox的一个插件，可以用它在任何网页上现时编辑，调试和监控CSS, HTML, 和JavaScript。它提供给JavaScript登陆和调试控制台一些有用的功能如AJAX requests logging，JavaScript解释器，DOM explorer等等。[Firebug Lite][9] 可以在IE, Opera, 和Safari上使用。 * [Venkman][10]        Venkman为基于Gecko的浏览器提供功能强大JavaScript调试环境。这个调试器以Firefox & Mozilla插件的形式使用。可以在用户界面上和控制台命令中使用断点管理，调用栈检查，变量/对象检查等功能，可以让你以最习惯的方式调剂。 * [NitobiBug][11]        NitobiBug是一种基于浏览器的JavaScript对象记录和检查工具------与Firebug作用相似。NitobiBug在可以在不同的服务器（IE6+, Safari, Opera, Firefox）上运行以提供开发各种Ajax应用程序一致且功能强大的工具。 * [DamnIT][12]        DamnIT是一种免费服务，当用户在网页上遇到JavaScript错误时它会给你发送电子邮件。 * [JS Bin][13]        JS Bin是一种在线网络应用程序，为帮助JavaScript开发者在一定情景里测试代码片段以及协作调试代码而特别设计。你可以用JS Bin在线编辑测试JavaScript和HTML代码。一旦完成，你可以将URL保存并发送给同伴来进行审查或获得帮助。 * [Blackbird][14]        许多JavaScript开发者仅仅使用alert()来显示各种信息调试代码。Blackbird在JavaScript上提供了记录信息的简单方式以及一个引人注意的控制台程序来察看并过滤信息。 HTTP监控 * [Fiddler][15]      Fiddler是一种Web调试代理，它记录你的电脑和网络之间所有的HTTP(S)流量。可以用Fiddler检查所有HTTP(S)流量，设置断点，干涉进来或出去的数据。 * [TamperData][16]        TamperData是一个追踪并修改http/https请求的Firefox扩展。可以用它做基于网络的应用程序的安全测试，追踪请求/回应。 * [Live HTTP Headers][17]        可以在浏览的时候查看网页的HTTP headers。可以用Live HTTP Headers调试网页应用程序，找出远端网站使用的是那种网站服务器，或者查看远端网站发送的小数据文件。 文件 * [jGrouseDoc][18]      jGrouseDoc可以从源代码中的注释生成API文件。你可以用这个工具记载你需要的所有构造------不仅有函数和变量，还有类文件包，界面，命名空间，包和其它。使用那种JavaScript框架是无关紧要的------你可以不采取框架或工具强加的方式而以自己希望的方式记录代码， * [JSDoc Toolkit][19]        JavaScript的一种文件产生器，以JavaScript形式写成；它自动从加注的JavaScript源代码中生成格式模版化，多页面HTML（或XML, JSON, 抑或其它文本）。 压缩 * [Online Javascript Compression Tool][20]      一个可以用一些压缩算法如[JSMin][21] 和 [Packer][22]压缩JavaScript文件的在线JavaScript压缩器。压缩的JavaScript文件是生产环境中的理想文件，因为它们常常将文件大小减小30-90%。在很大程度上，文件尺寸的缩小是通过除去网页浏览者或访问者不需要的注释和多余的空格字符来实现的。 * [Scriptalizer][23]        一个将多个JavaScript文件组合为一个文件的在线工具。 * [Dojo ShrinkSafe][24]        一种命令行实用程序，允许你用浏览器缩小文件大小，从而缩短响应时间。Dojo压缩器不是建立在脆弱的规则表达式基础上的。它基于来自莫兹拉专案的JavaScript引擎。由于一个基于真正的parse stream，Dojo压缩器比基于规则表达式的工具可以更好体现代符（变量名等等）的环境。 * [YUI Compressor][25]        The YUI Compressor是一种JavaScript压缩器。去除注释和空格之外，它还可以用最小可用变量名混淆局部变量。即使在使用'eval'或'with'之类构造（在这些情况下压缩并不合适），这种混淆也是安全的。与jsmin相比，它平均节省20%。 格式化 * [JavaScript代码美化工具][26]      这个美化工具可处理散乱或压缩的JavaScript代码，不断对其进行快速的格式化并使其可读。编辑程序&集成开发环境 * [Aptana Studio][27]        Aptana Studio是一个完整的网络开发环境。它提供有JavaScript代码自动完成和调试，HTML/CSS/JavaScript代码提示，以及对重要的Ajax类库的支持。Aptana Studio甚至给你页面上所有的，包括你自己的JavaScript提供代码提示。 * [Komodo Edit][28]        Komodo Edit是一种免费开放的源编辑程序。它提供自动完成，调用提示，多种语言支持，语法高亮颜色显示，语法检查，Vi emulation，Emacs快捷键绑定等等功能。扩展Komodo Edit是其最实用的功能之一。你会发现各种对JavaScript开发者有用的扩展（如[JSLint plugin for Komodo][29], [Venkman JavaScript Debugger][30]，等等）。 * [Spket IDE][31]        Spket IDE是JavaScript和XML开发功能强大的工具包。JavaScript, XUL/XBL and Yahoo! Widget开发功能强大的编辑器。JavaScript编辑器有代码完成，语法高亮显示和内容概要等功能，这些功能帮助开发者高效制作出有效的JavaScript代码。Spket IDE为非商业用途免费提供。 其它工具 * [Google的 AJAX APIs Playground][32]      AJAX API Playground装载有Google JavaScript APIs（Maps, Search, Feeds, Calendar, Visualization, Language, Blogger, Libraries和 Earth,等等）例子，你可以编辑运行这些例子帮助你探究Google的APIs可提供的功能。同时也还有保存和输出功能。你可以用保存功能保持编辑的例子以留待以后使用。而输出功能可用来修改例子并把代码公布在一个永久的URL上。 * [QuirksMode -- 相容性表 ][33]        检查CSS2, CSS3, DOM Core, DOM HTML, DOM CSS, DOM Events 和CSS Object Model View主要浏览器相容性状态的最受欢迎的出处。 * [HTML到JavaScript转换器][34]        HTML到JavaScript转换器获得置标并将它转换成一系列可以在JavaScript块中使用的document.write()申明。 * [Glimmer][35]        Glimmer是一种桌面应用软件，可以用它利用jQuery库的作用在网页上轻松制作交互式元素。可以用它轻松制作交错感受如旋转相册/报头，下拉导航，悬停效果，或自定义动画。 * [jQuery Function Builder][36]        你可以用这个工具很快建立一个函数集，当页面加载完毕/准备完毕时，调用该函数集。 * [JavaScript Regex Generator][37]        一个制作规则表达的在线工具。 其它浏览器扩展 * [Firefox, Flock & Seamonkey的网络开发人员扩展][38]      网络开发人员拓展在浏览器中增加了一个菜单和工具条，其中包含许多网络开发工具包括能使你的XHTML生效，发现JavaScript/CSS的错误，网页结构可视化，测试网络表单，改变运行中的XHTML，检查HTTP头信息等等。 * [Opera Dragonfly][39]        Opera Dragonfly 是Opera浏览器的跨设备，跨平台调试环境---调试 JavaScript, 检查编辑CSS和DOM， 并且查看移动设备或计算机上的错误。 * [IE6/7的开发者工具条][40]        微软的英特网浏览器开发者工具条为网页的快速创建，理解和故障诊断提供了各种的工具。 [0]: http://www.jslint.com/ [1]: http://www.jsunit.net/ [2]: http://developer.yahoo.com/yui/yuitest/ [3]: http://robertnyman.com/obtrusive-javascript-checker/ [4]: http://www.thefrontside.net/crosscheck [5]: http://broofa.com/Tools/JSLitmus/ [6]: http://javascriptmvc.com/wiki/index.php?title=Test_Overview [7]: http://www.eclipseplugincentral.com/Web_Links-index-req-viewlink-cid-1372.html [8]: http://getfirebug.com/ [9]: http://getfirebug.com/lite.html [10]: http://www.hacksrus.com/%7Eginda/venkman/ [11]: http://www.nitobibug.com/ [12]: https://damnit.jupiterit.com/ [13]: http://jsbin.com/ [14]: http://www.gscottolson.com/blackbirdjs/ [15]: http://www.fiddler2.com/ [16]: http://tamperdata.mozdev.org/ [17]: http://livehttpheaders.mozdev.org/ [18]: http://jgrouse.com/ [19]: http://code.google.com/p/jsdoc-toolkit/ [20]: http://jscompress.com/ [21]: http://www.crockford.com/javascript/jsmin.html [22]: http://dean.edwards.name/packer/ [23]: http://scriptalizer.com/ [24]: http://dojotoolkit.org/docs/shrinksafe [25]: http://developer.yahoo.com/yui/compressor/ [26]: http://jsbeautifier.org/ [27]: http://www.aptana.com/ [28]: http://www.activestate.com/komodo_edit/ [29]: http://community.activestate.com/xpi/kjslint-jslint-komodo [30]: http://community.activestate.com/xpi/venkman-javascript-debugger [31]: http://www.spket.com/ [32]: http://code.google.com/apis/ajax/playground/ [33]: http://www.quirksmode.org/compatibility.html [34]: http://accessify.com/tools-and-wizards/developer-tools/html-javascript-convertor/ [35]: http://code.msdn.microsoft.com/glimmer [36]: http://accessify.com/tools-and-wizards/developer-tools/jquery-builder/default.php [37]: http://www.jslab.dk/tools.regex.php [38]: http://chrispederick.com/work/web-developer/ [39]: http://www.opera.com/dragonfly/ [40]: http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&displaylang=en#QuickInfoContainer","date":1297242327000,"updated":1586328684136,"size":7116},{"title":"日文假中文字对照表","slug":"japanese-fake-text-table","content":" あ 亚哑娃阿哀爱挨逢葵茜秋恶握旭 苇芦压斡宛姐绚绫或粟 袷安庵按暗案鞍杏 い 以伊位依伟围夷委威尉惟意慰易椅为 畏异移维纬胃萎衣谓违遗医井亥域育 郁矶一壱溢逸稻茨芋允印咽员因姻 引饮淫胤荫院阴隐 う 右宇鸟羽迂雨卯鹈窥丑碓臼涡嘘呗爵 蔚鳗姥厮浦瓜闰云运雲 え 荏饵睿婴影映曳荣永泳泄瑛盈颖颍 英卫咏锐液疫益悦谒越阅厌圆 堰奄宴延怨掩援沿演炎焰烟燕猿绿艳 苑远铅鸳 お 于污甥凹央奥往应押旺横欧殴王翁袄 莺鸥黄冈冲荻亿屋忆臆桶牡乙俺卸恩 温稳音 か 下化何伽价佳加可嘉夏嫁家寡科暇 果架歌河火珂祸禾稼个花苛茄荷华 虾课哗货迦过霞蚊俄峨我牙画卧芽蛾 贺雅饿驾介会解回块坏快怪悔恢怀 戒拐改魁晦械海界皆绘芥蟹开阶贝 凯劾外咳害崖慨概涯碍盖街该铠骸 磬蛙垣柿蛎钩划吓各廓扩搅格核壳获 确觉角赫较郭阁隔革学岳乐额颚挂 笠桅鳅泻割喝恰括活渴滑葛褐辖 且鲣叶桦桦袍株兜龟蒲釜镰啮鸭柏茅 萱粥刈苅瓦乾侃冠寒刊勘劝卷唤堪奸 完官宽干干患感惯憾换敢柑桓棺款欢 寒汉涧灌环甘监看竿管简缓缶翰肝舰 莞观谏贯还鉴间闲关陷韩馆舘丸含岸 严玩癌眼岩赝雁顽颜願 き 企伎危喜器基奇嬉寄歧希几忌挥机旗 既期棋弃机归毅气汽祈季稀纪徽规 记贵起轨辉饥骑鬼龟伪仪妓宜戏技拟 欺牺疑抵义蚁谊议拘菊鞠吉吃吃秸橘 诘杵黍却客脚虐逆丘久仇休及吸宫 弓急救朽求汲泣灸球究穷籍级纠给旧 牛去居巨拒据举渠虚许距锯渔禦鱼亨 享京供侠侨凶兢共凶协匡卿叫乔境峡 强疆怯恐恭挟教桥况狂狭矫胸胁兴荞 乡镜响饷惊仰凝尧晓业局曲极玉桐 仅勤均巾锦斤欣钦琴禁禽筋紧芹菌矜 襟谨近金吟银 く 九俱句区狗玖矩苦躯驱驹具愚虞 空偶寓遇隅串训屑屈掘窟沓靴辔洼 熊隈采栗桑楸勋君薰训群军郡 け 卦袈祁系倾刑兄启圭珪型契形径惠庆 慧憩揭携敬景桂溪稽系经继击茎 荆萤计诣警轻颈鸡芸迎鲸剧戟擎激隙 桁杰欠决洁穴结血诀月件俭倦健兼券 剑喧圈坚嫌建宪悬拳卷检权牵犬献研 砚绢县肩见谦贤轩遣键险显验敛元原 严幻弦灭源玄现弦舷言谚限 こ 乎个古呼固姑孤已库弧户故枯湖狐糊 裤股狐菰虎夸跨钴雇顾鼓五互伍午吴 吾娱后御悟梧檎瑚篡语误护醐乞鲤交 佼侯候光公功效勾厚口向后喉坑垢 好礼孝宏工巧巷幸应庚康弘恒慌抗拘 控攻昂晃更杭校梗构江洪浩港沟甲皇 硬稿糠红紘绞纲耕考肯肱腔膏航荒行 衡讲贡购郊酵钢阁降项香高鸿刚 劫号合壕拷濠豪轰克刻告国谷酷鹄 黑狱漉腰忽惚骨输次顷今困坤垦 婚恨昏昆根捆混痕绀艮魂 さ 些左叉唆嵯左差查沙砂诈锁裟坐座 挫债催再最哉塞妻宰彩才采栽岁济灾 采犀祭细菜裁载际剂在材罪财 坂阪肴崎作削咋扎昨 栅策索错樱匙册刷察撮擦 札杀萨杂捌皿晒三伞参山惨 撤散璨珊产算纂蚕赞酸餐斩暂残 し 仕仔伺使刺司史嗣四士始姿子尸市 师志思指支孜斯施旨枝止死氏狮私 丝纸紫肢脂至视词诗试志咨资赐雌饲 齿事似侍字寺慈持时次滋治尔玺痔 磁示而耳自辞汐鹿式识竺轴 七叱执失嫉室悉湿漆疾质富条 芝蕊缟舍写射拾赦斜煮社纱者谢车 遮蛇邪借勺尺灼爵酌锡若寂弱惹 主取守手朱殊狩珠种肿趣酒首儒受咒 寿授树绶需囚收周宗就州息愁拾洲秀 秋终绣习臭舟瑰众袭蹴辑酋酬集 丑什住充十从戎柔汁兽纵重统叔夙 宿淑祝缩肃塾熟出术述俊峻春瞬竣舜 骏准循旬殉准润盾纯巡遵醇顺处 初所暑曙渚庶绪署书薯诸助叙女序 徐恕锄除伤赏胜匠升召哨商唱尝奖妾 娼宵将小少尚庄床厂彰承抄招掌捷升 昌昭晶松梢樟樵沼消涉湘烧焦照症省 硝祥称章笑绍肖蕉冲裳讼证 诏详象赏酱钟障锺鞘上丈丞乘冗剩 城场常情扰条杖净状叠穰蒸让 锭嘱埴饰拭植殖烛织职色触食蚀辱尻 伸信侵唇娠寝番心慎振新晋森榛浸深 申疹真神秦绅臣芯薪亲诊身辛进针震 人仁刃尘壬寻甚尽肾讯迅阵任 す 笥须图厨逗吹垂帅推水炊睡碎翠 衰遂醉锥锤随瑞髓崇嵩数枢翅雏据杉 菅颇雀裾澄折寸 せ 世濑是凄制势姓征性成政整性晴栖 栖正清牲生盛精圣声制西诚誓请逝醒 青静齐税脆双席惜戚斥昔析石积籍绩 脊责赤硕切拙接摄折设窃节说雪 绝舌蝉仙先千占宣专尖川战扇撰栓 泉浅洗染潜煎煽旋穿箭线羡腺船 荐诠贱践选迁钱闪鲜前善渐然全禅 缮膳 そ 塑措曾楚狙疏祖租粗素组 苏诉阻鼠僧创双仓丧壮奏爽宋 想搜扫操早曹巢枪槽漕燥争 瘦相糟总综聪草葬苍藻装走送遭 霜骚像增憎脏藏赠造促侧则即息捉 束测足速俗属贼族续卒袖其存孙尊 损村逊 た 他多太汰唾堕妥惰打柁舵陀驮 体堆对耐岱带待怠态戴替泰滞胎腿苔 袋贷退逮队黛代台大第题鹰 卓啄宅托拓诺茸 只叩但达辰夺脱竖棚谷狸鳕樽谁 丹单叹坦担探旦淡湛炭短端绽眈 胆蛋诞锻团坛弹断暧檀段男谈 ち 值知地弛耻智池痴稚置致蜘迟驰筑畜 竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱 注虫衷注铸驻猪著丁兆凋 喋宠帖帐厅张征挑畅朝潮牒町 眺听胀肠蝶调谍超跳长顶鸟赖直 朕沈珍赁镇陈 つ 津坠椎槌追痛通 溃坪壶孺爪吊钓鹤 て 亭低停侦剃贞呈堤定帝底庭廷弟悌抵 挺提碇祯程缔艇订蹄邸钉 鼎泥摘敌滴的笛溺哲撤辙迭 铁典填天展店添缠甜贴转颠点传殿 田电 と 兔吐堵涂妒屠徒斗牡渡登赌途都镀 砥蛎努度土奴怒倒党冬冻刀唐塔塘套 岛悼投搭东桃栋盗淘汤涛灯 当痘祷等答筒糖统到董藤讨胆豆踏 逃透镫陶头腾斗冲动同堂导憧撞洞瞳 童胴萄道铜鸨匿得德特督秃毒 独读枥橡凸突届寅噸屯惇 敦豚遁顿吞钝 な 奈那内乍谜滩锅驯绳南楠 软难汝 に 二尼贰迩肉虹廿日乳入如尿韭任 妊忍认 ぬ 濡 ね 宁葱猫热年念捻燃粘 の 乃之囊恼浓纳能脑脓农蚤 は 巴把播霸杷波派琶破婆骂芭马废 排败杯牌背肺辈配倍培媒梅煤狈 买卖赔陪这蝇秤伯剥博拍柏泊白 箔舶薄迫漠爆缚莫驳麦箱 肇橹肌八钵泼发发伐罚拨 筏阀鸠蛤伴判半反叛帆搬斑板 版犯班繁般藩贩采烦颁饭挽 晚番盘蕃蛮 ひ 匪卑否妃庇彼悲扉批披斐比泌疲皮碑 秘绯肥被诽费避非飞簸备尾微枇 琵眉美鼻匹膝菱肘弼必 毕笔*姬媛纽百谬彪标冰漂瓢票 表评豹庙描病秒苗锚蒜蛭品彬斌 浜濒贫宝频敏瓶 ふ 不付夫妇富布府怖扶敷斧普浮父 符腐肤芙谱负赋赴阜附侮抚武舞葡 部封枫风伏副复幅服福服覆渊 弗沸物分吻坟愤扮焚奋粉粪 纷文闻 へ 丙兵坪币平弊柄并蔽闭陛米页壁 癖碧别瞥蔑蓖偏变片编返遍便勉 娩牟鞭 ほ 保铺圃捕步辅募墓慕戊暮母 簿菩傲俸包呆报奉宝峰崩庖抱捧放 方朋法泡烹炮缝胞芳萌蜂褒访丰邦 锋饱凤鹏乏亡傍剖坊妨帽忘忙房暴望 某棒冒纺肪膨谋貌贸防吠颊北仆卜 墨扑朴牧睦穆扣勃没掘奔本翻凡 盆 ま 摩磨魔麻埋妹昧枚每哩幕膜枕 鳟亦又抹末沫万慢满漫 蔓 み 味未魅巳箕密蜜妙耗民眠 む 务梦无牟矛雾鹉婿娘冥 め 名命明盟迷铭鸣牝灭免棉绵缅面 も 摸模茂妄孟毛猛盲纲耗蒙储木默目 勿饼尤问闷纹门 や 也冶夜爷耶野弥矢厄役约药靖柳 ゆ 愉愈油谕输唯佑优勇友幽悠犹 有釉涌犹由诱游邑邮雄融夕 よ 予余于誉与预幼妖容庸扬摇拥曜杨 样洋溶熔用羔羊耀叶蓉要谣踊遥阳养 愚抑欲沃浴翌翼淀 ら 罗螺裸来莱赖雷洛络落酪乱卵岚栏滥 蓝兰览 り 利吏履李梨理璃痢里里离陆律率立 掠略刘流溜琉留硫粒隆龟龙侣虑旅 虏了亮僚两凌料梁凉疗瞭粮良 谅辽量陵领力绿伦厘林淋琳临轮邻 鳞麟 る 琉垒泪累类 れ 令伶例冷励岭怜玲礼苓铃隶零灵丽龄 历列劣烈裂廉恋怜涟炼练联莲连 链 ろ 吕鲁橹炉赂路露劳娄廊弄郎楼榔浪漏 牢狼老郎六禄肋论 わ 倭和话歪赂或鹫互亘鳄诧 湾碗腕 を ん 特殊汉字 丕豫舒于亚亢伉佗偃会传 傅兀儿俞冀胄懔几凰刮邵匈 厥篡曼哭啼喃国坡壶寿奕奂 奢奸姜媚孕孚宦尹崔廖厨彝 弋弩彭徊懿戈扰擒旻 昂皓遂旷日朵柯枢枭梵棍楷 榆樊橙柠檬樱毋毯沛泄 泪衍洵浣淮渭涣滕潼潘濮瀑 焉焕熙灼燎狄狡猾独珀琅琥瑁瑜莹瑶 瑾璋甄痒痉痹疾发皖皓眈真眸 矜祀祠祺秉稠站筐笼 藤靡绒绮羌羞群义翔翡耿聘聪 肛胄胚休臂膺艾芒莓范苞茉荀荼 莉蔡蓟籍芦虔蜀萤虫袁裔襄 纳诛谏楷谡谭让貂贾赵 趾蹂躏躬轧轲轸轴辟迪逅达 邂边却鄂钜锯闾阎阔陂陕陨 陇雍霍雹霖霹巩韦颂颓冯 骆骗赛骠髦髯魏魉鲂鲍鸯莺糜 麒黎昱炫琦谵邓红庞催郃 瓒楮毗","date":1292923493000,"updated":1586328684135,"size":3548},{"title":"Javascript从url中获取参数","slug":"javascript-get-parameters-from-url","content":" 有时我们需要在客户端获取链接参数，一个常见的方法是将链接当做字符串，按照链接的格式分解，然后获取对应的参数值。 字符串拆分 function getQueryString(name) {     if (location.href.indexOf(\"?\") == -1 || location.href.indexOf(name + '=') == -1) {         return '';     }     var queryString = location.href.substring(location.href.indexOf(\"?\") + 1);     var parameters = queryString.split(\"&\");     var pos, paraName, paraValue;     for (var i = 0; i < parameters.length; i++) {         pos = parameters[i].indexOf('=');         if (pos == -1) continue;         paraName = parameters[i].substring(0, pos);         paraValue = parameters[i].substring(pos + 1);         if (paraName == name) {             return unescape(paraValue.replace(/\\+/g, \" \"));         }     }     return ''; }; // http://localhost/test.html?aa=bb&test=cc+dd&ee=ff alert(getQueryString('test')); 使用正则 function getQueryStringRegExp(name) {     var reg = new RegExp(\"(^|\\\\?|&)\" + name + \"=([^&]*)(\\\\s|&|$)\", \"i\");     return (reg.test(location.href)) ? unescape(RegExp.$2.replace(/\\+/g, \" \")) : \"\"; }; // http://localhost/test.html?aa=bb&test=cc+dd&ee=ff alert(getQueryStringRegExp('test')); ","date":1289977776000,"updated":1586328684136,"size":1273},{"title":"Linux find命令详解","slug":"linux-command-find-explained","content":" 感谢老男孩赐予的知识。 老男孩（QQ:49000448， mail:49000448@qq.com） 查看帮助（很重要） find --help 显示所有文件 显示多个目录文件列表(仅限于3层) find test ryan hyran -maxdepth 3 按文件名、路径名查找 多参数，可用通配符 find -maxdepth 3 -name 'd*' find -maxdepth 3 -name 'ji*\\.sql' find -path '*server*' 按文件属性查找 find . -type f find . -size -100M find . -size +1G find . -mtime +2 find . -perm 755 find . -perm -755  \\#权限至少为755 组合查找 find . -type d -mtime +30 find . -type f -mtime +15 find . -type f -size +10M find . -type d -name 'server*' find /ryan -name '*.log' -mtime +5 使用逻辑运算查找 #/ryan目录下30天前访问过得大于20M的文件（-a and,-o or !） find /ryan -size +20M -a atime 30 find /ryan -type f -o -mtime +15 find /ryan ! -user rhy 对查找文件实施操作 #删目录 30天以前 find . -type d -mtime +30 |xargs rm -rf #删文件 15天以前 #删目录下文件用这个好 find . -type f -mtime +15 |xargs rm -f ","date":1277881068000,"updated":1586328684141,"size":1287},{"title":"Javascript在IE和Firefox下的兼容性问题整理","slug":"javascript-in-the-ie-and-firefox-compatibility-finishing","content":" **在现代浏览器已经基本普及的今天，这些问题只能当做美好的回忆来看看了~ modified at 2018** Javascript的IE和Firefox兼容性问题集合 表单 .formName.item(\"itemName\") - IE：可以使用.formName.item(\"itemName\")或.formName.elements[\"elementName\"] - Firefox：只能使用.formName.elements[\"elementName\"] **解决方法：**统一使用.formName.elements[\"elementName\"] 集合类对象 - IE：可以使用()或[]获取集合类对象; - Firefox：只能使用[]获取集合类对象. **解决方法：**统一使用[]获取集合类对象. 自定义属性 - IE：可以使用获取常规属性的方法来获取自定义属性，也可以使用getAttribute()获取自定义属性 - Firefox：只能使用getAttribute()获取自定义属性. **解决方法：**统一通过getAttribute()获取自定义属性. 元素获取 (\"idName\") - IE：可以使用(\"idName\")或(\"idName\")来取得id为idName的HTML对象; - Firefox：只能使用(\"idName\")来取得id为idName的HTML对象。 **解决方法：**统一用(\"idName\")来取得id为idName的HTML对象。 命名重复 变量名与某HTML对象ID相同的问题 - IE：HTML对象的ID可以作为document的下属对象变量名直接使用，Firefox下则不能； - Firefox：可以使用与HTML对象ID相同的变量名，IE下则不能。 **解决方法：**使用.getElementById(\"idName\")代替.idName。最好不要取HTML对象ID相同的变量名,以减少错误;在声明变量时，一律加上var，以避免产生歧义。 const - IE：只能使用var关键字来定义变量。 - Firefox：可以使用const关键字或var关键字来定义变量。 **解决方法：**统一使用var关键字来定义变量。 input.type input.type属性问题 - IE：input.type属性为只读。 - Firefox：input.type属性为读写。 window.event - window.event只能在IE下运行，而不能在Firefox下运行，这是因为Firefox的event只能在事件发生的现场使用。 - Firefox：必须从源处加入event作参数传递。IE忽略该参数，用window.event来读取该event。 **解决方法：** &lt;script language=\"javascript\"&gt; function fun(e) {     e = e ? e : (window.event ? window.event : null); } &lt;/script&gt; event.x与event.y 说明:IE下,even对象有x,y属性,但是没有pageX,pageY属性;Firefox下,even对象有pageX,pageY属性,但是没有x,y属性. **解决方法：**使用(mX = event.x ? event.x : event.pageX;)来代替IE下的event.x或者Firefox下的event.pageX. event.srcElement - IE：event对象有srcElement属性，但是没有target属性； - Firefox：even对象有target属性，但是没有srcElement属性。 **解决方法：**使用(obj = event.srcElement?event.srcElement:event.target;)来代替IE下的event.srcElement或者Firefox下的event.target。请同时注意event 的兼容性问题。 window.location.href - IE或者Firefox2.0.x：可以使用window.location或window.location.href； - Firefox1.5.x：只能使用window.location **解决方法：**使用window.location来代替window.location.href. 模态和非模态窗口 - IE：可以通过showModalDialog和showModelessDialog打开模态和非模态窗口 - Firefox：不能！ **解决方法：**直接使用window.open(pageURL, name, parameters)方式打开新窗口。 如果需要将子窗口中的参数传递回父窗口,可以在子窗口中使用window.opener来访问父窗口. 例如：var parWin =  window.opener;parWin.document.getElementById(\"Aqing\").value = \"Aqing\"; frame 以下面的frame为例： <frame src=\"xxx.html\" id=\"frameId\" name=\"frameName\" /> - 访问frame对象：      [ ie中返回的为object , ff中会显示具体的类型 比如： object window ]        - IE：使用window.frameId或者window.frameName来访问这个frame对象. frameId和frameName可以同名。        - Firefox：只能使用window.frameName来访问这个frame对象.   **在IE和Firefox中都可以使用window.document.getElementById(\"frameId\")来访问这个frame对象.** - 切换frame内容:        在IE和Firefox中都可以使用window.document.getElementById(\"testFrame\").src = \"xxx.html\"或window.frameName.location = \"xxx.html\"来切换frame的内容.        如果需要将frame中的参数传回父窗口(注意不是opener,而是parent frame)，可以在frme中使用parent来访问父窗口。例如：parent.document.form1.filename.value=\"a\"; body - IE：body必须在body标签被浏览器完全读入之后才存在。 - Firefox：body在body标签没有被浏览器完全读入之前就存在。 事件委托方法 - IE：document.body.onload = inject; //function inject()在这之前已被实现 - Firefox：document.body.onload = inject(); 父元素 Firefox与IE的父元素(parentElement)的区别 - IE：obj.parentElement - Firefox：obj.parentNode **解决方法：**因为firefox与IE都支持DOM,因此使用obj.parentNode是不错选择. 鼠标指针cursor cursor:hand VS cursor:pointer - Firefox：不支持hand - IE：支持pointer **解决方法：**统一使用pointer 内容文本 innerText在IE中能正常工作。但是innerText在FireFox中却不行，需用textContent。 **解决方法：** if(navigator.appName.indexOf(\"Explorer\") &gt; -1){     document.getElementById('element').innerText = \"my text\"; } else{     document.getElementById('element').textC; } 对table的操作 IE，Firefox以及其它浏览器对于 table 标签的操作都各不相同，在IE中不允许对table和tr的innerHTML赋值，使用js增加一个tr时，使用appendChild方法也不管用。 **解决方法：** //向table追加一个空行： var row = otable.insertRow(-1); var cell = document.createElement(\"td\"); cell.innerHTML = \" \"; cell.className = \"a\"; row.appendChild(cell); options集合 对select的options集合操作 枚举元素除了[]外，SelectName.options.item()也是可以的,另外SelectName.options.length，SelectName.options.add/remove都可以在两种浏览器上使用。 **注意在 add后赋值元素，否则会失败。** XMLHTTP if (window.XMLHttpRequest) {     xmlhttp = new XMLHttpRequest(); } else if (window.ActiveXObject) {  // code for IE     xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\"); } if (xmlhttp){     xmlhttp.onreadystatechange = xmlhttpChange;     xmlhttp.open(\"GET\",url,true);     xmlhttp.send(); } ","date":1298881406000,"updated":1586328684137,"size":4735},{"title":"javascript 的真值婊","slug":"javascript-true-values","content":" ![](http://static.0.codante.org/1/2/123a400bd4c0405b26dab07bee0b479fce6cf63b.jpg)","date":1496408759000,"updated":1586328684138,"size":195},{"title":"PHP中不太常用的方法","slug":"less-commonly-used-in-php","content":" 返回当前class的所有方法 get_class_methods() 返回当前页所有加载的文件 get_included_files() 返回当前页所有class get_declared_classes() 返回所有的接口 get_declared_interfaces() 返回所有的function get_defined_functions() 返回当前页所有的变量 get_defined_vars() 返回当前用户 get_current_user() 返回所有常量 get_defined_constants() 获取PHP当前加载的所有扩展 get_loaded_extensions() 获取指定扩展的所有方法列表 get_extension_funcs('xml') ","date":1277688031000,"updated":1586328684139,"size":956},{"title":"Linux文本处理命令大集合","slug":"linux-collection-of-text-processing","content":" 清空文档 echo \"\" > filename > filename cat /dev/null > filename 统计 **在apache的log中找出访问次数最多的10个IP。** awk '{print $1}' apache_log |sort |uniq -c|sort -nr|head cat xxxxx | awk '{print $2}'|sort|uniq -c|sort -nr| head -10 ","date":1278065448000,"updated":1586328684140,"size":714},{"title":"LINUX+PHP实现网页快照（截屏）","slug":"linux-php-screenshot","content":" 服务器端 为实现截图的程序必须借助服务器端程序：http://code.google.com/p/wkhtmltopdf/ 可将网页转换为pdf或者图片，32和64位有区别，找个适合自己服务器的版本。 安装 安装过程十分简单：解压 -&gt; 找个合适的路径放下... 执行 命令行调用 /servers/app/qtwebkit/wkHtmlToImage weibo.com weibo.com.png 默认的清晰度比较高，图片会很大，生成图片需要一定的时间。 php exec('/servers/app/qtwebkit/wkHtmlToImage weibo.com weibo.com.png'); 具体的使用方法 <?php ob_start(); //如果将输出的文件名设置为'-'，则直接返回文件数据流 passthru('/servers/app/qtwebkit/wkHtmlToImage --width 800 --height 600 -quality 85 weibo.com -'); $fileName = self::cachePath() . '/' . self::name(); $content = ob_get_clean(); //写入图片文件，备用 //file_put_contents($fileName, $content); //直接输出为图片 header(\"Content-type: image/png\"); echo $content; ?> 中文乱码问题 主要看服务器是否支持中文语言，如果截图中出现乱码，直接装个中文包就好了。 yum install fonts-chinese ","date":1345810097000,"updated":1586328684142,"size":1200},{"title":"在命令行让MAC说话唱歌","slug":"let-mac-speak","content":" 调用say /usr/bin/say 那啥那啥啥 参数 -v 选择声音，默认是Siri(say -v Samantha) -o 输出为音频文件，(say -v Cellos -o \"xxx.m4a\") 写脚本的时候为了兼容linux系统，可以包个方法 function VT (){     if [[ (-f /usr/bin/say) && (-n \"${1}\") ]]; then         /usr/bin/say \"${1}\"     fi } ","date":1586328684139,"updated":1586328684139,"size":327},{"title":"linux下利用iptables屏蔽IP段","slug":"linux-iptables-ip-blockade","content":" 屏蔽单个IP   iptables -I INPUT -s 124.115.0.199 -j DROP 屏蔽IP段 iptables -I INPUT -s 124.115.0.0/16 -j DROP iptables -I INPUT -s 124.115.3.0/16 -j DROP iptables -I INPUT -s 124.115.4.0/16 -j DROP 屏蔽整个IP段 iptables -I INPUT -s 124.115.0.0/8 -j DROP 屏蔽几个IP段 iptables -I INPUT -s 61.37.80.0/24 -j DROP iptables -I INPUT -s 61.37.81.0/24 -j DROP 在执行之后不要忘记保存，并重启iptables服务。 /etc/rc.d/init.d/iptables save service iptables restart ","date":1278572329000,"updated":1586328684141,"size":888},{"title":"linux中去掉Windows文件的\"^M\"字符","slug":"linux-removed-windows-newline-characters-in-the-file","content":" VI 对某个文件进行处理 vi filename :%s/^M/\\r/g SED方法 PERL方法 可对多文件批量处理 perl -p -i -e \"s/^M//g\" `find .` `find .` 可以替换为任何文件或者多个文件，它的作用为提取所需的文件名。 `^M`字符需要使用`Ctrl+v+m`来输入 持续......","date":1586328684143,"updated":1586328684144,"size":262},{"title":"linux常用端口对照","slug":"linux-port-list","content":" 著名端口 - 1 tcpmux TCP 端口服务多路复用 - 5 rje 远程作业入口 - 7 echo Echo 服务 - 9 discard 用于连接测试的空服务 - 11 systat 用于列举连接了的端口的系统状态 - 13 daytime 给请求主机发送日期和时间 - 17 qotd 给连接了的主机发送每日格言 - 18 msp 消息发送协议 - 19 chargen 字符生成服务；发送无止境的字符流 - 20 ftp-data FTP 数据端口 - 21 ftp 文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用 - 22 ssh 安全 Shell（SSH）服务 - 23 telnet Telnet 服务 - 25 smtp 简单邮件传输协议（SMTP） - 37 time 时间协议 - 39 rlp 资源定位协议 - 42 nameserver 互联网名称服务 - 43 nicname WHOIS 目录服务 - 49 tacacs 用于基于 TCP/IP 验证和访问的终端访问控制器访问控制系统 - 50 re-mail-ck 远程邮件检查协议 - 53 domain 域名服务（如 BIND） - 63 whois++ WHOIS++，被扩展了的 WHOIS 服务 - 67 bootps 引导协议（BOOTP）服务；还被动态主机配置协议（DHCP）服务使用 - 68 bootpc Bootstrap（BOOTP）客户；还被动态主机配置协议（DHCP）客户使用 - 69 tftp 小文件传输协议（TFTP） - 70 gopher Gopher 互联网文档搜寻和检索 - 71 netrjs-1 远程作业服务 - 72 netrjs-2 远程作业服务 - 73 netrjs-3 远程作业服务 - 73 netrjs-4 远程作业服务 - 79 finger 用于用户联系信息的 Finger 服务 - 80 http 用于万维网（WWW）服务的超文本传输协议（HTTP） - 88 kerberos Kerberos 网络验证系统 - 95 supdup Telnet 协议扩展 - 101 hostname SRI-NIC 机器上的主机名服务 - 102 iso-tsap ISO 开发环境（ISODE）网络应用 - 105 csnet-ns 邮箱名称服务器；也被 CSO 名称服务器使用 - 107 rtelnet 远程 Telnet - 109 pop2 邮局协议版本2 - 110 pop3 邮局协议版本3 - 111 sunrpc 用于远程命令执行的远程过程调用（RPC）协议，被网络文件系统（NFS）使用 - 113 auth 验证和身份识别协议 - 115 sftp 安全文件传输协议（SFTP）服务 - 117 uucp-path Unix 到 Unix 复制协议（UUCP）路径服务 - 119 nntp 用于 USENET 讨论系统的网络新闻传输协议（NNTP） - 123 ntp 网络时间协议（NTP） - 137 netbios-ns 在红帽企业 Linux 中被 Samba 使用的 NETBIOS 名称服务 - 138 netbios-dgm 在红帽企业 Linux 中被 Samba 使用的 NETBIOS 数据报服务 - 139 netbios-ssn 在红帽企业 Linux 中被 Samba 使用的NET BIOS 会话服务 - 143 imap 互联网消息存取协议（IMAP） - 161 snmp 简单网络管理协议（SNMP） - 162 snmptrap SNMP 的陷阱 - 163 cmip-man 通用管理信息协议（CMIP） - 164 cmip-agent 通用管理信息协议（CMIP） - 174 mailq MAILQ - 177 xdmcp X 显示管理器控制协议 - 178 nextstep NeXTStep 窗口服务器 - 179 bgp 边界网络协议 - 191 prospero Cliffod Neuman 的 Prospero 服务 - 194 irc 互联网中继聊天（IRC） - 199 smux SNMP UNIX 多路复用 - 201 at-rtmp AppleTalk 选路 - 202 at-nbp AppleTalk 名称绑定 - 204 at-echo AppleTalk echo 服务 - 206 at-zis AppleTalk 区块信息 - 209 qmtp 快速邮件传输协议（QMTP） - 210 z39.50 NISO Z39.50 数据库 - 213 ipx 互联网络分组交换协议（IPX），被 Novell Netware 环境常用的数据报协议 - 220 imap3 互联网消息存取协议版本3 - 245 link LINK - 347 fatserv Fatmen 服务器 - 363 rsvp_tunnel RSVP 隧道 - 369 rpc2portmap Coda 文件系统端口映射器 - 370 codaauth2 Coda 文件系统验证服务 - 372 ulistproc UNIX Listserv - 389 ldap 轻型目录存取协议（LDAP） - 427 svrloc 服务位置协议（SLP） - 434 mobileip-agent 可移互联网协议（IP）代理 - 435 mobilip-mn 可移互联网协议（IP）管理器 - 443 https 安全超文本传输协议（HTTP） - 444 snpp 小型网络分页协议 - 445 microsoft-ds 通过 TCP/IP 的服务器消息块（SMB） - 464 kpasswd Kerberos 口令和钥匙改换服务 - 468 photuris Photuris 会话钥匙管理协议 - 487 saft 简单不对称文件传输（SAFT）协议 - 488 gss-http 用于 HTTP 的通用安全服务（GSS） - 496 pim-rp-disc 用于协议独立的多址传播（PIM）服务的会合点发现（RP-DISC） - 500 isakmp 互联网安全关联和钥匙管理协议（ISAKMP） - 535 iiop 互联网内部对象请求代理协议（IIOP） - 538 gdomap GNUstep 分布式对象映射器（GDOMAP） - 546 dhcpv6-client 动态主机配置协议（DHCP）版本6客户 - 547 dhcpv6-server 动态主机配置协议（DHCP）版本6服务 - 554 rtsp 实时流播协议（RTSP） - 563 nntps 通过安全套接字层的网络新闻传输协议（NNTPS） - 565 whoami whoami - 587 submission 邮件消息提交代理（MSA） - 610 npmp-local 网络外设管理协议（NPMP）本地 / 分布式排队系统（DQS） - 611 npmp-gui 网络外设管理协议（NPMP）GUI / 分布式排队系统（DQS） - 612 hmmp-ind HMMP 指示 / DQS - 631 ipp 互联网打印协议（IPP） - 636 ldaps 通过安全套接字层的轻型目录访问协议（LDAPS） - 674 acap 应用程序配置存取协议（ACAP） - 694 ha-cluster 用于带有高可用性的群集的心跳服务 - 749 kerberos-adm Kerberos 版本5（v5）的\"kadmin\"数据库管理 - 750 kerberos-iv Kerberos 版本4（v4）服务 - 765 webster 网络词典 - 767 phonebook 网络电话簿 - 873 rsync rsync 文件传输服务 - 992 telnets 通过安全套接字层的 Telnet（TelnetS） - 993 imaps 通过安全套接字层的互联网消息存取协议（IMAPS） - 994 ircs 通过安全套接字层的互联网中继聊天（IRCS） - 995 pop3s 通过安全套接字层的邮局协议版本3（POPS3） UNIX 特有的端口 - 512/tcp exec 用于对远程执行的进程进行验证 - 512/udp biff [comsat] 异步邮件客户（biff）和服务（comsat） - 513/tcp login 远程登录（rlogin） - 513/udp who [whod] 登录的用户列表 - 514/tcp shell [cmd] 不必登录的远程 shell（rshell）和远程复制（rcp） - 514/udp syslog UNIX 系统日志服务 - 515 printer [spooler] 打印机（lpr）假脱机 - 517/udp talk 远程对话服务和客户 - 518/udp ntalk 网络交谈（ntalk），远程对话服务和客户 - 519 utime [unixtime] UNIX 时间协议（utime） - 520/tcp efs 扩展文件名服务器（EFS） - 520/udp router [route, routed] 选路信息协议（RIP） - 521 ripng 用于互联网协议版本6（IPv6）的选路信息协议 - 525 timed [timeserver] 时间守护进程（timed） - 526/tcp tempo [newdate] Tempo - 530/tcp courier [rpc] Courier 远程过程调用（RPC）协议 - 531/tcp conference [chat] 互联网中继聊天 - 532 netnews Netnews - 533/udp netwall 用于紧急广播的 Netwall - 540/tcp uucp [uucpd] Unix 到 Unix 复制服务 - 543/tcp klogin Kerberos 版本5（v5）远程登录 - 544/tcp kshell Kerberos 版本5（v5）远程 shell - 548 afpovertcp 通过传输控制协议（TCP）的 Appletalk 文件编制协议（AFP） - 556 remotefs [rfs_server, rfs] Brunhoff 的远程文件系统（RFS） 注册的端口 - 1080 socks SOCKS 网络应用程序代理服务 - 1236 bvcontrol [rmtcfg] Garcilis Packeten 远程配置服务器[a] - 1300 h323hostcallsc H.323 电话会议主机电话安全 - 1433 ms-sql-s Microsoft SQL 服务器 - 1434 ms-sql-m Microsoft SQL 监视器 - 1494 ica Citrix ICA 客户 - 1512 wins Microsoft Windows 互联网名称服务器 - 1524 ingreslock Ingres 数据库管理系统（DBMS）锁定服务 - 1525 prospero-np 无特权的 Prospero - 1645 datametrics [old-radius] Datametrics / 从前的 radius 项目 - 1646 sa-msg-port [oldradacct] sa-msg-port / 从前的 radacct 项目 - 1649 kermit Kermit 文件传输和管理服务 - 1701 l2tp [l2f] 第2层隧道服务（LT2P） / 第2层转发（L2F） - 1718 h323gatedisc H.323 电讯守门装置发现机制 - 1719 h323gatestat H.323 电讯守门装置状态 - 1720 h323hostcall H.323 电讯主持电话设置 - 1758 tftp-mcast 小文件 FTP 组播 - 1759 mtftp 组播小文件 FTP（MTFTP） - 1789 hello Hello 路由器通信端口 - 1812 radius Radius 拨号验证和记帐服务 - 1813 radius-acct Radius 记帐 - 1911 mtp Starlight 网络多媒体传输协议（MTP） - 1985 hsrp Cisco 热备用路由器协议 - 1986 licensedaemon Cisco 许可管理守护进程 - 1997 gdp-port Cisco 网关发现协议（GDP） - 2049 nfs [nfsd] 网络文件系统（NFS） - 2102 zephyr-srv Zephyr 通知传输和发送服务器 - 2103 zephyr-clt Zephyr serv-hm 连接 - 2104 zephyr-hm Zephyr 主机管理器 - 2401 cvspserver 并行版本系统（CVS）客户 / 服务器操作 - 2430/tcp venus 用于 Coda 文件系统（codacon 端口）的 Venus 缓存管理器 - 2430/udp venus 用于 Coda 文件系统（callback/wbc interface 界面）的 Venus 缓存管理器 - 2431/tcp venus-se Venus 传输控制协议（TCP）的副作用 - 2431/udp venus-se Venus 用户数据报协议（UDP）的副作用 - 2432/udp codasrv Coda 文件系统服务器端口 - 2433/tcp codasrv-se Coda 文件系统 TCP 副作用 - 2433/udp codasrv-se Coda 文件系统 UDP SFTP 副作用 - 2600 hpstgmgr [zebrasrv] HPSTGMGR；Zebra 选路 - 2601 discp-client [zebra] discp 客户；Zebra 集成的 shell - 2602 discp-server [ripd] discp 服务器；选路信息协议守护进程（ripd） - 2603 servicemeter [ripngd] 服务计量；用于 IPv6 的 RIP 守护进程 - 2604 nsc-ccs [ospfd] NSC CCS；开放式短路径优先守护进程（ospfd） - 2605 nsc-posa NSC POSA；边界网络协议守护进程（bgpd） - 2606 netmon [ospf6d] Dell Netmon；用于 IPv6 的 OSPF 守护进程（ospf6d） - 2809 corbaloc 公共对象请求代理体系（CORBA）命名服务定位器 - 3130 icpv2 互联网缓存协议版本2（v2）；被 Squid 代理缓存服务器使用 - 3306 mysql MySQL 数据库服务 - 3346 trnsprntproxy Trnsprnt 代理 - 4011 pxe 执行前环境（PXE）服务 - 4321 rwhois 远程 Whois（rwhois）服务 - 4444 krb524 Kerberos 版本5（v5）到版本4（v4）门票转换器 - 5002 rfe 无射频以太网（RFE）音频广播系统 - 5308 cfengine 配置引擎（Cfengine） - 5999 cvsup [CVSup] CVSup 文件传输和更新工具 - 6000 x11 [X] X 窗口系统服务 - 7000 afs3-fileserver Andrew 文件系统（AFS）文件服务器 - 7001 afs3-callback 用于给缓存管理器回电的 AFS 端口 - 7002 afs3-prserver AFS 用户和组群数据库 - 7003 afs3-vlserver AFS 文件卷位置数据库 - 7004 afs3-kaserver AFS Kerberos 验证服务 - 7005 afs3-volser AFS 文件卷管理服务器 - 7006 afs3-errors AFS 错误解释服务 - 7007 afs3-bos AFS 基本监查进程 - 7008 afs3-update AFS 服务器到服务器更新器 - 7009 afs3-rmtsys AFS 远程缓存管理器服务 - 9876 sd 会话指引器 - 10080 amanda 高级 Maryland 自动网络磁盘归档器（Amanda）备份服务 - 11371 pgpkeyserver 良好隐私（PGP） / GNU 隐私卫士（GPG）公钥服务器 - 11720 h323callsigalt H.323 调用信号交替 - 13720 bprd Veritas NetBackup 请求守护进程（bprd） - 13721 bpdbm Veritas NetBackup 数据库管理器（bpdbm） - 13722 bpjava-msvc Veritas NetBackup Java / Microsoft Visual C++ (MSVC) 协议 - 13724 vnetd Veritas 网络工具 - 13782 bpcd Vertias NetBackup - 13783 vopied Veritas VOPIED 协议 - 22273 wnn6 [wnn4] 假名/汉字转换系统[c] - 26000 quake Quake（以及相关的）多人游戏服务器 - 26208 wnn6-ds - 33434 traceroute Traceroute 网络跟踪工具 **注:**     1. /etc/services 中的注释如下：端口1236被注册为\"bvcontrol\"，但是它也被 Gracilis Packeten 远程配置服务器使用。正式名称被列为主要名称，未注册的名称被列为别名。     2. 在 /etc/services 中的注释：端口 2600 到 2606 被 zebra 软件包未经注册而使用。主要名称是被注册的名称，被 zebra 使用的未注册名称被列为别     3. /etc/services 文件中的注释：该端口被注册为 wnn6，但是还在 FreeWnn 软件包中使用了未注册的\"wnn4\"。 数据报传递协议端口 - 1/ddp rtmp 路由表管理协议 - 2/ddp nbp 名称绑定协议 - 4/ddp echo AppleTalk Echo 协议 - 6/ddp zip 区块信息协议 Kerberos（工程 Athena/MIT）端口 - 751 kerberos_master Kerberos 验证 - 752 passwd_server Kerberos 口令（kpasswd）服务器 - 754 krb5_prop Kerberos v5 从属传播 - 760 krbupdate [kreg] Kerberos 注册 - 1109 kpop Kerberos 邮局协议（KPOP） - 2053 knetd Kerberos 多路分用器 - 2105 eklogin Kerberos v5 加密的远程登录（rlogin） 未注册的端口 - 15/tcp netstat 网络状态（netstat） - 98/tcp linuxconf Linuxconf Linux 管理工具 - 106 poppassd 邮局协议口令改变守护进程（POPPASSD） - 465/tcp smtps 通过安全套接字层的简单邮件传输协议（SMTPS） - 616/tcp gii 使用网关的（选路守护进程）互动界面 - 808 omirr [omirrd] 联机镜像（Omirr）文件镜像服务 - 871/tcp supfileserv 软件升级协议（SUP）服务器 - 901/tcp swat Samba 万维网管理工具（SWAT） - 953 rndc Berkeley 互联网名称域版本9（BIND 9）远程名称守护进程配置工具 - 1127 sufiledbg 软件升级协议（SUP）调试 - 1178/tcp skkserv 简单假名到汉字（SKK）日文输入服务器 - 1313/tcp xtel 法国 Minitel 文本信息系统 - 1529/tcp support [prmsd, gnatsd] GNATS 错误跟踪系统 - 2003/tcp cfinger GNU Finger 服务 - 2150 ninstall 网络安装服务 - 2988 afbackup afbackup 客户-服务器备份系统 - 3128/tcp squid Squid 万维网代理缓存 - 3455 prsvp RSVP 端口 - 5432 postgres PostgreSQL 数据库 - 4557/tcp fax FAX 传输服务（旧服务） - 4559/tcp hylafax HylaFAX 客户-服务器协议（新服务） - 5232 sgi-dgl SGI 分布式图形库 - 5354 noclog NOCOL 网络操作中心记录守护进程（noclogd） - 5355 hostmon NOCOL 网络操作中心主机监视 - 5680/tcp canna Canna 日文字符输入界面 - 6010/tcp x11-ssh-offset 安全 Shell（SSH）X11 转发偏移 - 6667 ircd 互联网中继聊天守护进程（ircd） - 7100/tcp xfs X 字体服务器（XFS） - 7666/tcp tircproxy Tircproxy IRC 代理服务 - 8008 http-alt 超文本传输协议（HTTP）的另一选择 - 8080 webcache 万维网（WWW）缓存服务 - 8081 tproxy 透明代理 - 9100/tcp jetdirect [laserjet, hplj] Hewlett-Packard (HP) JetDirect 网络打印服务 - 9359 mandelspawn [mandelbrot] 用于 X 窗口系统的并行 Mandelbrot 生成程序 - 10081 kamanda 使用 Kerberos 的 Amanda 备份服务 - 10082/tcp amandaidx Amanda 备份服务 - 10083/tcp amidxtape Amanda 备份服务 - 20011 isdnlog 综合业务数字网（ISDN）登录系统 - 20012 vboxd ISDN 音箱守护进程（vboxd） - 22305/tcp wnn4_Kr kWnn 韩文输入系统 - 22289/tcp wnn4_Cn cWnn 中文输入系统 - 22321/tcp wnn4_Tw tWnn 中文输入系统（台湾） - 24554 binkp Binkley TCP/IP Fidonet 邮寄程序守护进程 - 27374 asp 地址搜索协议 - 60177 tfido Ifmail FidoNet 兼容邮寄服务 - 60179 fido FidoNet 电子邮件和新闻网络","date":1278572979000,"updated":1586328684143,"size":10098},{"title":"禁止外网ssh登录LINUX服务器","slug":"linux-server-deny-global-network","content":" 公司搭建vpn后，要控制外网ssh登录服务器。 用/etc/hosts.allow，/etc/hosts.deny控制 当/etc/hosts.allow与/etc/hosts.deny中有相同项时，以.deny为准。 允许内网登录 vim /etc/hosts.allow sshd:10.0.5.0/255.255.255.0  ###sshd服务，允许10.0.5.0网段登录 hosts.allow格式：（服务：ip段） 禁止其它ip段登录 vim /etc/hosts.deny sshd:all 以上配置即可达到允许10.0.5.0内网段登录，禁止外网ssh登录 **openvpn，两台电脑用相同的证书登录，会出现断断续续的情况。**","date":1531461420000,"updated":1586328684145,"size":501},{"title":"Linux统计文件、目录数量","slug":"linux-statistics-files-directory-number","content":" 统计当前目录下的文件以及目录数量（不包括子目录） ls -l | wc -l 统计当前目录下的文件数量（遍历所有子目录） find . -type f | wc -l 统计当前目录下的目录数量（遍历所有子目录） find . -type d |  wc -l 当然，也可以指定某个目录来使用 find /xxx/yyy ...... ls -l /xxx/yyy...... ","date":1309402777000,"updated":1586328684146,"size":640},{"title":"根据端口查找进程pid","slug":"linux-shell-find-pid-from-port","content":" netstat -lnp|grep 端口号|grep -v grep|sed -n '1p'|awk '{print $7}'|awk -F/ '{print $1}' ","date":1278557378000,"updated":1586328684145,"size":488},{"title":"视频直播技术 - 前期处理","slug":"live-stream-technology-pre-effects","content":" 视频直播技术 - 前期处理 大纲 - 采集 - 处理 - 编码和封装 - 推流和传输 - 延迟优化 - 现代播放器原理 视频或者音频完成采集之后得到原始数据，为了增强一些现场效果或者加上一些额外的效果，我们一般会在将其编码压缩前进行处理，比如打上时间戳或者公司 Logo 的水印，祛斑美颜和声音混淆等处理。在主播和观众连麦场景中，主播需要和某个或者多个观众进行对话，并将对话结果实时分享给其他所有观众，连麦的处理也有部分工作在推流端完成。 常见视频处理功能 美颜 都说「80% 的主播没有美颜根本没法看」，美颜是直播产品中最常见的功能之一。最近准备在香港上市的美图公司的主打产品就是美颜相机和美拍，有媒体戏称其会冲击化妆品行业，其实就是美颜的效果的功劳，让美女主播们不化妆也可以自信的直播，而美颜相机的用户则可以拍出「更好的自己」。 美颜的主要原理是通过「磨皮+美白」来达到整体美颜的效果。磨皮的技术术语是「去噪」，也即对图像中的噪点进行去除或者模糊化处理，常见的去噪算法有均值模糊、高斯模糊和中值滤波等。当然， 由于脸部的每个部位不尽相同，脸上的雀斑可能呈现出眼睛黑点的样子，对整张图像进行「去噪」处理的时候不需要将眼睛也去掉，因此这个环节中也涉及到人脸和皮肤检测技术。 视频水印 水印是图片和视频内容中常见的功能之一，它可用于简单是版权保护，或者进行广告设置。处于监管的需求，国家相关部门也规定视频直播过程中必须打上水印，同时直播的视频必须录制存储下来保存一定的时间，并在录制的视频上打上水印。 视频水印包括播放器水印和视频内嵌水印两种方式可供选择，对于播放器水印来说，如果没有有效的防盗措施，对于没有播放鉴权的推流，客户端拿到直播流之后可以在任何一个不带水印的播放器里面播放，因此也就失去了视频保护的能力。综合考虑云端录制对于水印的需求，我们一般会选择「视频内嵌水印」的方式打水印。 　 滤镜 为了实现丰富的滤镜效果，在 iOS 端可以考虑使用 GPUImage 这个库，这是一个开源的基于GPU的图片或视频的处理框架，内置了多达120多种常见的滤镜效果。有了它，添加实时的滤镜只需要简单地添加几行代码，还可以基于这个库自己写算法实现更丰富端效果。 GPUImage 地址：[BradLarson/GPUImage](https://github.com/BradLarson/GPUImage) 除了 iOS 端之外，Android 也有 GPUImage 这个库的移植：[CyberAgent/android-gpuimage](https://github.com/CyberAgent/android-gpuimage) 同时，Google 官方也开源了一个伟大的库，覆盖了 Android 上面很多多媒体和图形图像相关的处理：[google/grafika](https://github.com/google/grafika) 连麦 连麦是互动直播中常见的需求，其流程如上图所示。主播和部分观众之间可以进行实时互动，然后将互动结果实时播放给其他观众观看。 基于以上业务需求，我们很容易想到基于单向直播原理，在主播端和连麦观众端进行双向推流和双向播流的方式互动，然后在服务端将两路推流合成一路推送给其他观众。但 RTMP 带来的延迟决定了这种方式无法做到用户可接受的互动直播。 **实际上，互动直播的主要技术难点在于：** 1. 低延迟互动：保证主播和互动观众之间能够实时互动，两者之间就像电话沟通，因此必须保证两者能在秒级以内听到对方的声音，看到对方的视频； 2. 音画同步：互动直播中对音画同步的需求和单向直播中类似，只不过互动直播中的延迟要求更高，必须保证在音视频秒级传输情况下的秒级同步。 3. 音视频实时合成：其他观众需要实时观看到对话结果，因此需要在客户端或者服务端将画面和声音实时合成，然后以低成本高品质的方式传输观众端。 在视频和电话会议领域，目前比较成熟的方案是使用思科或者 WebEx 的方案，但这些商用的方案一不开源，二比较封闭，三成本比较高。对于互动人数比较少的互动直播，目前市场上比较成熟的方案是使用基于 WebRTC 的实时通讯方案。 ![](http://static.0.codante.org/3/f/3f77db04e77f12b470d9266f260b76dcdf535922.png)   上图是一个基于 WebRTC 协议实现多方实时通讯的示意图，本地用户（主播）和远程用户（连麦观众）之间的连接通过 RTCPeerConnection API 管理，这个 API 包装了底层流管理和信令控制相关的细节。基于该方案可以轻松实现多人（14 人以下）的多方实时通信，如下图所示： ![](http://static.0.codante.org/1/9/19a087af503c5492fc6665de30dbf6117ca7e480.png) 当然，在通信人数少的情况下，其复杂度相对简单，如 2 人情况下。但人数增多至 4 人之后，其可选的网络结构就增多了，如上图所示，可以每个点之间形成自组织网络的方式通信，也可以以 1 人为中心形成星型通信网络，还可以让大家都通过一个集中式的服务端进行通信。 ![](http://static.0.codante.org/f/3/f3c9160e7bb6f8ba2f96afca2de8417447285a41.png) 作为一个高性能、可伸缩的直播基础服务提供商，七牛直播云经过评估选择了以主播为中心形成星形通信网络，支持主播和多个观众之间的互动质量。同时，为了保证合成后的音视频实时传输到其他观众端，这里采用经过改造的 UDP 协议传输： 1. 通过 UDP 降低传输延迟。 2. 在 UDP 之上进行传输控制，保证用户互动体验 QoS。 http://www.cnblogs.com/qiniu/p/6038884.html ","date":1526047519000,"updated":1586328684148,"size":2624},{"title":"视频直播技术 - 采集","slug":"live-stream-technology-acquisition","content":" 视频直播技术 - 采集 关于直播的技术文章不少，成体系的不多。我们将用七篇文章，更系统化地介绍当下大热的视频直播各环节的关键技术，帮助视频直播创业者们更全面、深入地了解视频直播技术，更好地技术选型。 大纲 - 采集 - 处理 - 编码和封装 - 推流和传输 - 延迟优化 - 现代播放器原理 ![](http://static.0.codante.org/c/8/c88db8e4fc2b8340db0cc325348cb072db5bbfea.jpg) 采集是整个视频推流过程中的第一个环节，它从系统的采集设备中获取原始视频数据，将其输出到下一个环节。视频的采集涉及两方面数据的采集：音频采集和图像采集，它们分别对应两种完全不同的输入源和数据格式。 采集内容 音频采集 音频数据既能与图像结合组合成视频数据，也能以纯音频的方式采集播放，后者在很多成熟的应用场景如在线电台和语音电台等起着非常重要的作用。音频的采集过程主要通过设备将环境中的模拟信号采集成 PCM 编码的原始数据，然后编码压缩成 MP3 等格式的数据分发出去。常见的音频压缩格式有：MP3，AAC，HE-AAC，Opus，FLAC，Vorbis (Ogg)，Speex 和 AMR等。 音频采集和编码主要面临的挑战在于：延时敏感、卡顿敏感、噪声消除（Denoise）、回声消除（AEC）、静音检测（VAD）和各种混音算法等。 **在音频采集阶段，参考的主要技术参数包括：** 采样率（samplerate） 采样就是把模拟信号数字化的过程，采样频率越高，记录这一段音频信号所用的数据量就越大，同时音频质量也就越高。 位宽 每一个采样点都需要用一个数值来表示大小，这个数值的数据类型大小可以是：4bit、8bit、16bit、32bit 等等，位数越多，表示得就越精细，声音质量自然就越好，而数据量也会成倍增大。我们在音频采样过程中常用的位宽是 8bit 或者 16bit。 声道数（channels） 由于音频的采集和播放是可以叠加的，因此，可以同时从多个音频源采集声音，并分别输出到不同的扬声器，故声道数一般表示声音录制时的音源数量或回放时相应的扬声器数量。声道数为 1 和 2 分别称为单声道和双声道，是比较常见的声道参数。 音频帧（frame） 音频跟视频很不一样，视频每一帧就是一张图像，而从上面的正玄波可以看出，音频数据是流式的，本身没有明确的一帧帧的概念，在实际的应用中，为了音频算法处理/传输的方便，一般约定俗成取 2.5ms~60ms 为单位的数据量为一帧音频。这个时间被称之为“采样时间”，其长度没有特别的标准，它是根据编解码器和具体应用的需求来决定的。 **根据以上定义，我们可以计算一下一帧音频帧的大小。假设某音频信号是采样率为 8kHz、双通道、位宽为 16bit，20ms 一帧，则一帧音频数据的大小为：** `size = 8000 x 2 x 16bit x 0.02s = 5120 bit = 640 byte` 图像采集 图像采集的图片结果组合成一组连续播放的动画，即构成视频中可肉眼观看的内容。图像的采集过程主要由摄像头等设备拍摄成 YUV 编码的原始数据，然后经过编码压缩成 H.264 等格式的数据分发出去。常见的视频封装格式有：MP4、3GP、AVI、MKV、WMV、MPG、VOB、FLV、SWF、MOV、RMVB 和 WebM 等。 图像由于其直观感受最强并且体积也比较大，构成了一个视频内容的主要部分。图像采集和编码面临的主要挑战在于：设备兼容性差、延时敏感、卡顿敏感以及各种对图像的处理操作如美颜和水印等。 **在图像采集阶段，参考的主要技术参数有：** 图像传输格式 通用影像传输格式（Common Intermediate Format）是视讯会议（video conference）中常使用的影像传输格式。 图像格式 通常采用 YUV 格式存储原始数据信息，其中包含用 8 位表示的黑白图像灰度值，以及可由 RGB 三种色彩组合成的彩色图像。 传输通道 正常情况下视频的拍摄只需 1 路通道，随着 VR 和 AR 技术的日渐成熟，为了拍摄一个完整的 360° 视频，可能需要通过不同角度拍摄，然后经过多通道传输后合成。 分辨率 随着设备屏幕尺寸的日益增多，视频采集过程中原始视频分辨率起着越来越重要的作用，后续处理环节中使用的所有视频分辨率的定义都以原始视频分辨率为基础。视频采集卡能支持的最大点阵反映了其分辨率的性能。 采样频率 采样频率反映了采集卡处理图像的速度和能力。在进行高度图像采集时，需要注意采集卡的采样频率是否满足要求。采样率越高，图像质量越高，同时保存这些图像信息的数据量也越大。 以上，构成了一个视频采集的主要技术参数，以及视频中音频和图像编码的常用格式。而对于直播 App 开发者来说，了解这些细节虽然更有帮助，但实际开发过程中可能很少能够关注采集环节中技术参数的控制，而是直接在 SDK 中将采集后的数据传递给下一个 处理 和 编码 环节。 采集源 摄像头采集 对于视频内容的采集，目前摄像头采集是社交直播中最常见的采集方式，比如主播使用手机的前置和后置摄像头拍摄。在现场直播场景中，也有专业的摄影、摄像设备用来采集。安防监控场景中也有专业的摄像头进行监控采集。pili-engineering/ipcam_sdk 屏幕录制 屏幕录制采集的方式在游戏直播场景中非常常见，目前我们在 Android SDK 中实现了屏幕录制的功能。而 iOS 则由于系统本身没有开放屏幕录制的权限而没法直接操作，但对于 iOS 9 以上的版本，是有个取巧的办法，可以通过模拟一个 AirPlay 镜像连接到（当前 App）自身，这样就可以在软件上捕获到屏幕上的任何操作，达到录制屏幕的效果。 在教育直播或者会场演讲场合，我们经常看见需要录制电脑桌面上 PPT 的场景，针对这种场景，目前市面上比较方便的方案是使用开源的桌面推流工具 OBS 来进行屏幕录制和推流：Open Broadcaster Software 从视频文件推流 除了从硬件设备采集视频进行推流之外，我们也可能需要将一个视频或者音频文件以直播流的形式实时传输给观众，比如在线电台或者电视节目，它们的输入可能直接来自于一些已经录制剪辑好的视频内容。 http://www.cnblogs.com/qiniu/p/6030747.html","date":1526027014000,"updated":1586328684147,"size":2889},{"title":"视频直播技术 - 编码和封装","slug":"live-stream-technology-encrypt-package","content":" 视频编码的意义 原始视频数据存储空间大，一个1080P的7s视频需要817MB 原始视频数据传输占用带宽大，10Mbps的带宽传输上述7s视频需要11分钟 而经过H.264编码压缩之后，视频大小只有708k,10Mbps的带宽仅仅需要500ms，可以满足实时传输的需求，所以从视频采集传感器采集来的原始视频势必要经过视频编码。 基本原理 那为什么巨大的原始视频可以编码成很小的视频呢？这其中的技术是什么呢？ 核心思想就是去除冗余信息： - 空间冗余：图像相邻像素之间有较强的相关性 - 时间冗余：视频序列的相邻图像之间内容相似 - 编码冗余：不同像素值出现的概率不同 - 视觉冗余：人的视觉系统对某些细节不敏感 - 知识冗余：规律性的结构可由先验知识和背景知识得到 视频本质上讲是一系列图片连续快速的播放，最简单的压缩方式就是对每一帧图片进行压缩，例如比较古老的 MJPEG 编码就是这种编码方式，这种编码方式只有帧内编码，利用空间上的取样预测来编码。形象的比喻就是把每帧都作为一张图片，采用 JPEG 的编码格式对图片进行压缩，这种编码只考虑了一张图片内的冗余信息压缩，如图1，绿色的部分就是当前待编码的区域，灰色就是尚未编码的区域，绿色区域可以根据已经编码的部分进行预测（绿色的左边，下边，左下等）。 ![](http://static.0.codante.org/2/8/28e89b88584d576dc1bd761808c3057a5f827225.png) 图1 但是帧和帧之间因为时间的相关性，后续开发出了一些比较高级的编码器可以采用帧间编码，简单点说就是通过搜索算法选定了帧上的某些区域，然后通过计算当前帧和前后参考帧的向量差进行编码的一种形式，通过下面两个图2 连续帧我们可以看到，滑雪的同学是向前位移的，但实际上是雪景在向后位移，P帧通过参考帧（I或其他P帧）就可以进行编码了，编码之后的大小非常小，压缩比非常高。 ![](http://static.0.codante.org/4/7/4751f769f228ca3cfc9283a5af141754673b5d9d.png) 图2 可能有同学对这两张图片怎么来的感兴趣，这里用了FFmpeg的两行命令来实现，具体FFmpeg的更多内容请看后续章节： - 第一行生成带有移动矢量的视频 - 第二行把每一帧都输出成图片 ffmpeg -flags2 +export_mvs -i tutu.mp4 -vf codecview=mv=pf+bf+bb tutudebug2.mp4 ffmpeg -i tutudebug2.mp4 'tutunormal-%03d.bmp' 除了空间冗余和时间冗余的压缩，主要还有编码压缩和视觉压缩，下面是一个编码器主要的流程图： ![](http://static.0.codante.org/a/3/a349c94d98ff085e3b37ce8daa2f3f91a67de5e3.png) 图3 ![](http://static.0.codante.org/2/7/27c32a0ff4d6a516114c90de98097988e5a444f5.png) 图4 图3、图4两个流程，图3是帧内编码，图4是帧间编码，从图上看到的主要区别就是第一步不相同，其实这两个流程也是结合在一起的，我们通常说的I帧和P帧就是分别采用了帧内编码和帧间编码。 编码器的选择 前面梳理了一下编码器的原理和基本流程，编码器经历了数十年的发展，已经从开始的只支持帧内编码演进到现如今的H.265和VP9为代表的新一代编码器，就目前一些常见的编码器进行分析，带大家探索一下编码器的世界。 1) H.264 简介 H.264/AVC 项目意图创建一种视频标准。与旧标准相比，它能够在更低带宽下提供优质视频（换言之，只有MPEG-2，H.263 或 MPEG-4 第2部分的一半带宽或更少），也不增加太多设计复杂度使得无法实现或实现成本过高。另一目的是提供足够的灵活性以在各种应用、网络及系统中使用，包括高、低带宽，高、低视频分辨率，广播，DVD存储，RTP/IP网络，以及 ITU-T 多媒体电话系统。 H.264/AVC 包含了一系列新的特征，使得它比起以前的编解码器不但能够更有效的进行编码，还能在各种网络环境下的应用中使用。这样的技术基础让H.264成为包括YouTube在内的在线视频公司采用它作为主要的编解码器，但是使用它并不是一件很轻松的事情，理论上讲使用H.264需要交纳不菲的专利费用。 专利许可 和 MPEG-2 第一部分、第二部分，MPEG-4 第二部分一样，使用 H.264/AVC 的产品制造商和服务提供商需要向他们的产品所使用的专利的持有者支付专利许可费用。这些专利许可的主要来源是一家称为 MPEG-LALLC 的私有组织，该组织和MPEG标准化组织没有任何关系，但是该组织也管理著 MPEG-2 第一部分系统、第二部分视频、MPEG-4 第二部分视频和其它一些技术的专利许可。 其他的专利许可则需要向另一家称为VIA Licensing的私有组织申请，这家公司另外也管理偏向音频压缩的标准如 MPEG-2 AAC 及 MPEG-4 Audio 的专利许可。 H.264 的开源实现 - openh264 - x264 openh264 是思科实现的开源 H.264 编码，虽然 H.264 需要交纳不菲的专利费用，但是专利费有一个年度上限，思科把 OpenH264 实现的年度专利费交满后，OpenH264 事实上就可以免费自由的使用了。 x264 x264是一个采用GPL授权的视频编码自由软件。x264 的主要功能在于进行 H.264/MPEG-4 AVC 的视频编码，而不是作为解码器（decoder）之用。 除去费用问题比较来看： - openh264 CPU 的占用相对 x264低很多 - openh264 只支持 baseline profile，x264 支持更多 profile 2) HEVC/H.265 简介 高效率视频编码（High Efficiency Video Coding，简称HEVC）是一种视频压缩标准，被视为是 ITU-T H.264/MPEG-4 AVC 标准的继任者。2004 年开始由 ISO/IEC Moving Picture Experts Group（MPEG）和 ITU-T Video Coding Experts Group（VCEG）作为 ISO/IEC 23008-2 MPEG-H Part 2 或称作 ITU-T H.265 开始制定。第一版的 HEVC/H.265 视频压缩标准在 2013 年 4 月 13 日被接受为国际电信联盟（ITU-T）的正式标准。HEVC 被认为不仅提升视频质量，同时也能达到 H.264/MPEG-4 AVC 两倍之压缩率（等同于同样画面质量下比特率减少了 50%），可支持 4K 分辨率甚至到超高清电视（UHDTV），最高分辨率可达到 8192×4320（8K分辨率）。 H.265 的开源实现 - libde265 - x265 libde265 HEVC 由 struktur 公司以开源许可证 GNU LesserGeneral Public License (LGPL) 提供，观众可以较慢的网速下欣赏到最高品质的影像。跟以前基于H.264标准的解码器相比，libde265 HEVC 解码器可以将您的全高清内容带给多达两倍的受众，或者，减少 50% 流媒体播放所需要的带宽。高清或者 4K/8K 超高清流媒体播放，低延迟/低带宽视频会议，以及完整的移动设备覆盖。具有「拥塞感知」视频编码的稳定性，十分适合应用在 3/4G 和 LTE 网络。 专利许可 HEVC Advance 要求所有包括苹果、YouTube、Netflix、Facebook、亚马逊等使用 H.265 技术的内容制造商上缴内容收入的 0.5%作为技术使用费，而整个流媒体市场每年达到约 1000 亿美元的规模，且不断增长中，征收 0.5%绝对是一笔庞大的费用。而且他们还没有放过设备制造商，其中电视厂商需要支付每台 1.5 美元、移动设备厂商每台 0.8 美元的专利费。他们甚至没有放过蓝光设备播放器、游戏机、录像机这样的厂商，这些厂商必须支付每台 1.1 美元的费用。最无法令人接受的是，HEVC Advance 的专利使用权追溯到了厂商的「」”，意思是之前已经发售的产品依然要追缴费用。 x265 是由 MulticoreWare 开发，并开源。采用 GPL 协议，但是资助这个项目的几个公司组成了联盟可以在非 GPL 协议下使用这个软件。 3) VP8 简介 VP8 是一个开放的视频压缩格式，最早由 On2 Technologies 开发，随后由 Google 发布。同时 Google 也发布了 VP8 编码的实做库：libvpx，以 BSD 授权条款的方式发行，随后也附加了专利使用权。而在经过一些争论之后，最终 VP8 的授权确认为一个开放源代码授权。 目前支持 VP8 的网页浏览器有 Opera、Firefox 和 Chrome。 专利许可 2013 年三月，Google 与 MPEG LA 及 11 个专利持有者达成协议，让Google 获取 VP8 以及其之前的 VPx 等编码所可能侵犯的专利授权，同时 Google 也可以无偿再次授权相关专利给 VP8 的用户，此协议同时适用于下一代 VPx 编码。至此 MPEG LA 放弃成立 VP8 专利集中授权联盟，VP8 的用户将可确定无偿使用此编码而无须担心可能的专利侵权授权金的问题。 VP8 的开源实现 - libvpx libvpx是VP8的唯一开源实现，由On2 Technologies开发，Google收购后将其开放源码，License 非常宽松可以自由使用。 4) VP9 简介 VP9的开发从2011年第三季开始，目标是在同画质下，比VP8编码减少50%的文件大小，另一个目标则是要在编码效率上超越HEVC编码。 2012年12月13日，Chromium浏览器加入了VP9编码的支持。Chrome浏览器则是在2013年2月21日开始支持VP9编码的视频播放。 Google宣布会在2013年6月17日完成VP9编码的制定工作，届时Chrome 浏览器将会把 VP9 编码默认引导。2014 年 3 月 18 日，Mozilla 在 Firefox 浏览器中加入了 VP9 的支持。 2015 年 4 月 3 日，谷歌发布了 libvpx1.4.0 增加了对 10 位和 12 位的比特深度支持、4:2:2 和 4:4:4 色度抽样，并 VP9 多核心编/解码。 专利许可 VP9 是一个开放格式、无权利金的视频编码格式。 VP9 的开源实现 - libvpx libvpx 是 VP9 的唯一开源实现，由 Google 开发维护，里面有部分代码是 VP8 和 VP9 公用的，其余分别是 VP8 和 VP9 的编解码实现。 VP9 和 H.264 和 HEVC 比较 CodecHEVCx264vp9HEVC-42.2%32.6%x26475.8%18.5%vp948.3%-14.6%CodecHEVC vs. VP9(in %)VP9 vs. x264 (in %)Total Average61239399 引用 Comparative Assessment of H.265/MPEG-HEVC, VP9, and H.264/MPEG-AVC Encoders for Low-Delay Video Applications 这篇比较新的论文对，低延迟视频进行编码的测试结果。 HEVC 和 H.264 在不同分辨率下的比较 跟 H.264/MPEG-4 相比，HEVC 的平均比特率减低值为： 分辨率 480P 720P 1080P 4K UHD HEVC 52% 56% 62% 64% 可见码率下降了 60% 以上。 - HEVC (H.265) 对 VP9 和 H.264 在码率节省上有较大的优势，在相同 PSNR 下分别节省了 48.3% 和 75.8%。 - H.264 在编码时间上有巨大优势，对比 VP9 和 HEVC(H.265) ，HEVC 是 VP9 的6倍，VP9 是 H.264 的将近 40 倍 5) FFmpeg **谈到视频编码相关内容就不得不提一个伟大的软件包 -- FFmpeg。** FFmpeg 是一个自由软件，可以运行音频和视频多种格式的录影、转换、流功能，包含了 libavcodec ——这是一个用于多个项目中音频和视频的解码器库，以及 libavformat ——一个音频与视频格式转换库。 FFmpeg 这个单词中的 FF 指的是 Fast Forward。有些新手写信给 FFmpeg 的项目负责人，询问 FF 是不是代表 Fast Free 或者 Fast Fourier 等意思，FFmpeg 的项目负责人回信说：「Just for the record, the original meaning of FF in FFmpeg is Fast Forward...」 这个项目最初是由 Fabrice Bellard 发起的，而现在是由 Michael Niedermayer 在进行维护。许多FFmpeg的开发者同时也是 MPlayer 项目的成员，FFmpeg 在 MPlayer 项目中是被设计为服务器版本进行开发。 FFmpeg 下载地址是: [FFmpeg Download](https://ffmpeg.org/download.html) - 可以浏览器输入下载，目前支持 Linux ,Mac OS,Windows 三个主流的平台，也可以自己编译到 Android 或者 iOS 平台。 - 如果是 Mac OS ，可以通过 brew 安装 brew install ffmpeg --with-libvpx --with-libvorbis --with-ffplay 我们可以用 FFmpeg 来做哪些有用有好玩的事情呢？通过一系列小实验来带大家领略 FFmpeg 的神奇和强大。 FFmpeg 录屏 通过一个小例子看一下怎么在 Mac OS 下面使用 FFmpeg 进行录屏: 输入： ffmpeg -f avfoundation -list_devices true -i \"\" 输出： [AVFoundation input device @ 0x7fbec0c10940] AVFoundation video devices: [AVFoundation input device @ 0x7fbec0c10940] [0] FaceTime HD Camera [AVFoundation input device @ 0x7fbec0c10940] [1] Capture screen 0 [AVFoundation input device @ 0x7fbec0c10940] [2] Capture screen 1 [AVFoundation input device @ 0x7fbec0c10940] AVFoundation audio devices: [AVFoundation input device @ 0x7fbec0c10940] [0] Built-in Microphone 给出了当前设备支持的所有输入设备的列表和编号，我本地有两块显示器，所以 1 和 2 都是我屏幕，可以选择一块进行录屏。 查看当前的 H.264 编解码器： 输入： ffmpeg -codecs | grep 264 输出： DEV.LS h264                 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_vda ) (encoders: libx264 libx264rgb ) 查看当前的 VP8 编解码器： 输入： ffmpeg -codecs | grep vp8 输出： DEV.L. vp8                  On2 VP8 (decoders: vp8 libvpx ) (encoders: libvpx ) 可以选择用 vp8 或者 h264 做编码器 ffmpeg -r 30 -f avfoundation -i 1 -vcodec vp8 -quality realtime screen2.webm -quality realtime 用来优化编码器，如果不加在我的 Air 上帧率只能达到 2 或者 ffmpeg -r 30 -f avfoundation -i 1 -vcodec h264 screen.mp4 然后用 ffplay 播放就可以了 ffplay screen.mp4 或者 ffplay screen2.webp FFmpeg 视频转换成 gif 有一个特别有用的需求，在网上发现了一个特别有趣的视频想把它转换成一个动态表情，作为一个 IT 从业者，我第一个想到的不是下载一个转码器，也不是去找一个在线转换网站，直接利用手边的工具 FFmpeg，瞬间就完成了转码： ffmpeg -ss 10 -t 10  -i tutu.mp4  -s 80x60  tutu.gif -ss 指从 10s 开始转码,-t 指转换 10s 的视频 -s FFmpeg 录制屏幕并直播 可以继续扩展例子1，直播当前屏幕的内容，向大家介绍一下怎么通过几行命令搭建一个测试用的直播服务： Step 1：首先安装 docker： 访问 [Docker Download](https://www.docker.com/products/docker) ，按操作系统下载安装。 Step 2：下载 nginx-rtmp 镜像： docker pull chakkritte/docker-nginx-rtmp Step 3：创建 nginx html 路径，启动 docker-nginx-rtmp mkdir ~/rtmp docker run -d -p 80:80 -p 1935:1935 -v ~/rtmp:/usr/local/nginx/html chakkritte/docker-nginx-rtmp Step 4：推送屏幕录制到 nignx-rtmp ffmpeg -y -loglevel warning -f avfoundation -i 2 -r 30 -s 480x320 -threads 2 -vcodec libx264  -f flv rtmp://127.0.0.1/live/test Step 5：用 ffplay 播放 ffplay rtmp://127.0.0.1/live/test 总结一下，FFmpeg 是个优秀的工具，可以通过它完成很多日常的工作和实验，但是距离提供真正可用的流媒体服务、直播服务还有非常多的工作要做，这方面可以参考七牛云发布的 七牛直播云服务。 封装 介绍完了视频编码后，再来介绍一些封装。沿用前面的比喻，封装可以理解为采用哪种货车去运输，也就是媒体的容器。 所谓容器，就是把编码器生成的多媒体内容（视频，音频，字幕，章节信息等）混合封装在一起的标准。容器使得不同多媒体内容同步播放变得很简单，而容器的另一个作用就是为多媒体内容提供索引，也就是说如果没有容器存在的话一部影片你只能从一开始看到最后，不能拖动进度条（当然这种情况下有的播放器会话比较长的时间临时创建索引），而且如果你不自己去手动另外载入音频就没有声音，下面介绍几种常见的封装格式和优缺点： - AVI 格式（后缀为 .AVI）: 它的英文全称为 Audio Video Interleaved ，即音频视频交错格式。它于 1992 年被 Microsoft 公司推出。 这种视频格式的优点是图像质量好。由于无损AVI可以保存 alpha 通道，经常被我们使用。缺点太多，体积过于庞大，而且更加糟糕的是压缩标准不统一，最普遍的现象就是高版本 Windows 媒体播放器播放不了采用早期编码编辑的AVI格式视频，而低版本 Windows 媒体播放器又播放不了采用最新编码编辑的AVI格式视频，所以我们在进行一些AVI格式的视频播放时常会出现由于视频编码问题而造成的视频不能播放或即使能够播放，但存在不能调节播放进度和播放时只有声音没有图像等一些莫名其妙的问题。 - DV-AVI 格式（后缀为 .AVI）: DV的英文全称是 Digital Video Format ，是由索尼、松下、JVC 等多家厂商联合提出的一种家用数字视频格式。 数字摄像机就是使用这种格式记录视频数据的。它可以通过电脑的 IEEE 1394 端口传输视频数据到电脑，也可以将电脑中编辑好的的视频数据回录到数码摄像机中。这种视频格式的文件扩展名也是 avi。电视台采用录像带记录模拟信号，通过 EDIUS 由IEEE 1394端口采集卡从录像带中采集出来的视频就是这种格式。 - QuickTime File Format 格式（后缀为 .MOV）: 美国Apple公司开发的一种视频格式，默认的播放器是苹果的QuickTime。 具有较高的压缩比率和较完美的视频清晰度等特点，并可以保存alpha通道。 - MPEG 格式（文件后缀可以是 .MPG .MPEG .MPE .DAT .VOB .ASF .3GP .MP4等) : 它的英文全称为 Moving Picture Experts Group，即运动图像专家组格式，该专家组建于1988年，专门负责为 CD 建立视频和音频标准，而成员都是为视频、音频及系统领域的技术专家。 MPEG 文件格式是运动图像压缩算法的国际标准。MPEG 格式目前有三个压缩标准，分别是 MPEG－1、MPEG－2、和MPEG－4 。MPEG－1、MPEG－2 目前已经使用较少，着重介绍 MPEG－4，其制定于1998年，MPEG－4 是为了播放流式媒体的高质量视频而专门设计的，以求使用最少的数据获得最佳的图像质量。目前 MPEG-4 最有吸引力的地方在于它能够保存接近于DVD画质的小体积视频文件。 - WMV 格式（后缀为.WMV .ASF）: 它的英文全称为Windows Media Video，也是微软推出的一种采用独立编码方式并且可以直接在网上实时观看视频节目的文件压缩格式。 WMV格式的主要优点包括：本地或网络回放,丰富的流间关系以及扩展性等。WMV 格式需要在网站上播放，需要安装 Windows Media Player（ 简称 WMP ），很不方便，现在已经几乎没有网站采用了。 - Real Video 格式（后缀为 .RM .RMVB）: Real Networks 公司所制定的音频视频压缩规范称为Real Media。 用户可以使用 RealPlayer 根据不同的网络传输速率制定出不同的压缩比率，从而实现在低速率的网络上进行影像数据实时传送和播放。RMVB 格式：这是一种由RM视频格式升级延伸出的新视频格式，当然性能上有很大的提升。RMVB 视频也是有着较明显的优势，一部大小为700MB左右的 DVD 影片，如果将其转录成同样品质的 RMVB 格式，其个头最多也就 400MB 左右。大家可能注意到了，以前在网络上下载电影和视频的时候，经常接触到 RMVB 格式，但是随着时代的发展这种格式被越来越多的更优秀的格式替代，著名的人人影视字幕组在2013年已经宣布不再压制 RMVB 格式视频。 - Flash Video 格式（后缀为 .FLV）:由 Adobe Flash 延伸出来的的一种流行网络视频封装格式。随着视频网站的丰富，这个格式已经非常普及。 - Matroska 格式（后缀为 .MKV）:是一种新的多媒体封装格式，这个封装格式可把多种不同编码的视频及16条或以上不同格式的音频和语言不同的字幕封装到一个 Matroska Media 档内。它也是其中一种开放源代码的多媒体封装格式。Matroska 同时还可以提供非常好的交互功能，而且比 MPEG 的方便、强大。 - MPEG2-TS 格式 (后缀为 .ts)（Transport Stream“传输流”；又称MTS、TS）是一种传输和存储包含音效、视频与通信协议各种数据的标准格式，用于数字电视广播系统，如DVB、ATSC、IPTV等等。 MPEG2-TS 定义于 MPEG-2 第一部分，系统（即原来之ISO/IEC标准13818-1或ITU-T Rec. H.222.0）。 Media Player Classic、VLC 多媒体播放器等软件可以直接播放MPEG-TS文件。 目前，我们在流媒体传输，尤其是直播中主要采用的就是 **FLV** 和 **MPEG2-TS** 格式，分别用于 **RTMP/HTTP-FLV** 和 **HLS** 协议。 [https://www.cnblogs.com/qiniu/p/6046613.html]() ","date":1540902720000,"updated":1586328684148,"size":11046},{"title":"Memcache 数据刷新","slug":"memcache-flush-all","content":" telnet 127.0.0.1 11211 输入指令 也可以一行指令解决 echo \"flush_all\" | nc 127.0.0.1 11211 ","date":1586328684149,"updated":1586328684149,"size":156},{"title":"PHP中用Memcache存储Session数据","slug":"memcache-php-session-handle","content":" 优缺点 **优点：** 1. 使用内存存放session信息，不经过磁盘，数据库等，速度快 2. 可以多台机器共用一个/组memcached服务器，达到多台机器共享session信息，方便多机集群的session问题处理。 3. ... **不足：** 1. 首先memcached的服务必须正常工作，否则php的session相关功能将不起作用,这样php的处理就多了一层外面的依赖。 2. 由于memcached是使用内存的，这样当用户量比较大时，就可能由于内存方面原因导致session时长上的问题,session的实际失效时长达不到设定的失效时长(由于memcached在内存不够下的处理机制决定) 3. 由于memcached的内存管理机制，当session存储的数据超过1MB的时候有数据丢失问题（不过一般不会有人在session中存放这么多的信息吧)。 4. ... 实现 在PHP中有两种实现 memcache PHP的基础memcache客户端 **在配置文件中进行设置：** session.save_handler = memcache session.save_path = \"tcp://127.0.0.1:11211\" **或者在程序中如下测试：** ini_set(\"session.save_handler\",\"memcached\"); ini_set(\"session.save_path\",\"tcp://127.0.0.1:11211\"); 详见：[http://cn.php.net/manual/en/memcache.ini.php][0] memcached 基于libmemcached通用类库的memcache客户端 **在配置文件中进行设置：** session.save_handler = memcached session.save_path = \"127.0.0.1:11211\"  //注意这里不需要tcp **或者在程序中如下测试：** ini_set(\"session.save_handler\",\"memcached\"); ini_set(\"session.save_path\",\"127.0.0.1:11211\"); 详见：[http://cn.php.net/manual/en/memcached.sessions.php][1]感觉 验证效果 通过[memcachephp][2]来查询是否session数据被正确设置了： The session keys are stored under the prefix memc.sess.key memc.sess.key.8fvadbqo1lt2l6j98tbg7ao1d7 [0]: http://cn.php.net/manual/en/memcache.ini.php [1]: http://cn.php.net/manual/en/memcached.sessions.php [2]: http://livebookmark.net/memcachephp/memcachephp.zip","date":1586328684150,"updated":1586328684150,"size":1458},{"title":"memcached安装及配置","slug":"memcached-install-and-configuration","content":" 优点和缺点 memcached部分实现的是内存空间分配和回收,以及存储服务监听和提供.对于分布式的实现,取决于客户端的使用和构造.我们使用的客户端是完全支持分布式的.只是可能会出现某些问题. 诸如一旦出现网络问题, 网络问题导致某个分布式服务器中的一台失去联系之后,到这台机器恢复正常工作的这段时间内, 写入分布式服务器的数据将基本不可以获取. 可以通过采用分布式hash表的方式解决这个问题. 安装 libevent memcached其实就是个内存管理，所以首先要安装下libevent。 wget http://www.monkey.org/~provos/libevent-1.4.2-rc.tar.gz tar zxvf libevent-1.4.2-rc.tar.gz cd libevent-1.4.2-rc ./configure --prefix=/usr/local/ make make install [*1]64位系统 如果系统是64位，需要执行下面的命令，原因见后文。 ln -s /usr/local/lib/libevent-1.4.so.2 /usr/lib64/libevent-1.4.so.2 安装memcached tar zxf memcached-1.4.5.tar.gz cd memcached-1.4.5 ./configure --prefix=/usr/local/memcached --enable-64bit --with-libevent=/usr/lib64/ 如果此时没有进行**[*1]**操作，**make test**会报错，但不影响安装。 make make install cp memcached /usr/local/bin/ cp memcached-debug /usr/local/bin/ 启动 memcached -d -m 1024 -u root -t 64 -r -c 16382 -p 11211 **启动成功！** 问题 **[*1]**问题的处理 如果使用的64位系统并且没有执行**[*1]**操作，**启动时**会得到下面的错误。 error while loading shared libraries: libevent-1.4.so.2: cannot open shared object file: No such file or directory **使用 \"LD_DEBUG=libs /usr/local/memcached/bin/memcached -v\" 进行检查** 得到以下结果  log 3566: find library=libevent-1.4.so.2 [0]; searching 3566: search cache=/etc/ld.so.cache 3566: search path=/lib64/tls/x86_64:/lib64/tls:/lib64/x86_64:/lib64:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/x86_64:/usr/lib64 (system search path) 3566: trying file=/lib64/tls/x86_64/libevent-1.4.so.2 3566: trying file=/lib64/tls/libevent-1.4.so.2 3566: trying file=/lib64/x86_64/libevent-1.4.so.2 3566: trying file=/lib64/libevent-1.4.so.2 3566: trying file=/usr/lib64/tls/x86_64/libevent-1.4.so.2 3566: trying file=/usr/lib64/tls/libevent-1.4.so.2 3566: trying file=/usr/lib64/x86_64/libevent-1.4.so.2 3566: trying file=/usr/lib64/libevent-1.4.so.2 3566: /usr/local/memcached/bin/memcached: error while loading shared libraries: libevent-1.4.so.2: cannot open shared object file: No such file or directory 可以看出\"/usr/local/memcached/bin/memcached: error while loading shared libraries: libevent-1.4.so.2: cannot open shared object file: No such file or directory\" 64位系统只会去找lib64下的包，我的处理办法是在lib64下建立个软连接： ln -s /usr/local/lib/libevent-1.4.so.2 /usr/lib64/libevent-1.4.so.2 此时启动memcached memcached -d -m 1024 -u root -t 64 -r -c 16382 -p 11211 启动成功 安装php支持模块 我下载的是稳定版本 wget http://pecl.php.net/get/memcache-2.2.5.tgz tar zxf memcache-2.2.5.tgz cd memcached-2.2.5 执行 /usr/local/php5/bin/phpize 这命令没有加在bin里边-。-，直接运行了。 安装的时候需要指定一下--with-php-config，否则可能会提示找不到路径。 ./configure --enable-memcache --with-php-config=/usr/local/php5/bin/php-config --with-zlib-dir make make install 提示/usr/local/php5/lib/php/extensions/no-debug-non-zts-20060613/ 之前安装eaccelerator.so的时候遇到过，而且在php.ini里边也修改过模块的路径，所以**不用管它**。 vi /usr/local/Zend/etc/php.ini 在最后添加 [memcache] extension=memcache.so 重启apache 其他修改 加大同时打开文件数 ulimit -n 10240 附录 开启了64位参数，可以分配4G以上的内存，如： memcached -d -m 6144 -u root -t 64 -r -c 16382 -p 11211 可以更改端口： memcached -d -m 1024 -u root -t 64 -r -c 16382 -p 11211 memcached -d -m 1024 -u root -t 64 -r -c 16382 -p 11212 memcached -d -m 1024 -u root -t 64 -r -c 16382 -p 11213 启动参数 -d 启动deamon模式 -m 最大占用内存，单位为M -u 运行账户 -t 并发线程数，最好不超过cpu数 -r maximize core file limit -c 最大可接受并发连接数 -p 监听端口 -l 监听ip 进程管理 -d start 启动memcached服务 -d restart 重起memcached服务 -d stop|shutdown 关闭正在运行的memcached服务 -d install 安装memcached服务 -d uninstall 卸载memcached服务 ","date":1281090957000,"updated":1586328684151,"size":3956},{"title":"移动端前端调试工具","slug":"mobile-terminal-debugging","content":" weinre 安装 npm install -g weinre 启动 wernre --boundHost [IP] --httpPort [PORT] 进入相应网址，按提示配置及访问 ","date":1586328684151,"updated":1586328684151,"size":170},{"title":"怪物猎人，护石代码分析，护石的修改与自定义制作！","slug":"monster-hunter-guardian-stone-analysis-and-production","content":" 全面剖析 用道具箱第一栏进行测试，第一栏的地址为0x01349364。 一个护石用12个8位元进行控制，它们分别代表：[01][02][0304][0506]07,0809,1011,12[有无装备][装备类型][修正值,装备属性][修正值][属性1][属性2][强化玉][1][强化玉][2][强化玉][3] 01 有无装备 这个很好理解就不说了... 02 装备类型 MH 2里有很多种类的装备，每种装备都有相应的代码，以这里介绍的护石代为例，它的码为\"**65**\"。 03 & 04 装备属性及修正值 这个地方比较奇特 以下是分析过程 装备属性 03 的后四位 00~06 控制护石的等级1-7 修正值 03 04两部分，是通过03的前四位，04的整个八位，组成了两个六位的控制，也就是64进制的，带符号的取值就是 -30 ~ 33之间，他们的排列顺序为 04[1] 04[2] 03[1] 前六位控制属性2 后六位控制属性1 04 [1]      04[2]      03[1]      属性1     属性2 00 00(0)    0000(0)    0000(0)    -30(0)    -30(0) 00 00(0)    0001(1)    0000(0)    -14(16)   -30(0) 00 00(0)    0010(2)    0000(0)    2(32)     -30(0) 00 00(0)    0011(3)    0000(0)    18(48)    -30(0) 00 00(0)    0100(4)    0000(0)    -30(0)    -29(1)  可看做：  000001(-29) 000000(-30) 00 00(0)    1000(8)    0000(0)    -30(0)    -28(2) 00 00(0)    1100(C)    0000(0)    -30(0)    -27(3) 00 01(1)    0000(0)    0000(0)    -30(0)    -26(4) 11 11(F)    0000(0)    0000(0)    -30(0)    30(60) 11 11(F)    1100(0)    0000(0)    -30(0)    33(63)  可看做：  111111(33) 000000(-30) 最大极限值必然是 33 33 05 & 06 属性分析 效果1由是05控制(八位)重复一次，每2^7重复一次; 效果2和插槽数由06共同控制，每2^6重复一次并且插槽数+1，前4位控制插槽0100(0):无槽、0100(4):1槽、1000(8):2槽、1100(C):3槽，后四位控制效果。代码效果1效果2（插槽） 00 - -  无插槽 01 胴系统复制 毒 02 毒 睡眠 03 麻痹 耐泥耐雪 04 睡眠 体力 05 气绝 锋利度 06 耐泥耐雪 剑术 07 气配(警惕) 研磨师 08 体力 防御强化 09 回复速度 装填速度 0A 锋利度 通常弹强化 0B 匠 散弹强化 0C 剑术 贯通弹追加 0D 达人 榴弹追加 0E 研磨师 特殊攻击 0F 防御性能 爆弹强化 10 防御强化 大胃王 11 自动防御 防御 12 装填速度 听觉保护 13 反动 广域 14 通常弹强化 火耐性 15 贯通弹强化 雷耐性 16 散弹强化 龙耐性 17 通常弹追加 耐寒 18 贯通弹追加 采取 19 散弹追加 反复无常 1A 榴弹追加 千里眼 1B 扩散弹追加 调和成功率 1C 特殊攻击 回避性能 1D 属性攻击 效果持续 1E 爆弹强化 装填数 1F 饥饿感 食事 20 大胃王 耐震 21 攻击 拔刀会心 22 防御 体术 23 守护 观察眼 24 听觉守护 拔刀减气 25 偷盗无效 逆境 26 广域 肥料 27 搬运 毒瓶追加 28 火耐性 睡眠瓶追加 29 水耐性 追击瓶追加 2A 雷耐性 炮术 2B 冰耐性 猎人 2C 龙耐性 火属性攻击 2D 耐属 雷属性攻击 2E 耐寒 龙属性攻击 2F 风压 减气瓶追 30 采取 重击 31 高速收集 减气攻击 32 反复无常 气力回复 33 运气 毒无效 34 千里眼 麻醉无效 35 回复量 睡眠无效 36 调和成功率 气绝确率减半 37 调和数 气绝倍加 38 回避性能 隐蔽 39 底力 体力+20 3A 效果持续 体力-10 3B 耐力 回复速度+1 3C 装填数 回复速度-1 3D 精密射击 利刃 3E 食事 锋利度等级+1 3F 剥取 见切+1 40 耐震 1插槽 41 回避距离 毒 42 拔刀会心 睡眠 43 高速设置 耐泥耐雪 44 体术 体力 45 捕获 锋利度 46 观察眼 剑术 47 溜短缩 研磨师 48 拔刀减气 防御强化 49 属性耐性 装填速度 4A 逆境 通常弹强化 4B 速射 散弹强化 4C 肥料 贯通弹追加 4D 抗菌 榴弹增加 4E 毒瓶追加 特殊攻击 4F 麻痹瓶追加 爆弹强化 50 睡眠瓶追加 大胃王 51 强击瓶追加 防御 52 接击瓶追加 听觉保护 53 笛 广域 54 炮术 火耐性 55 本气(认真) 雷耐性 56 猎人 龙耐性 57 对防御down 耐寒 58 火属性攻击 采取 59 水属性攻击 反复无常 5A 雷属性攻击 千里眼 5B 冰属性攻击 调和成功率 5C 龙属性攻击 回避性能 5D 断裂弹追加 效果持续 5E 减气瓶追加 装填数 5F 痛击 食事 60 重击 耐震 61 KO 拔刀会心 62 减气攻击 体术 63 收刀 观察眼 64 气力回复 拔刀减气 65 - 逆境 66 毒无效 肥料 67 毒倍加 毒瓶追加 68 麻痹无效 睡眠瓶增加 69 麻痹倍加 接击瓶追加 6A 睡眠无效 炮术 6B 睡眠倍加 猎人 6C 气绝确率减半 火属性攻击 6D 气绝无效 雷属性攻击 6E 气绝倍加 龙属性攻击 6F 泥&雪无效 减气瓶追加 70 隐蔽 重击 71 挑拨 减气攻击 72 体力+20 气力回复 73 体力+50 毒无效 74 体力-10 麻痹无效 75 体力-30 睡眠无效 76 回复速度+1 气绝确率减半 77 回复速度+2 气绝倍加 78 回复速度-1 隐蔽 79 回复速度-2 体力+20 7A 利刃 体力-10 7B 钝刀 回复速度+1 7C 锋利度等级+1 回复速度-1 7D 心眼 利刃 7E 见切+1 锋利度等级+1 7F 见切+2 见切+1 80 - 胴系统复制 2插槽 81 胴系统复制 麻痹 82 毒 气绝 83 麻痹 气配(警惕) 84 睡眠 回复速度 85 气绝 匠 86 耐泥耐雪 达人 87 气配(警惕) 防御性能 88 体力 自动防御 89 回复速度 反动 8A 锋利度 贯通弹强化 8B 匠通 常弹追加 8C 剑术 散弹追加 8D 达人 扩散弹追加 8E 研磨师 属性攻击 8F 防御性能 饥饿感 90 防御强化 攻击 91 自动防御 守护 92 装填速度 偷盗无效 93 反动 搬运 94 通常弹强化 水耐性 95 贯通弹强化 冰耐性 96 散弹强化 耐暑 97 通常弹强化 风压 98 贯通弹追加 高速收集 99 散弹追加 运气 9A 榴弹追加 回复量 9B 扩散弹追加 调和数 9C 特殊攻击 底力 9D 属性攻击 耐力 9E 爆弹强化 精密射击 9F 饥饿感 剥取 A0 大胃王 回避距离 A1 攻击 高速设置 A2 防御 捕获 A3 守护 蓄力缩短 A4 听觉保护 属性耐性 A5 偷盗无效 速射 A6 广域 抗菌 A7 搬运 麻痹瓶追加 A8 火耐性 强击瓶追加 A9 水耐性 笛 AA 雷耐性 本气(认真) AB 冰耐性 对防御down AC 龙耐性 水属性攻击 AD 耐暑 冰属性攻击 AE 耐寒 斩裂弹追加 AF 风压 痛击 B0 采取 KO B1 高速收集 收刀 B2 反复无常 - B3 运气 毒倍加 B4 千里眼 麻痹倍加 B5 回复量 睡眠增加 B6 调和成功率 气绝无效 B7 调和数 泥&雪无效 B8 回避性能 挑衅 B9 底力 体力+50 BA 效果持续 体力-30 BB 耐力 回复速度+2 BC 装填数 回复速度-2 BD 精密射击 钝刀 BE 食事 心眼 BF 剥取 见切+2 C0 耐震 胴系统复制 3插槽 C1 回避距离 麻痹 C2 拔刀会心 气绝 C3 高速设置 气配(警惕) C4 体术 回复速度 C5 捕获 匠 C6 观察眼 达人 C7 溜短缩 防御性能 C8 拔刀减气 自动防御 C9 属性 耐性反动 CA 逆境 贯通弹强化 CB 速射 通常弹追加 CC 肥料 散弹追加 CD 抗菌 扩散弹追加 CE 毒瓶追加 属性攻击 CF 麻痹瓶追加 饥饿感 D0 睡眠瓶追加 攻击 D1 强击瓶追加 守护 D2 接击瓶追加 偷盗无效 D3 笛 搬运 D4 炮术 水耐性 D5 本气(认真) 冰耐性 D6 猎人 耐暑 D7 对防御down 风压 D8 火属性攻击 高速收集 D9 水属性攻击 运气 DA 雷属性攻击 回复量 DB 冰属性攻击 调和数 DC 龙属性攻击 底力 DD 断裂弹追加 耐力 DE 减气瓶追加 精密射击 DF 痛击 剥取 DG 重击 回避距离 E0 KO 高速设置 E1 减气攻击 捕获 E2 收刀 蓄力缩短 E3 气力回复 属性耐性 E4 - 速射 E5 毒无效 抗菌 E6 毒倍加 麻痹瓶追加 E7 麻痹无效 强击瓶追加 E8 麻痹倍加 笛 E9 睡眠无效 本气(认真) EA 睡眠倍加 对防御down EB 气绝确率减半 水属性攻击 EC 气绝无效 冰属性攻击 ED 气绝倍加 斩裂弹追加 EF 泥&雪无效 痛击 F0 隐蔽 KO F1 挑拨 收刀 F2 体力+20 - F3 体力+50 毒倍加 F4 体力-10 麻痹倍加 F5 体力-30 睡眠增加 F6 回复速度+1 气绝无效 F7 回复速度+2 泥&雪无效 F8 回复速度-1 挑衅 F9 回复速度-2 体力+50 FA 利刃 体力-30 FB 钝刀 回复速度+2 FC 锋利度等级+1 回复速度-2 FD 心眼 钝刀 FE 见切+1 心眼 FF 见切+2 见切+2 附录 装饰品代码 2F 03 耐绝珠 1 30 03 制绝珠 2 31 03 耐痹珠 1 32 03 耐痹珠 2 33 03 耐眠珠 1 34 03 耐眠珠 2 35 03 耐毒珠 1 36 03 耐毒珠 2 37 03 耐防珠 1 38 03 防盗珠 1 39 03 耐粘珠 1 3A 03 抗粘珠 1 3B 03 耐菌珠 1 3C 03 抗菌珠 1 3D 03 耐震珠 1 3E 03 抗震珠 1 3F 03 耐暑珠 1 40 03 耐寒珠 1 41 03 防音珠 1 42 03 防音珠 3 43 03 防风珠 1 44 03 防风珠 2 45 03 攻击珠 1 46 03 攻击珠 2 47 03 攻击珠 3 48 03 达人珠 1 49 03 达人珠 2 4A 03 达人珠 3 4B 03 特攻珠 1 4C 03 特攻珠 2 4D 03 属攻珠 1 4E 03 属攻珠 3 4F 03 火炎珠 1 50 03 火炎珠 2 51 03 流水珠 1 52 03 流水珠 2 53 03 雷光珠 1 54 03 雷光珠 2 55 03 冰结珠 1 56 03 冰结珠 2 57 03 破龙珠 1 58 03 破龙珠 2 59 03 痛击珠 1 5A 03 痛击珠 3 5B 03 重击珠 1 5C 03 重击珠 3 5D 03 装填珠 1 5E 03 装填珠 3 5F 03 短缩珠 1 60 03 短缩珠 3 61 03 全开珠 1 62 03 全开珠 2 63 03 KO珠 1 64 03 KO珠 2 65 03 夺气珠 1 66 03 夺气珠 2 67 03 底力珠 1 68 03 底力珠 2 69 03 逆境珠 1 6A 03 逆境珠 2 6B 03 爆师珠 1 6C 03 鼓笛珠 1 6D 03 炮术珠 1 6E 03 防御珠 1 6F 03 防御珠 2 70 03 属耐珠 1 71 03 属耐珠 3 72 03 耐火珠 1 73 03 制火珠 1 74 03 耐水珠 1 75 03 制水珠 1 76 03 耐雷珠 1 77 03 制雷珠 1 78 03 耐冰珠 1 79 03 制冰珠 1 7A 03 耐龙珠 1 7B 03 制龙珠 1 7C 03 加护珠 1 7D 03 神护珠 1 7E 03 体力珠 1 7F 03 早复珠 1 80 03 早复珠 2 81 03 治愈珠 1 82 03 治愈珠 2 83 03 回避珠 1 84 03 回避住 2 85 03 跳跃珠 1 86 03 跳跃珠 3 87 03 速纳珠 1 88 03 速纳珠 2 89 03 民师珠 1（陷阱那个） 8A 03 早食珠 1 8B 03 早食珠 3 8C 03 强走珠 1 8D 03 强走珠 3 8E 03 体术珠 1 8F 03 体术珠 2 90 03 早气珠 1 91 03 早气珠 2 92 03 无食珠 1 93 03 食汉珠 1 94 03 运气珠 1 95 03 运气珠 3 96 03 捕获珠 1 97 03 捕获珠 1 98 03 皮剥珠 1 99 03 皮剥珠 3 9A 03 搬运珠 1 9B 03 采取珠 1 9C 03 速集珠 1 9D 03 祝福珠 1 9E 03 友爱珠 1 9F 03 友爱珠 2 A0 03 千里珠 1 A1 03 博士珠 1 A2 03 弹裂珠 1 A3 03 持续珠 1 A4 03 观察珠 1 A5 03 肥师珠 1 A6 03 狩人珠 1 A7 03 忍脚珠 1 A8 03 匠珠 1 A9 03 匠珠 3 AA 03 剑豪珠 1 AB 03 剑豪珠 3 AC 03 斩铁珠 1 AD 03 斩铁珠 3 AE 03 拔刀珠 1 AF 03 拔刀珠 2 B0 03 拔打珠 1 B1 03 拔打珠 3 B2 03 铁壁珠 1 B3 03 铁壁珠 2 B4 03 强壁珠 1 B5 03 强壁珠 2 B6 03 研磨珠 1 B7 03 强弹珠 1 B8 03 强弹珠 3 B9 03 贯通珠 1 BA 03 贯通珠 3 BB 03 散弹珠 1 BC 03 散弹珠 3 BD 03 加弹珠 1 BE 03 加弹珠 2 BF 03 加贯珠 1 C0 03 加散珠 1 C1 03 加榴珠 1 C2 03 加扩珠 1 C3 03 加斩珠 1 C4 03 速射珠 1 C5 03 速射珠 3 C6 03 早填珠 1 C7 03 早填珠 2 C8 03 抑反珠 1 C9 03 抑反珠 3 CA 03 点射珠 1 CB 03 痹瓶珠 1 CC 03 痹瓶珠 2 CD 03 眠瓶珠 1 CE 03 毒瓶珠 1 CF 03 强瓶珠 1 D0 03 强瓶珠 2 D1 03 接瓶珠 1 D2 03 灭瓶珠 1 未完持续......","date":1293615374000,"updated":1586328684152,"size":6790},{"title":"Mysql数据库丢失root密码恢复","slug":"mysql-get-password-back","content":" 如果不小心把MySQL root的密码弄丢，或是在修改初始密码时忘记了新的密码，无需重装MySQL，下面就是具体的解决方案。 ############################### Mysql 数据库丢失root密码恢复 # ############################### ############################################################ Purpose: recover mysql root password # USER          YYYY-MM-DD -- ACTION Oldboy        2009-10-24 -- Created QQ:49000448   老男孩       mail:49000448@qq.com ############################################################ 单实例 killall mysqld mysqld_safe --skip-grant-tables & mysql -u root -p 多实例 killall mysqld mysqld_safe --defaults-file=/data/3306/my.cnf  --skip-grant-table & mysql -u root -p -S /data/3306/mysql.sock 跳过验证启动mysql 登陆后修改密码 mysql> UPDATE mysql.user SET password=PASSWORD(\"新密码\") WHERE user='root'; Query OK, 2 rows affected (0.00 sec) Rows matched: 2  Changed: 2  Warnings: 0 mysql> FLUSH PRIVILEGES; Query OK, 0 rows affected (0.00 sec) mysql> quit Bye 重起mysql登陆测试(多实例修改密码后测试) /data/3306/mysql restart [root@ryan01 3306]mysql -u root -p新密码 -S /data/3306/mysql.sock Enter password: Welcome to the MySQL monitor.  Commands end with ; or \\g. Your MySQL connection id is 1 Type 'help;' or '\\h' for help. Type '\\c' to clear the buffer. mysql>; ","date":1275873055000,"updated":1586328684153,"size":1380},{"title":"在nginx中使用lua-nginx-module","slug":"nginx-lua","content":" 工作顺序 ![](http://static.0.codante.org/d/a/da95f6c82ae4ec3f5666fd78b03f8f326d9e7337.png) 基本知识点 ngx.say() -- 直接输出到响应response ngx.log() -- 打印到日志 ngx.var.* -- 指向到nginx种的变量(以\"$\"为首的全部变量皆可调用或修改)，在lua里不需要加\"$\" [_file|_block] 与 proxy_pass 只能同时一者生效，所以如果预处理后仍要发往其他backend需要使用 [_file|_block] ngxin 配置 server {   location /example {     set $methoded_url '';     access_by_lua_file 'path to lua file';     #echo $methoded_url;     proxy_buffering off;     proxy_set_header X-Forwarded-For $remote_addr;     proxy_set_header Host $http_host;     proxy_http_version 1.1;     proxy_pass http://127.0.0.1:8080/$methoded_url;     header_filter_by_lua_file 'path to lua file';     body_filter_by_lua_file 'path to lua file';   } } 请求预处理 [_file|_block] ngx.req.read_body() -- 获取POST参数 local args, err = ngx.req.get_post_args() -- 清空body，清理原始提交中的所有post --ngx.req.set_body_data('') ngx.req.discard_body() if err == \"truncated\" then     -- one can choose to ignore or reject the current request here     ngx.status = ngx.HTTP_FORBIDDEN     ngx.exit(ngx.HTTP_FORBIDDEN) end if not args then     ngx.status = ngx.HTTP_FORBIDDEN     ngx.exit(ngx.HTTP_FORBIDDEN) end --for key, val in pairs(args) do --    if type(val) == \"table\" then --        ngx.say(key, \": \", table.concat(val, \", \")) --    else --        ngx.say(key, \": \", val) --    end --end -- 获取参数 local method = nil local paramStr = \"\" local ft = 0 -- 将post参数连入get local function P(k, v)     if ft == 0 then         paramStr = paramStr .. '?'     else         paramStr = paramStr .. '&'     end     paramStr = paramStr .. k .. '=' .. v     ft = ft + 1 end -- 除了method，其他的参数原样抛POST for key, val in pairs(args) do     if key == 'method' then         method = val         --else         ----if val ~= nil and val ~= '' then         ----    val = util.url_encode(val)         ----end         --if key ~= 'timestamp' then         --    P(key, val)         --end     end end -- 设定nginx中的 $methoded_url ngx.var.methoded_url = method .. paramStr -- 如果外部使用proxy_pass，原始的post依然会带过去，除非这里做body的清空 响应处理（过滤器） 头处理 [_file|_block] ngx.header['content-length'] = nil ngx.header[\"Content-Type\"] = \"application/json\" 内容处理 [_file|_block] local cjson = require(\"cjson\") -- 获取相应状态，来自proxy_pass同样有效 local status = ngx.status local chunk, eof = ngx.arg[1], ngx.arg[2] chunk = chunk or '' local function res_json(errCode, errMsg)     local res = {}     res[\"success\"] = false     res[\"errCode\"] = errCode     res[\"errMsg\"] = errMsg     return cjson.encode(res) end if status ~= 200 then     -- 只有在遇到末尾时才输出     if eof then         ngx.arg[1] = res_json(20, '接口请求失败:' .. chunk)     else         -- ngx.ctx.buffered = nil         ngx.arg[1] = nil -- 这里是为了将原本的输出不显示     end end ngx.status = ngx.OK **修改 .arg[1] 会改变输出内容，但经常出现输出两次的情况，是因为在输出流的末尾会有一个空的输出，可用 .arg[2] 存在的情况进行判断。** **输出的时候 如果需要改变状态码，如，直接退出 .exit(ngx.OK) 必须同时修改 .status** [https://github.com/openresty/openresty]() [https://github.com/openresty/lua-nginx-module]()","date":1587883178000,"updated":1587888923716,"size":3299},{"title":"Nginx安装及配置","slug":"nginx-install-and-configuration","content":" configure 脚本确定系统所具有一些特性，特别是 nginx 用来处理连接的方法。然后，它创建 Makefile 文件。 在nginx安装完成后有一些配置信息是无法更改的，所以在创建makefile时需要对一些参数进行修改。在下面列举了所有的configure所支持的参数。 configure 所有支持的选项 - **--prefix=**&lt;path&gt; - Nginx安装路径。如果没有指定，默认为 /usr/local/nginx。 - **--sbin-path=**&lt;path&gt; - Nginx可执行文件安装路径。只能安装时指定，如果没有指定，默认为&lt;prefix&gt;/sbin/nginx。 - **--conf-path=**&lt;path&gt; - 在没有给定-c选项下默认的nginx.conf的路径。如果没有指定，默认为&lt;prefix&gt;/conf/nginx.conf。 - **--pid-path=**&lt;path&gt; - 在nginx.conf中没有指定pid指令的情况下，默认的nginx.pid的路径。如果没有指定，默认为 &lt;prefix&gt;/logs/nginx.pid。 - **--lock-path=**&lt;path&gt; - nginx.lock文件的路径。 - **--error-log-path=**&lt;path&gt; - 在nginx.conf中没有指定error_log指令的情况下，默认的错误日志的路径。如果没有指定，默认为 &lt;prefix&gt;/logs/error.log。 - **--http-log-path=**&lt;path&gt; - 在nginx.conf中没有指定access_log指令的情况下，默认的访问日志的路径。如果没有指定，默认为 &lt;prefix&gt;/logs/access.log。 - **--user=**&lt;user&gt; - 在nginx.conf中没有指定user指令的情况下，默认的nginx使用的用户。如果没有指定，默认为 nobody。 - **--group=**&lt;group&gt; - 在nginx.conf中没有指定user指令的情况下，默认的nginx使用的组。如果没有指定，默认为 nobody。 - **--builddir=DIR** - 指定编译的目录 - **--with-rtsig_module** - 启用 rtsig 模块 - **--with-select_module --without-select_module** - Whether or not to enable the select module. This module is enabled by default if a more suitable method such as kqueue, epoll, rtsig or /dev/poll is not discovered by configure. 允许或不允许开启SELECT模式，如果 configure 没有找到更合适的模式，比如：kqueue(sun os),epoll (linux kenel 2.6+), rtsig(实时信号)或者/dev/poll(一种类似select的模式，底层实现与SELECT基本相 同，都是采用轮训方法) SELECT模式将是默认安装模式 - **--with-poll_module --without-poll_module** - Whether or not to enable the poll module. This module is enabled by default if a more suitable method such as kqueue, epoll, rtsig or /dev/poll is not discovered by configure. - **--with-http_ssl_module** - Enable ngx_http_ssl_module. Enables SSL support and the ability to handle HTTPS requests. Requires OpenSSL. On Debian, this is libssl-dev. //开启HTTP SSL模块，使NGINX可以支持HTTPS请求。这个模块需要已经安装了OPENSSL，在DEBIAN上是libssl-dev - **--with-http_realip_module** - 启用 ngx_http_realip_module - **--with-http_addition_module** - 启用 ngx_http_addition_module - **--with-http_sub_module** - 启用 ngx_http_sub_module - **--with-http_dav_module** - 启用 ngx_http_dav_module - **--with-http_flv_module** - 启用 ngx_http_flv_module - **--with-http_stub_status_module** - 启用 \"server status\" 页 - **--without-http_charset_module** - 禁用 ngx_http_charset_module - **--without-http_gzip_module** - 禁用 ngx_http_gzip_module. 如果启用，需要 zlib 。 - **--without-http_ssi_module** - 禁用 ngx_http_ssi_module - **--without-http_userid_module** - 禁用 ngx_http_userid_module - **--without-http_access_module** - 禁用 ngx_http_access_module - **--without-http_auth_basic_module** - 禁用 ngx_http_auth_basic_module - **--without-http_autoindex_module** - 禁用 ngx_http_autoindex_module - **--without-http_geo_module** - 禁用 ngx_http_geo_module - **--without-http_map_module** - 禁用 ngx_http_map_module - **--without-http_referer_module** - 禁用 ngx_http_referer_module - **--without-http_rewrite_module** - 禁用 ngx_http_rewrite_module. 如果启用需要 PCRE 。 - **--without-http_proxy_module** - 禁用 ngx_http_proxy_module - **--without-http_fastcgi_module** - 禁用 ngx_http_fastcgi_module - **--without-http_memcached_module** - 禁用 ngx_http_memcached_module - **--without-http_limit_zone_module** - 禁用 ngx_http_limit_zone_module - **--without-http_empty_gif_module** - 禁用 ngx_http_empty_gif_module - **--without-http_browser_module** - 禁用 ngx_http_browser_module - **--without-http_upstream_ip_hash_module** - 禁用 ngx_http_upstream_ip_hash_module - **--with-http_perl_module** - 启用 ngx_http_perl_module - **--with-perl_modules_path=PATH** - 指定 perl 模块的路径 - **--with-perl=PATH** - 指定 perl 执行文件的路径 - **--http-log-path=PATH** - Set path to the http access log - **--http-client-body-temp-path=PATH** - Set path to the http client request body temporary files - **--http-proxy-temp-path=PATH** - Set path to the http proxy temporary files - **--http-fastcgi-temp-path=PATH** - Set path to the http fastcgi temporary files - **--without-http** - 禁用 HTTP server - **--with-mail** - 启用 IMAP4/POP3/SMTP 代理模块 - **--with-mail_ssl_module** - 启用 ngx_mail_ssl_module - **--with-cc=PATH** - 指定 C 编译器的路径 - **--with-cpp=PATH** - 指定 C 预处理器的路径 - **--with-cc-opt=OPTIONS** - Additional parameters which will be added to the variable CFLAGS. With the use of the system library PCRE in FreeBSD, it is necessary to indicate --with-cc-opt=\"-I /usr/local/include\". If we are using select() and it is necessary to increase the number of file descriptors, then this also can be assigned here: --with-cc-opt=\"-D FD_SETSIZE=2048\". - **--with-ld-opt=OPTIONS** - Additional parameters passed to the linker. With the use of the system library PCRE in FreeBSD, it is necessary to indicate --with-ld-opt=\"-L /usr/local/lib\". - **--with-cpu-opt=CPU** - 为特定的 CPU 编译，有效的值包括：pentium, pentiumpro, pentium3, pentium4, athlon, opteron, amd64, sparc32, sparc64, ppc64 - **--without-pcre** - 禁止 PCRE 库的使用。同时也会禁止 HTTP rewrite 模块。在 \"location\" 配置指令中的正则表达式也需要 PCRE 。 - **--with-pcre=DIR** - 指定 PCRE 库的源代码的路径。 - **--with-pcre-opt=OPTIONS** - Set additional options for PCRE building. - **--with-md5=DIR** - Set path to md5 library sources. - **--with-md5-opt=OPTIONS** - Set additional options for md5 building. - **--with-md5-asm** - Use md5 assembler sources. - **--with-sha1=DIR** - Set path to sha1 library sources. - **--with-sha1-opt=OPTIONS** - Set additional options for sha1 building. - **--with-sha1-asm** - Use sha1 assembler sources. - **--with-zlib=DIR** - Set path to zlib library sources. - **--with-zlib-opt=OPTIONS** - Set additional options for zlib building. - **--with-zlib-asm=CPU** - Use zlib assembler sources optimized for specified CPU, valid values are: pentium, pentiumpro - **--with-openssl=DIR** - Set path to OpenSSL library sources - **--with-openssl-opt=OPTIONS** - Set additional options for OpenSSL building - **--with-debug** - 启用调试日志 - **--add-module=PATH** - 在指定的目录中查找并添加第三方模块","date":1586328684154,"updated":1586328684155,"size":5963},{"title":"Mysql安装及配置","slug":"mysql-install-and-configuration","content":" 感谢老男孩赐予的知识。 老男孩（QQ:49000448， mail:49000448@qq.com） 下载源码包 wget http://dev.mysql.com/get/Downloads/MySQL-5.1/mysql-5.1.41-linux-i686-glibc23.tar.gz/from/http://mysql.cdpa.nsysu.edu.tw/ 创建mysql用户 groupadd mysql; useradd -s /sign/nologin -g mysql -M mysql  #-s /sign/nologin禁止其他所有的php，cookie。 编译 ./configure --prefix=/usr/local/mysql \\ --with-unix-socket-path=/usr/local/mysql/tmp/mysql.sock \\ --localstatedir=/usr/local/mysql/data \\ --enable-assembler \\ --with-mysqld-ldflags=-all-static \\ --with-client-ldflags=-all-static \\ --enable-thread-safe-client \\ --with-mysqld-user=mysql \\ --with-big-tables \\ --without-debug \\ --with-pthread; 安装 make make install 初始化数据库 拷贝MySQL的配置文件到/etc目录下 cp support-files/my-huge.cnf /etc/my.cnf 创建数据文件夹 mkdir -p /usr/local/mysql/data 生成mysql.sock /usr/local/mysql/bin/mysql_install_db --user=mysql 将软件的安装目录拥有者改为root用户 chown -R root /usr/local/mysql/ 将存放数据库的目录拥有者改为mysql用户 chown -R mysql /usr/local/mysql/data 将软件的安装目录属组改为mysql组 chgrp -R mysql /usr/local/mysql/ 启动 /usr/local/mysql/bin/mysqld_safe --user=mysql & 添加开机启动 vi /etc/rc.local 添加一行 /usr/local/mysql/bin/mysqld_safe --user=mysql & ","date":1277838508000,"updated":1586328684154,"size":1941},{"title":"nodejs安装及配置","slug":"nodejs-installation-and-configuration","content":" 下载及安装 git clone git://github.com/joyent/node.git cd node ./configure --prefix=/servers/app/node make && make install 启动 /servers/app/node/bin/node 直接执行./node将进入nodejs的命令行","date":1308552954000,"updated":1586328684155,"size":598},{"title":"npm-yarn","slug":"npm-yarn","content":" |NPM|YARN|说明| |---|---|---| |npm init|yarn init|初始化某个项目| |npm install/link|yarn install/link|从package.json安装全部依赖项目| |npm install * --save|yarn add *|安装某个依赖项目，并且默认保存到package.json| |npm uninstall * --save|yarn remove *|移除某个依赖项目| |npm install * --save-dev|yarn add * --dev|安装某个开发时依赖项目| |npm update * --save|yarn upgrade *|更新某个依赖项目| |npm install * --global|yarn global add *|安装某个全局依赖项目| |npm publish/login/logout|yarn publish/login/logout|发布/登录/登出，NPM Registry操作| |npm run/test|yarn run/test|运行某个命令|","date":1543303743000,"updated":1586328684156,"size":604},{"title":"PHP for Nginx","slug":"php-for-nginx","content":" 我用的是5.2.9，所以就以它为例，为了运行为FastCGI模式，需要打上fpm补丁包。 PHP各个版本fpm补丁包下载 [http://php-fpm.org/downloads/][0] wget http://cn.php.net/get/php-5.2.9.tar.gz/from/this/mirror wget http://php-fpm.org/downloads/php-5.2.9-fpm-0.5.10-unofficial.diff.gz tar zxf php-5.2.9.tar.gz gzip -cd php-5.2.9-fpm-0.5.10-unofficial.diff.gz | patch -d php-5.2.9 -p1 cd php-5.2.9 ./configure \\ --prefix=/servers/app/php \\ --with-config-file-path=/servers/app/php/etc \\ --with-mysql=/usr/local/mysql \\ --with-mysqli=/usr/local/mysql/bin/mysql_config \\ --with-iconv \\ --with-freetype-dir \\ --with-jpeg-dir \\ --with-png-dir \\ --with-zlib \\ --with-libxml-dir=/usr \\ --enable-xml \\ --disable-rpath \\ --enable-discard-path \\ --enable-safe-mode \\ --enable-bcmath \\ --enable-shmop \\ --enable-sysvsem \\ --enable-inline-optimization \\ --with-curl \\ --with-curlwrappers \\ --enable-mbregex \\ --enable-fastcgi \\ --enable-fpm \\ --enable-force-cgi-redirect \\ --enable-mbstring \\ --with-mcrypt \\ --with-gd \\ --enable-gd-native-ttf \\ --with-openssl \\ --with-mhash \\ --enable-pcntl \\ --enable-sockets \\ --with-ldap \\ --with-ldap-sasl make ZEND_EXTRA_LIBS='-liconv' make install *缺失的库可以尝试用yum进行安装 yum install libjpeg-devel yum install libpng-devel yum install libXpm-devel yum install libmcrypt-devel 等... 看报错信息就好了 然后，复制配置文件到php安装目录中的etc下。 cp php.ini-dist /servers/app/php/etc/php.ini 编辑fpm的文件 vi /servers/app/php/etc/php-fpm.conf 需要修改的不是很多，重新设置一下pid，log，端口，进程数什么的，根据自己机器来定。 放个简洁版的，注释太长，去了。 <?xml version=\"1.0\" ?> <configuration>     <section name=\"global_options\">         <value name=\"pid_file\">/servers/run/php-fpm-9000.pid</value>         <value name=\"error_log\">/servers/logs/php-fpm-9000.log</value>         <value name=\"log_level\">notice</value>         <value name=\"emergency_restart_threshold\">10</value>         <value name=\"emergency_restart_interval\">1m</value>         <value name=\"process_control_timeout\">5s</value>         <value name=\"daemonize\">yes</value>     </section>     <workers>         <section name=\"pool\">             <value name=\"name\">default</value>             <value name=\"listen_address\">127.0.0.1:9000</value>             <value name=\"listen_options\">                 <value name=\"backlog\">-1</value>                 <value name=\"owner\"></value>                 <value name=\"group\"></value>                 <value name=\"mode\">0666</value>             </value>             <value name=\"php_defines\">                 <value name=\"sendmail_path\">/usr/sbin/sendmail -t -i</value>                 <value name=\"display_errors\">0</value>             </value>             <value name=\"user\">nginx</value>             <value name=\"group\">nginx</value>             <value name=\"pm\">                 <value name=\"style\">static</value>                 <value name=\"max_children\">128</value>                 <value name=\"apache_like\">                     <value name=\"StartServers\">20</value>                     <value name=\"MinSpareServers\">5</value>                     <value name=\"MaxSpareServers\">35</value>                 </value>             </value>             <value name=\"request_terminate_timeout\">0s</value>             <value name=\"request_slowlog_timeout\">0s</value>             <value name=\"slowlog\">logs/slow.log</value>             <value name=\"rlimit_files\">65535</value>             <value name=\"rlimit_core\">0</value>             <value name=\"chroot\"></value>             <value name=\"chdir\"></value>             <value name=\"catch_workers_output\">yes</value>             <value name=\"max_requests\">1024</value>             <value name=\"allowed_clients\">127.0.0.1</value>             <value name=\"environment\">                 <value name=\"HOSTNAME\">$HOSTNAME</value>                 <value name=\"PATH\">/usr/local/bin:/usr/bin:/bin</value>                 <value name=\"TMP\">/tmp</value>                 <value name=\"TMPDIR\">/tmp</value>                 <value name=\"TEMP\">/tmp</value>                 <value name=\"OSTYPE\">$OSTYPE</value>                 <value name=\"MACHTYPE\">$MACHTYPE</value>                 <value name=\"MALLOC_CHECK_\">2</value>             </value>         </section>     </workers> </configuration> 启动fastcgi /servers/app/php/sbin/php-fpm start 持续。。。 [0]: http://php-fpm.org/downloads/","date":1300277018000,"updated":1586328684158,"size":4676},{"title":"FireFox中的outerHTML","slug":"outerhtml-in-firefox","content":" 此方法是直接将outerHTML添加为HTMLElement的动态方法，可供直接调用。 if (document.body.__defineGetter__) {    if (HTMLElement) {           var element = HTMLElement.prototype;           if (element.__defineGetter__) {                  element.__defineGetter__(\"outerHTML\",                        function () {                               var parent = this.parentNode;                               var el = document.createElement(parent.tagName);                               el.appendChild(this);                               var shtml = el.innerHTML;                               parent.appendChild(this);                               return shtml;                        }                  );           }    } } ","date":1298903916000,"updated":1586328684157,"size":1115},{"title":"PHP获取post参数的几种方式","slug":"php-get-post-data","content":" 1. $_POST['paramName'] 只能接收Content-Type: /x-www-form-urlencoded提交的数据 2. (\"php://input\") 适用大多数类型的Content-type，://input 允许读取 POST 的原始数据。和 $HTTP_RAW_POST_DATA 比起来，它给内存带来的压力较小，并且不需要任何特殊的 php.ini 设置。://input 不能用于 =\"multipart/form-data\"。 3. $GLOBALS['HTTP_RAW_POST_DATA']; 总是产生 $HTTP_RAW_POST_DATA  变量包含有原始的 POST 数据。此变量仅在碰到未识别 MIME 类型的数据时产生。$HTTP_RAW_POST_DATA 对于 =\"multipart/form-data\" 表单数据不可用。如果post过来的数据不是PHP能够识别的，你可以用 $GLOBALS['HTTP_RAW_POST_DATA'] 来接收，比如 /xml 或者  等等。","date":1586328684158,"updated":1586328684158,"size":691},{"title":"实时更新的GPU性能测试排行(显卡)","slug":"real-time-updates-of-the-gpu-performance-test-ranks","content":" 显卡的型号满天飞，新旧、性能很混乱，无论是攒机还是买本，先看一下，免得被忽悠了。 [http://www.notebookcheck.net/Mobile-Graphics-Cards-Benchmark-List.844.0.html](http://www.notebookcheck.net/Mobile-Graphics-Cards-Benchmark-List.844.0.html)","date":1586328684160,"updated":1586328684161,"size":246},{"title":"实时更新的CPU性能测试排行","slug":"real-time-updates-of-the-cpu-performance-test-ranks","content":" 收藏备用 [http://www.notebookcheck.net/Mobile-Processors-Benchmarklist.2436.0.html](http://www.notebookcheck.net/Mobile-Processors-Benchmarklist.2436.0.html)","date":1586328684160,"updated":1586328684160,"size":198},{"title":"PHP中header的使用范例","slug":"php-header-example","content":" 成功 // See related links for more status codes   header('HTTP/1.1 200 OK'); 页面未找到 Page was not found //Use this header instruction to fix 404 headers //produced by url rewriting... header('HTTP/1.1 404 Not Found'); 拒绝访问 Access forbidden header('HTTP/1.1 403 Forbidden'); 永久转向 Moved Permanently The page moved permanently should be used for all redrictions, because search engines know what's going on and can easily update their urls. header('HTTP/1.1 301 Moved Permanently'); 服务器内部错误 Server error header('HTTP/1.1 500 Internal Server Error'); 页面跳转 Redirect to a new location header('Location: http://www.example.org/'); 一定时间后重定向 Redriect with a delay header('Refresh: 10; url=http://www.example.org/'); print 'You will be redirected in 10 seconds'; 当然,还可以这样: 通过html实现 &lt;meta http-equiv=\"refresh\" content=\"10;http://www.example.org/ /&gt; 重置技术支持信息 override X-Powered-By value header('X-Powered-By: PHP/4.4.0'); header('X-Powered-By: Brain/0.6b'); 设定语言 content language (en = English) header('Content-language: en'); 最后编辑时间 last modified 对缓存页面有很好的帮助 $time = time() - 60; // or filemtime($fn), etc header('Last-Modified: '.gmdate('D, d M Y H:i:s', $time).' GMT'); 已缓存的 Not Modified // header for telling the browser that the content // did not get changed header('HTTP/1.1 304 Not Modified'); 设定内容长度 set content length (good for caching) header('Content-Length: 1234'); 用于下载的文件头 Headers for an download: header('Content-Type: application/octet-stream'); header('Content-Disposition: attachment; filename=\"example.zip\"'); header('Content-Transfer-Encoding: binary'); 读取文件内容: readfile('example.zip'); 不使用缓存 Disable caching of the current document header('Cache-Control: no-cache, no-store, max-age=0, must-revalidate'); header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past header('Pragma: no-cache'); 设置页面类型 set content type header('Content-Type: text/html; charset=iso-8859-1'); header('Content-Type: text/html; charset=utf-8'); header('Content-Type: text/plain'); // plain text file header('Content-Type: image/jpeg'); // JPG picture header('Content-Type: application/zip'); // ZIP file header('Content-Type: application/pdf'); // PDF file header('Content-Type: audio/mpeg'); // Audio MPEG (MP3,...) file header('Content-Type: application/x-shockwave-flash'); // Flash animation 弹出一个消息框 show sign in box header('HTTP/1.1 401 Unauthorized'); header('WWW-Authenticate: Basic realm=\"Top Secret\"'); print 'Text that will be displayed if the user hits cancel or '; print 'enters wrong login data'; ","date":1276831536000,"updated":1586328684159,"size":3246},{"title":"redis安装及配置","slug":"redis-install-and-configure","content":" 依赖 安装redis需要先安装tcl [http://www.linuxfromscratch.org/blfs/view/cvs/general/tcl.html][0] 获取软件 #tcl8.5 wget http://downloads.sourceforge.net/tcl/tcl8.5.12-src.tar.gz #redis wget http://redis.googlecode.com/files/redis-2.6.2.tar.gz 安装 tcl tar -zxf tcl8.5.12-html.tar.gz --strip-components=1 cd unix && ./configure --prefix=/usr \\ --enable-threads \\ --mandir=/usr/share/man make sed -e \"s@^\\(TCL_SRC_DIR='\\).*@/usr/include'@\" \\ -e \"/TCL_B/s@='\\(-L\\)\\?.*unix@='/usr/lib@\" \\ -i tclConfig.sh make install make install-private-headers ln -v -sf tclsh8.5 /usr/bin/tclsh chmod -v 755 /usr/lib/libtcl8.5.so [0]: http://www.linuxfromscratch.org/blfs/view/cvs/general/tcl.html \"tcl\"","date":1351653191000,"updated":1586328684161,"size":1105},{"title":"REMOTE_ADDR，HTTP_CLIENT_IP，HTTP_X_FORWARDED_FOR","slug":"remote_addr-http_client_ip-http_x_forwarded_for","content":" function real_ip() { static $realip = NULL; if ($realip !== NULL) {     return $realip; } if (isset($_SERVER)) {     if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {         $arr = explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']);         /* 取X-Forwarded-For中第一个非unknown的有效IP字符串 */         foreach ($arr AS $ip) {             $ip = trim($ip);             if ($ip != 'unknown') {                 $realip = $ip;                 break;             }         }     } elseif (isset($_SERVER['HTTP_CLIENT_IP'])) {         $realip = $_SERVER['HTTP_CLIENT_IP'];     } else {         if (isset($_SERVER['REMOTE_ADDR'])) {             $realip = $_SERVER['REMOTE_ADDR'];         } else {             $realip = '0.0.0.0';         }     } } else {     if (getenv('HTTP_X_FORWARDED_FOR')) {         $realip = getenv('HTTP_X_FORWARDED_FOR');     } elseif (getenv('HTTP_CLIENT_IP')) {         $realip = getenv('HTTP_CLIENT_IP');     } else {         $realip = getenv('REMOTE_ADDR');     } } preg_match(\"/[\\d\\.]{7,15}/\", $realip, $onlineip); $realip = !empty($onlineip[0]) ? $onlineip[0] : '0.0.0.0'; return $realip; } 一、没有使用代理服务器的情况： - REMOTE_ADDR = 您的 IP - HTTP_VIA = 没数值或不显示 - HTTP_X_FORWARDED_FOR = 没数值或不显示 二、使用透明代理服务器的情况：Transparent Proxies - REMOTE_ADDR = 最后一个代理服务器 IP - HTTP_VIA = 代理服务器 IP - HTTP_X_FORWARDED_FOR = 您的真实 IP ，经过多个代理服务器时，这个值类似如下：203.98.182.163, 203.98.182.163, 203.129.72.215。 *这类代理服务器还是将您的信息转发给您的访问对象，无法达到隐藏真实身份的目的。* 三、使用普通匿名代理服务器的情况：Anonymous Proxies - REMOTE_ADDR = 最后一个代理服务器 IP - HTTP_VIA = 代理服务器 IP - HTTP_X_FORWARDED_FOR = 代理服务器 IP ，经过多个代理服务器时，这个值类似如下：203.98.182.163, 203.98.182.163, 203.129.72.215。 *隐藏了您的真实IP，但是向访问对象透露了您是使用代理服务器访问他们的。* 四、使用欺骗性代理服务器的情况：Distorting Proxies - REMOTE_ADDR = 代理服务器 IP - HTTP_VIA = 代理服务器 IP - HTTP_X_FORWARDED_FOR = 随机的 IP ，经过多个代理服务器时，这个值类似如下：203.98.182.163, 203.98.182.163, 203.129.72.215。 *告诉了访问对象您使用了代理服务器，但编造了一个虚假的随机IP代替您的真实IP欺骗它。* 五、使用高匿名代理服务器的情况：High Anonymity Proxies (Elite proxies) - REMOTE_ADDR = 代理服务器 IP - HTTP_VIA = 没数值或不显示 - HTTP_X_FORWARDED_FOR = 没数值或不显示 ，经过多个代理服务器时，这个值类似如下：203.98.182.163, 203.98.182.163, 203.129.72.215。 完全用代理服务器的信息替代了您的所有信息，就象您就是完全使用那台代理服务器直接访问对象。 - REMOTE_ADDR 是你的客户端跟你的服务器\"握手\"时候的IP。如果使用了\"匿名代理\"，REMOTE_ADDR将显示代理服务器的IP。 - HTTP_CLIENT_IP 是代理服务器发送的HTTP头。如果是\"超级匿名代理\"，则返回none值。同样，REMOTE_ADDR也会被替换为这个代理服务器的IP。 $_SERVER['REMOTE_ADDR']; //访问端（有可能是用户，有可能是代理的）IP $_SERVER['HTTP_CLIENT_IP'];  //代理端的（有可能存在，可伪造） $_SERVER['HTTP_X_FORWARDED_FOR']; //用户是在哪个IP使用的代理（有可能存在，也可以伪造） ","date":1293425357000,"updated":1586328684162,"size":2924},{"title":"据统计，大雄在《哆啦A梦》全集中一共被胖虎揍173次，被老师骂60次，被妈妈骂了327次，被狗咬23次，掉进水沟14次","slug":"rival173-teacher60-mother327-dog23-ditch14","content":" 据统计，大雄在《哆啦A梦》全集中一共 被胖虎揍**173**次 被老师骂**60**次 被妈妈骂了**327**次 被狗咬**23**次 掉进水沟**14**次 可见我们大雄是多么乐观的活着。 就算没有哆啦A梦，困难在我面前也根本算不了什么 ... 想想这位儿时的偶像，一直都在默默的激励着我们。","date":1279260563000,"updated":1586328684164,"size":315},{"title":"浏览器内核(Rendering Engine):Trident、Gecko、Presto、KHTML、WebCore、WebKit","slug":"rendering-engine-trident-gecko-presto-khtml-webcore-webkit","content":" 几种常见的浏览器内核简介： Trident Windows下的IE浏览器使用的内核代号。除IE外，众多的IE Shell（如 Maxthon）都使用这个内核。 Trident （又称为MSHTML），是微软的窗口操作系统（Windows）搭载的网页浏览器---Internet   Explorer的排版引擎的名称，它的第一个版本随着1997年10月Internet   Explorer第四版释出，之后不断的加入新的技术并随着新版本的Internet Explorer释出。在未来最新的Internet   Explorer第七版中，微软将对Trident排版引擎做了的重大的变动，除了加入新的技术之外，并增加对网页标准的支持。尽管这些变动已经在相当大  的程度上落后了其它的排版引擎，如Gecko、WebCore、KHTML及Presto。 Gecko Mozilla Firefox浏览器使用的内核代号。使用Gecko内核的浏览器也有不少，如Netscape、MozillaSuite/SeaMonkey等。另外，Mozilla Thunderbird也使用Gecko。 Gecko壁虎，英文为\"Gecko\"。Gecko是由Mozilla基金会开发的布局引擎的名字。它原本叫作NGLayout。Gecko的作用是读取 诸如HTML、CSS、XUL和JavaScript等的网页内容，并呈  现到用户屏幕或打印出来。Gecko已经被许多应用程序所使用，包括若干浏览器，例如Firefox、Mozilla Suite、Camino等等。 Presto Opera浏览器使用的内核代号，这是目前公认网页浏览速度最快的浏览器内核。 Presto是一个由Opera Software开发的浏览器排版引擎，供Opera 7.0及以上使用。 Presto取代了旧版Opera 4至6版本使用的Elektra排版引擎，包括加入动态功能，例如网页或其部分可随着DOM及Script语法的事件而重新排版。 Presto在推出后不断有更新版本推出，使不少错误得以修正，以及阅读Javascript效能得以最佳化，并成为速度最快的引擎。 KHTML/WebCore Konqueror/Safari浏览器使用的内核代号。Konqueror是X协议下的KDE桌面环境使用的浏览器和资源 管理器，可以用在Unix/Linux/BSD系统中，KDE 4.0以后向Windows移植；Safari则是Apple用户中最受欢迎的浏览器。 KHTML KHTML是HTML网页排版引擎之一，由KDE所开发。 KDE系统自KDE2版起，在档案及网页浏览器使用了KHTML引擎。该引擎以C++编程语言所写，并以LGPL授权，支援大多数网页浏览标准。由于微软的Internet Explorer的占有率相当高，不少以FrontPage制作的网页均包含只有IE才能读取的非标准语法，为了使KHTML引擎可呈现的网页达到最多，部分IE专属的语法也一并支援。 KHTML拥有速度快捷的优点，但对错误语法的容忍度则比Mozilla产品所使用的Gecko引擎小。 苹果电脑于2002年采纳了KHTML，作为开发Safari浏览器之用，并发布所修改的最新及过去版本源代码。后来发表了开放源代码的WebCore及WebKit引擎，它们均是KHTML的衍生产品，在开发网站列出引擎改变内容，并会传回至KDE计划。由于两个衍生产品各走不同路线，使两者源代码偏离，在与KDE交换更新会出现困难。其中一个原因，是苹果在对外公开源代码之前，以一年时间编修他们的KHTML。另外，苹果传送更新至KDE计划的方式，多是一口气把大量改动一起传送，KDE在整理资料也出现一定的困难，及后苹果表示会以CVS格式来传送。再者，苹果所作出的改动包括Mac OS X系统独有的事物，如Objective-C、KWQ等，在Linux及KHTML是没有的。但KDE方面仍透过这些改动，为KHTML加入新功能及加快其排版速度。 WebCore WebCore是苹果公司开发的排版引擎，它是在另外一个排版引擎\"KHTML\"的基础上而来的。苹果电脑于2002年采纳了KHTML，作为开发Safari浏览器之用，并发布所修改的最新及过去版本源代码。后来发表了开放源代码的WebCore及WebKit引擎，它们均是KHTML的衍生产品。使用WebCore的主要有Safari，此外还有OmniWeb、Shiira、Swift等。 WebKit WebKit是一个开源浏览器网页排版引擎，与之相应的引擎有Gecko（Mozilla，Firefox  等使用的排版引擎）和Trident（也称为MSHTML，IE 使用的排版引擎）。同时WebKit 也是苹果Mac OS X  系统引擎框架版本的名称，主要用于Safari，Dashboard，Mail 和其他一些Mac OS X 程序。WebKit 所包含的  WebCore 排版引擎和 JSCore 引擎来自于 KDE 的 KHTML 和 KJS，当年苹果比较了 Gecko 和 KHTML  后，仍然选择了后者，就因为它拥有清晰的源码结构、极快的渲染速度。 目前使用WebKit 引擎的浏览器主要有：Safari(apple出品)，Midori，chrome(google出品)等。2009年推出的safari和chrome使用的webkit引擎完全通过了acid3测试满分！ Konqueror Konqueror是 KDE 桌面系统的一部分，主要用于 Linux 和 BSD家族的操作系统。在微软的 Windows 系统下，也有零星使用，当然功能相对有限。Konqueror主要用于文件管理、浏览，以及网页浏览。Konqueror 按照 GPL 进行发布。 在给 Konqueror 命名上，其命名者跟其它的网页浏览器玩了个文字游戏：首先是 Navigator（意为航海家，网景公司的浏览器）、然后是 Explorer（意为探索者），接下来就是 Konqueror （Conqueror 的变体，意为征服者）啦；这里首字母取 K 是为了遵循 KDE 软件都以 K 打头的传统。","date":1297405436000,"updated":1586328684163,"size":3063},{"title":"育儿谣言 101 辟","slug":"rumors-raise-101","content":" 有焦虑的地方，就存在谣言。「伪经验」随着焦虑扑面而来。它们可能是亲朋好友好心「过时忠告」，也可能是商家虎视眈眈的圈套。 1. 孕期可以玩手机用微波炉电磁炉，这些都是非电离辐射，不会对人体产生伤害。 2. 在饮食均衡的前提下，孕期除了不要吃生食和烟酒，不用太忌口，咖啡和茶适量也 OK。 3. 胎教不会让宝宝变聪明，隔衣服肚皮和羊水，莫扎特的音乐传到宝宝耳朵里也只是嗡嗡噪音。 4. 酸儿辣女？肚子形状？清宫表？测测玩还可以，认真你就输了。 5. 无痛分娩最大的副作用是 贵，一辈子就生一两次娃，再贵也值。 6. 脐带血自己存就是白花钱，给公共脐血库，积德又省钱。 7. 胸小 ≠ 奶水少。乳房小只能说明乳房内脂肪量少，乳腺才是分泌乳汁的基地。 8. 鱼汤肉汤不下奶，满满脂肪还堵奶。想下奶，适当喝水多休息多亲喂就行了。 9. 坐月子更应该洗头洗澡，保持良好卫生避免感染。一个月不洗，老公都嫌弃。 10. 产后发汗不能排毒。产妇身体弱，发汗要钱还可能会要命。 11. 排残奶都是坑钱的套路，残奶是正常分泌，有问题找乳腺医生。 12. 喝凉水吃冷饮不会体寒。如果会，冬天吸入的都是冷空气，早就寒死了。 13. 哺乳期生病不用硬扛，遵医嘱可以用药。 14. 哺乳期不是安全期，必须要避孕，很多二胎就是这么来的。 15. 除了不能抽烟喝酒，哺乳期没有忌口，想烫头也行。 16. 喂奶不会导致胸下垂，罪魁祸首是变大的乳房和地心引力。 17. 黄连水不去胎毒，鹅蛋也不去。最重要的是，根本就没有什么胎毒。 18. 红枣红糖不补铁，吃多会长胖。 19. 月经期的奶水没有毒，母乳也不是血变的。 20. 初乳黄黄的不是「脏」，反而营养最丰富，挤掉就是浪费！ 21. 羊奶粉比牛奶粉好？说这话的人都是卖羊奶粉的。 22. 婴儿水是营销概念，干净的白开水是最好的奶粉伴侣。 23. 说 6 个月以后奶水没营养的人，不是蠢就是坏。母乳是宝宝最好的口粮。 24. 吃全蛋不必等到一岁后。蛋黄添加适应良好后就可以给宝宝添加蛋白。 25. 米汤占肚子还没营养，只有旧社会才会一个劲给娃喝米汤。 26. 6 个月内的婴儿不用喝水，喝多了占肚影响喝奶。 27. 孩子添加辅食之后就可以添加红肉、肝脏泥，补铁效果杠杠的。 28. 胡萝卜不是非要用油炒，和肉、奶一起吃也促进营养吸收。 29. 水果和蔬菜营养成分不同，不能代替蔬菜。 30. 果汁并没有比水果更营养，其中里最多的就是水和糖分，膳食纤维几乎为零。直接吃水果，有饱腹感，方便还不影响喝水习惯。 31. 孩子不吃盐不会没力气。1 岁以内添加盐会加重宝宝肾脏负担，还会变成重口味。 32. 配方奶不用喝到 3 岁，1 岁之后孩子就可以喝纯牛奶。 33. 土鸡蛋并不比洋鸡蛋更有营养，鹌鹑蛋、鸽子蛋也没有多金贵。 34. 健康孩子都不缺锌，不必要额外服用补剂。 35. 靠晒太阳补维生素 D，分分钟晒成非洲娃。直接吃维生素 D，省心。 36. 千滚水、隔夜水、阴阳水都能给孩子喝，别敞着盖儿掉灰就行。 37. 奶粉宝宝更白胖？母乳宝宝更健康？营养均衡，奶粉母乳都能养出健康宝宝。 38. 「儿童酱油」和一般酱油没区别，贵出的部分都是智商税。 39. 牙膏含氟没有毒，3 岁以下用米粒大小，3 岁以上用豌豆大小的牙膏，都是安全的。 40. 乳牙坏了疼 10 年，别不当回事。及时防龋，大人孩子少遭罪。 41. 过敏不是娇气，也不是多吃就能适应，给过敏的孩子喂过敏原食物就是在「下毒」。 42. 茵栀黄靠拉肚子去黄疸，折腾娃完全没必要！黄疸多吃多喂就能自己好。 43. 板蓝根不预防流感，醋熏只会闻到吐。每年接种流感疫苗，是预防流感性价比最高的方式。 44. 吹空调生病，多半是空气不流通、温度差太大，定时通风就好。 45. 雪梨煮水没什么神奇功效，缓解咳嗽的秘密在于补水，好处就是孩子爱喝。 46. 咳嗽不会咳成肺炎。咳嗽是症状不是病，肺炎可能会咳嗽，但咳嗽不会咳出肺炎。 47. 没有任何研究和临床实验表明，发热会「烧坏脑子」。 48. 发烧时冰敷，可能会让孩子更难受；退热贴也没啥用，不如吃退烧药。 49. 发烧不建议捂汗，容易造成捂热综合征，对小宝宝格外危险。 50. 不是所有的高热不退都是幼儿急疹。孩子精神不好，别扛着，赶紧去医院。 51. 热性惊厥不要掐人中、塞汤勺，让孩子趴着或侧卧，静静地抽一会儿。手机视频记录，清醒后赶紧去医院。 52. 娃几天不拉臭不一定是便秘。 53. 香蕉长得像粑粑，但治不了孩子便秘，多吃富含膳食纤维的水果更有效。 54. 小儿推拿不治病，生病还得上医院。 55. 擦母乳不能治湿疹，涂在宝宝脸上反而加重皮肤负担。 56. 益生菌不能包治百病，只有在急性水样腹泻和服用抗生素时被证实有效。 57. 生病多不是免疫力差！孩子秋冬一个月感冒 1～2 次都正常。 58. 孩子物品样样都消毒，反而容易降低免疫力。 59. 世上没有提高免疫力的药物，匹多莫德、脾氨肽、泛福舒都是智商税。 60. 号称提高免疫力的偏方和保健品也一样。 61. 自费疫苗，有钱就打，多接种、多一层保护。 62. 打完疫苗当天就可以洗澡，别着凉就行。 63. 孩子洗澡不是煮火锅，啥都不用加。有痱子保持干爽，有湿疹保持湿润。 64. 纸尿裤不会影响孩子生育，也不会导致 O 型腿。 65. 红屁股不是纸尿裤的错，是换得不够勤。 66. 孩子不怕冷但怕热，真的不要穿太多。 67. 婴儿末梢神经没有发育完全，手脚发凉很正常，判断冷暖要摸后背。 68. 孩子爱光脚就光脚，要不要光脚主要看孩子意愿。 69. 学步车速度快有危险，揠苗助长快丢掉！ 70. 1 岁以内不需要睡枕头，省省钱，别买了。 71. 99% 的孩子都不会缺钙。枕秃是蹭掉的，出汗多是热的，别什么都赖「缺钙」 。 72. 剃头、剪眉毛、剪睫毛，并不能让孩子毛发更浓密。如果有用，威廉王子就不会发愁了。 73. 早教课不能开发右脑潜能，带孩子上课玩玩行，别抱太大奢望。 74. 婴儿游泳不能激发早期潜能，只能激发老公的钱包潜能。 75. 宝宝头上的旋儿和智商没关系，智商是遗传以及后天培养决定的。 76. 同理，娃脑袋大小和智商也无关，大头儿子除外。 77. 吃核桃，香，但不能补脑。 78. 睡扁头不会影响智力，头型会变丑。 79. 宝宝趴着睡不会更聪明，1 岁内趴睡还可能有窒息风险，仰睡最安全。 80. 绑腿不能让宝宝的腿变直，还可能影响骨骼发育。 81. 枸杞不明目，不想孩子视力变差，每天保证 2 小时户外活动，让眼睛多休息，少看近处。 82. 早切包皮不会让「小弟弟」长更长，切包皮不是切菜，谨慎。 83. 喝豆浆如果会性早熟，世界上就没有 A 罩杯了；开小夜灯、和父母同睡也不会性早熟。 84. 孩子爱摸私处是自我身体探索，正常现象，同样和性早熟没关系。 85. 不要盲目相信「贵人语迟」，如果孩子语言发育迟缓，看医生才是最明智的。 86. 不睡午觉、晚上睡得晚对孩子身高影响不大，睡眠质量比时间重要。 87. 儿童骨密度检查缺乏参考标准，不能反映宝宝是否缺钙。 88. 孩子总会自己尿尿，把屎把尿没必要。 89. 白天睡觉可以拉窗帘。拉窗帘不影响帮宝宝建立符合昼夜节律的睡眠。 90. 安抚奶嘴不是洪水猛兽，适当使用没关系，但 1 岁后开始戒除，最好不要超过 2 岁。 91. 磨牙不代表肚子有蛔虫，大多数孩子的磨牙症在 6 岁以后逐渐消失。 92. 养得胖 ≠ 养得好，白胖不代表健康。太胖了孩子还不得使劲儿减肥？ 93. 宝宝照镜子不会做噩梦。谁还不爱臭美两下？ 94. 只要天气好，宝宝小也可以多带出门，家里宅着身体会更弱。 95. 内衣手洗，孩子其他衣服完全可以和大人衣服一起洗。当妈很累了，放过自己好吗？ 96. 别说女孩比男孩好养了，生男生女都不省心。 97. 也别说男孩穷养、女孩富养了，21 世纪，男女平等。 98. 允许孩子哭，比逗孩子笑更重要。 99. 剖腹产不比顺产轻松，奶粉喂养也同样辛苦，全职妈妈和职场妈妈都不容易，育儿没有鄙视链。 100. 说带孩子不上班很轻松的，要不没当妈，要不没带娃。 101. 带孩子不是妈妈一个人的责任，爸爸的参与也同样重要。","date":1545985337000,"updated":1586328684165,"size":3470},{"title":"常用的服务器日志分析命令","slug":"service-log-common-commands","content":" IP相关统计 统计IP访问量（独立ip访问数量） awk '{print $1}' nginx.log | sort -n | uniq | wc -l 查看某一时间段的IP访问量(4-5点) grep \"07/Apr/2017:0[4-5]\" nginx.log | awk '{print $1}' | sort | uniq -c| sort -nr | wc -l 查看访问最频繁的前100个IP awk '{print $1}' nginx.log | sort -n |uniq -c | sort -rn | head -n 100 查看访问100次以上的IP awk '{print $1}' nginx.log | sort -n |uniq -c |awk '{if($1 >100) print $0}'|sort -rn 查询某个IP的详细访问情况,按访问频率排序 grep '127.0.01' nginx.log |awk '{print $7}'|sort |uniq -c |sort -rn |head -n 100 页面访问统计 查看访问最频的页面(TOP100) awk '{print $7}' nginx.log | sort |uniq -c | sort -rn | head -n 100 查看访问最频的页面([排除php页面】(TOP100) grep -v \".php\"  nginx.log | awk '{print $7}' | sort |uniq -c | sort -rn | head -n 100 查看页面访问次数超过100次的页面 cat nginx.log | cut -d ' ' -f 7 | sort |uniq -c | awk '{if ($1 > 100) print $0}' | less 查看最近1000条记录，访问量最高的页面 tail -1000 nginx.log |awk '{print $7}'|sort|uniq -c|sort -nr|less  每秒请求量统计 统计每秒的请求数,top100的时间点(精确到秒) awk '{print $4}' nginx.log |cut -c 14-21|sort|uniq -c|sort -nr|head -n 100 每分钟请求量统计 统计每分钟的请求数,top100的时间点(精确到分钟) awk '{print $4}' nginx.log |cut -c 14-18|sort|uniq -c|sort -nr|head -n 100 每小时请求量统计 统计每小时的请求数,top100的时间点(精确到小时) awk '{print $4}' nginx.log |cut -c 14-15|sort|uniq -c|sort -nr|head -n 100 性能分析 在nginx log中最后一个字段加入$request_time 列出传输时间超过 3 秒的页面，显示前20条 cat nginx.log|awk '($NF > 3){print $7}'|sort -n|uniq -c|sort -nr|head -20 列出php页面请求时间超过3秒的页面，并统计其出现的次数，显示前100条 cat nginx.log|awk '($NF > 1 &&  $7~/\\.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100 蜘蛛抓取统计 统计蜘蛛抓取次数 grep 'Baiduspider' nginx.log |wc -l 统计蜘蛛抓取404的次数 grep 'Baiduspider' nginx.log |grep '404' | wc -l TCP连接统计 查看当前TCP连接数 netstat -tan | grep \"ESTABLISHED\" | grep \":80\" | wc -l 用tcpdump嗅探80端口的访问看看谁最高 tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F\".\" '{print $1\".\"$2\".\"$3\".\"$4}' | sort | uniq -c | sort -nr 常用维护命令 查看有多少个IP访问 awk '{print $1}' log_file|sort|uniq|wc -l wc -l 看看有多少行   查看某一个页面被访问的次数 grep \"/index.php\" log_file | wc -l 查看每一个IP访问了多少个页面 awk '{++S[$1]} END {for (a in S) print a,S[a]}' log_file > log.txt sort -n -t ' ' -k 2 log.txt 配合sort进一步排序   将每个IP访问的页面数进行从小到大排序 awk '{++S[$1]} END {for (a in S) print S[a],a}' log_file | sort -n 查看某一个IP访问了哪些页面 grep ^111.111.111.111 log_file| awk '{print $1,$7}' 去掉搜索引擎统计的页面 awk '{print $12,$1}' log_file | grep ^\\\"Mozilla | awk '{print $2}' |sort | uniq | wc -l   查看2015年8月16日14时这一个小时内有多少IP访问 awk '{print $4,$1}' log_file | grep 16/Aug/2015:14 | awk '{print $2}'| sort | uniq | wc -l   查看访问前十个ip地址 awk '{print $1}' |sort|uniq -c|sort -nr |head -10 access_log **uniq -c 相当于分组统计并把统计数放在最前面** cat access.log|awk '{print $1}'|sort|uniq -c|sort -nr|head -10 cat access.log|awk '{counts[$(11)]+=1}; END {for(url in counts) print counts[url], url}   访问次数最多的10个文件或页面 cat log_file|awk '{print $11}'|sort|uniq -c|sort -nr | head -10 awk '{print $1}' log_file |sort -n -r |uniq -c | sort -n -r | head -20 访问量最大的前20个ip   通过子域名访问次数，依据referer来计算，稍有不准 cat access.log | awk '{print $11}' | sed -e ' s/http:\\/\\///' -e ' s/\\/.*//' | sort | uniq -c | sort -rn | head -20 列出传输大小最大的几个文件 cat www.111cn.net |awk '($7~/\\.php/){print $10 \" \" $1 \" \" $4 \" \" $7}'|sort -nr|head -100 列出输出大于200000byte(约200kb)的页面以及对应页面发生次数 cat www.111cn.net |awk '($10 > 200000 && $7~/\\.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100 如果日志最后一列记录的是页面文件传输时间，则有列出到客户端最耗时的页面 cat www.111cn.net |awk '($7~/\\.php/){print $NF \" \" $1 \" \" $4 \" \" $7}'|sort -nr|head -100   列出最最耗时的页面(超过60秒的)的以及对应页面发生次数 cat www.111cn.net |awk '($NF > 60 && $7~/\\.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100   列出传输时间超过 30 秒的文件 cat www.111cn.net |awk '($NF > 30){print $7}'|sort -n|uniq -c|sort -nr|head -20   列出当前服务器每一进程运行的数量，倒序排列 ps -ef | awk -F ' ' '{print $8 \" \" $9}' |sort | uniq -c |sort -nr |head -20 查看apache当前并发访问数 对比httpd.conf中MaxClients的数字差距多少。 netstat -an | grep ESTABLISHED | wc -l   可以使用如下参数查看数据 ps -ef|grep httpd|wc -l 1388 统计httpd进程数，连个请求会启动一个进程，使用于Apache服务器。 #表示Apache能够处理1388个并发请求，这个值Apache可根据负载情况自动调整。 netstat -nat|grep -i \"80\"|wc -l   4341 netstat -an会打印系统当前网络链接状态，而grep -i \"80\"是用来提取与80端口有关的连接的，wc -l进行连接数统计。 #最终返回的数字就是当前所有80端口的请求总数。 netstat -na|grep ESTABLISHED|wc -l   376 netstat -an会打印系统当前网络链接状态，而grep ESTABLISHED 提取出已建立连接的信息。 然后wc -l统计。 最终返回的数字就是当前所有80端口的已建立连接的总数。 netstat -nat||grep ESTABLISHED|wc   可查看所有建立连接的详细记录   输出每个ip的连接数，以及总的各个状态的连接数 netstat -n | awk '/^tcp/ {n=split($(NF-1),array,\":\");if(n<=2)++S[array[(1)]];else++S[array[(4)]];++s[$NF];++N} END {for(a in S){printf(\"%-20s %s\\n\", a, S[a]);++I}printf(\"%-20s %s\\n\",\"TOTAL_IP\",I);for(a in s) printf(\"%-20s %s\\n\",a, s[a]);printf(\"%-20s %s\\n\",\"TOTAL_LINK\",N);}'   其他的收集 分析日志文件下 2012-05-04 访问页面最高 的前20个 URL 并排序 cat access.log |grep '04/May/2012'| awk '{print $11}'|sort|uniq -c|sort -nr|head -20  查询受访问页面的URL地址中 含有 www.abc.com 网址的 IP 地址 cat access_log | awk '($11~/\\www.abc.com/){print $1}'|sort|uniq -c|sort -nr  获取访问最高的10个IP地址 同时也可以按时间来查询 cat linewow-access.log|awk '{print $1}'|sort|uniq -c|sort -nr|head -10 时间段查询日志时间段的情况 cat log_file | egrep '15/Aug/2015|16/Aug/2015' |awk '{print $1}'|sort|uniq -c|sort -nr|head -10 分析2015/8/15 到 2015/8/16 访问\"/index.php?g=Member&m=Public&a=sendValidCode\"的IP倒序排列 cat log_file | egrep '15/Aug/2015|16/Aug/2015' | awk '{if($7 == \"/index.php?g=Member&m=Public&a=sendValidCode\") print $1,$7}'|sort|uniq -c|sort -nr  #($7~/.php/) $7里面包含.php的就输出,本句的意思是最耗时的一百个PHP页面 cat log_file |awk '($7~/\\.php/){print $NF \" \" $1 \" \" $4 \" \" $7}'|sort -nr|head -100   列出最最耗时的页面(超过60秒的)的以及对应页面发生次数 cat access.log |awk '($NF > 60 && $7~/\\.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100  统计网站流量（G) cat access.log |awk '{sum+=$10} END {print sum/1024/1024/1024}'   统计404的连接 awk '($9 ~/404/)' access.log | awk '{print $9,$7}' | sort   统计http status. cat access.log |awk '{counts[$(9)]+=1}; END {for(code in counts) print code, counts[code]}'  cat access.log |awk '{print $9}'|sort|uniq -c|sort -rn   每秒并发 watch \"awk '{if($9~/200|30|404/)COUNT[$4]++}END{for( a in COUNT) print a,COUNT[a]}' log_file|sort -k 2 -nr|head -n10\"   带宽统计 cat apache.log |awk '{if($7~/GET/) count++}END{print \"client_request=\"count}'  cat apache.log |awk '{BYTE+=$11}END{print \"client_kbyte_out=\"BYTE/1024\"KB\"}'   找出某天访问次数最多的10个IP cat /tmp/access.log | grep \"20/Mar/2011\" |awk '{print $3}'|sort |uniq -c|sort -nr|head 当天ip连接数最高的ip都在干些什么 cat access.log | grep \"10.0.21.17\" | awk '{print $8}' | sort | uniq -c | sort -nr | head -n 10   小时单位里ip连接数最多的10个时段 awk -vFS=\"[:]\" '{gsub(\"-.*\",\"\",$1);num[$2\" \"$1]++}END{for(i in num)print i,num[i]}' log_file | sort -n -k 3 -r | head -10 找出访问次数最多的几个分钟 awk '{print $1}' access.log | grep \"20/Mar/2011\" |cut -c 14-18|sort|uniq -c|sort -nr|head   取5分钟日志 if [ $DATE_MINUTE != $DATE_END_MINUTE ] ;then #则判断开始时间戳与结束时间戳是否相等START_LINE=sed -n \"/$DATE_MINUTE/=\" $APACHE_LOG|head -n1 #如果不相等，则取出开始时间戳的行号，与结束时间戳的行号   查看tcp的链接状态 netstat -nat |awk '{print $6}'|sort|uniq -c|sort -rn netstat -n | awk '/^tcp/ {++S[$NF]};END {for(a in S) print a, S[a]}' netstat -n | awk '/^tcp/ {++state[$NF]}; END {for(key in state) print key,\"\\t\",state[key]}' netstat -n | awk '/^tcp/ {++arr[$NF]};END {for(k in arr) print k,\"\\t\",arr[k]}' netstat -n |awk '/^tcp/ {print $NF}'|sort|uniq -c|sort -rn netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c netstat -ant|awk '/ip:80/{split($5,ip,\":\");++S[ip[1]]}END{for (a in S) print S[a],a}' |sort -n netstat -ant|awk '/:80/{split($5,ip,\":\");++S[ip[1]]}END{for (a in S) print S[a],a}' |sort -rn|head -n 10 awk 'BEGIN{printf (\"http_code\\tcount_num\\n\")}{COUNT[$10]++}END{for (a in COUNT) printf a\"\\t\\t\"COUNT[a]\"\\n\"}' 查找请求数前20个IP（常用于查找攻来源）： netstat -anlp|grep 80|grep tcp|awk '{print $5}'|awk -F: '{print $1}'|sort|uniq -c|sort -nr|head -n20  netstat -ant |awk '/:80/{split($5,ip,\":\");++A[ip[1]]}END{for(i in A) print A[i],i}' |sort -rn|head -n20   用tcpdump嗅探80端口的访问看看谁最高 tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F\".\" '{print $1\".\"$2\".\"$3\".\"$4}' | sort | uniq -c | sort -nr |head -20 查找较多time_wait连接 netstat -n|grep TIME_WAIT|awk '{print $5}'|sort|uniq -c|sort -rn|head -n20 找查较多的SYN连接 netstat -an | grep SYN | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -nr | more   根据端口列进程 netstat -ntlp | grep 80 | awk '{print $7}' | cut -d/ -f1   查看了连接数和当前的连接数 netstat -ant | grep $ip:80 | wc -l  netstat -ant | grep $ip:80 | grep EST | wc -l   查看IP访问次数 netstat -nat|grep \":80\"|awk '{print $5}' |awk -F: '{print $1}' | sort| uniq -c|sort -n   Linux命令分析当前的链接状况 netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'  watch \"netstat -n | awk '/^tcp/ {++S[\\$NF]} END {for(a in S) print a, S[a]}'\" 通过watch可以一直监控 - LAST_ACK 5 关闭一个TCP连接需要从两个方向上分别进行关闭，双方都是通过发送FIN来表示单方向数据的关闭，当通信双方发送了最后一个FIN的时候，发送方此时处于LAST_ACK状态，当发送方收到对方的确认（Fin的Ack确认）后才真正关闭整个TCP连接； - SYN_RECV 30 表示正在等待处理的请求数； - ESTABLISHED 1597 表示正常数据传输状态； - FIN_WAIT1 51 表示server端主动要求关闭tcp连接； - FIN_WAIT2 504 表示客户端中断连接； - TIME_WAIT 1057 表示处理完毕，等待超时结束的请求数；","date":1531283187000,"updated":1586328684166,"size":9974},{"title":"linux删除文件 输入/输出错误","slug":"rm-problem-input-output-error","content":" rm: 无法删除 \"xxxx\" 输入/输出错误 当 -l的时候发现文件信息都变成了\"???????? ????????? ? ? ?\" 解决办法 - 首先  -lh /目录查看 挂载磁盘，比如/dev/vda1 -  -w /dev/vda1   - 进去后再进入目录  /目录/.....，删除指定文件既可，此时不可用*通配符，必须是具体文件名","date":1535619121000,"updated":1586328684164,"size":333},{"title":"Shell if","slug":"shell-if","content":" 字符串判断 str1 = str2　　　　　　当两个串有相同内容、长度时为真  str1 != str2　　　　　 当串str1和str2不等时为真  -n str1　　　　　　　  当串的长度大于0时为真(串非空)  -z str1　　　　　　　  当串的长度为0时为真(空串)  str1　　　　　　　　   当串str1为非空时为真 数字的判断 int1 -eq int2　　　　两数相等为真  int1 -ne int2　　　　两数不等为真  int1 -gt int2　　　　int1大于int2为真  int1 -ge int2　　　　int1大于等于int2为真  int1 -lt int2　　　　int1小于int2为真  int1 -le int2　　　　int1小于等于int2为真 文件的判断 -r file　　　　　用户可读为真  -w file　　　　　用户可写为真  -x file　　　　　用户可执行为真  -f file　　　　　文件为正规文件为真  -d file　　　　　文件为目录为真  -c file　　　　　文件为字符特殊文件为真  -b file　　　　　文件为块特殊文件为真  -s file　　　　　文件大小非0时为真  -t file　　　　　当文件描述符(默认为1)指定的设备为终端时为真 复杂逻辑判断 -a 　 　　　　　 与  -o　　　　　　　 或  !　　　　　　　　非 ","date":1586328684167,"updated":1586328684167,"size":740},{"title":"关于apache的一些实用技巧","slug":"some-practical-tips-on-apache","content":" 原文地址: [http://www.petefreitag.com/item/505.cfm][0] 隐藏Apache的版本号 另外包括一些其他的信息 apache的默认设置公开了apache的版本号，操作系统，甚至还有已经安装了的apache组件。黑客们会利用这些信息更方便的去攻击你。并且，这些信息告诉了所有人：你的apache并没有经过配置 你可以在httpd.conf文件中，加上或者修改两条代码，隐藏信息。 ServerSignature Off ServerTokens Prod ServerSignature apache生成的一些页面底部,比如404页面,文件列表页面等等。 ServerTokens指向被用来设置Server的http头回响。设置为Prod可以让HTTP头回响显示成这样.... Server: Apache 如果是个超级偏执狂，你可以修改源代码或者使用mod_security，来显示比Apache更多的东西. 确定运行apache的用户组 很多apache安装之后他们是运行在nobody之下的。所以,每个运行在nobody之下的apache，将会被同组的邮件服务器攻击。所以 chown -R apache.apache /webserver/apache2/ 编辑httpd.conf User apache Group apache 确认根目录的东西是关闭的 我们不希望apache有修改根目录的权限。 所以，建议你所有的网站都放在一个目录下面(我们称为/web，你可以象这样设置: Order Deny,Allow Deny from all Options None AllowOverride None 由于设置了Options None 和AllowOverride None，这将关闭options权限和覆盖权限，你现在必须为每个文件夹加上独立的配置，为他们恢复Option和Override权限。 Order Allow,Deny Allow from all 关闭文件夹浏览 你可以在httpd.conf的Directory标签中间加上一个Options指令。 设置Options为None或者-Indexes Options -Indexes 关闭服务器的side includes 也要添加一条Optoions指令到Directory 标签中, 使Options 为 None或者-Includes Options -Includes 关掉CGI 如果你不用CGI,那就在Directory标签中加上一条Options指令关掉他。 使Options为None或者-ExecCGI Options -ExecCGI 禁用伪链接 只允许访问真实的地址 也是在directory中修改Options 为 -FollowSymLinks Options -FollowSymLinks 关闭多选项 关闭所有选项 Options None 关闭几个选项 Options -ExecCGI -FollowSymLinks -Indexes 关闭 .htaccess 文件的支持 也在Directory标签中，但是AllowOverride指令 AllowOverride none 如果你需要Overrides，需要确认他们不能被下载。改变他们的文件名，而不是原来的.htaccess, 比如可以改为.httpdoveride, 或者屏蔽所有的.ht开头的文件。 AccessFileName .httpdoverride Order allow,deny Deny from all Satisfy All 运行 mod_security mod_security 是一个非常好用的Apache组件. 通过mod_security你可以达到以下效果: 1. 简单的过滤 2. 正则表达式过滤 3. URL 编码验证 4. Unicode编码验证 5. 核查 6. Null值攻击预防 7. 上传大小限制 8. 服务器身份掩藏 9. 内置Chroot支持 关掉一些不需要的组件 去[module documentation][1] 看一下你到底需要哪些组件. 好多时候你会发现，你并不需要...。 一行一行去查找你的httpd.conf里是否包含LoadModule, 可以用\\#放在行首去关闭组件。 如果象搜索组件，可以运行: grep LoadModule httpd.conf 这里有些组件常常打开的，但是不需要。 mod_imap,mod_include,mod_info,mod_userdir,mod_status,mod0cgi,mod-autoindex. 限制目录权限 root有阅读apache配置文件和bin文件的权限。 chown -R root:root /usr/local/webserver/apache2 chmod -R o-rwx /usr/local/webserver/apache2 减少Timeout值 默认设置timeout指令是300秒。 你可以减小他，以预防一些潜在攻击。 Timeout 45 减小最大请求 apache有很多指令来减小请求数，一个很好的指令是LimitRequestBody指令。 这条指令默认设置是无限的。 如果你想设置上传文件不能超过1MB， 你可以这样写: LimitRequestBody 1048567 如果不允许问文件上传。你可以设得更小。 其他得指令，可以看看LimitRequestFields,LimitrequestFieldSize , LimitRequestLine. 这些指令都是默认设置。但是你必须去优化他们，成为你需要的。 可以看看这个[文档][2] 限制XML body区的大小 如果你运行了mod_dav,你会希望限制XML 请求的body大小。 LimitXMLRequestBody指令只有在Apache2中有。 并且他的默认值是1个millon字节大小，大约1M, 很多教材上说这里设置为0比较好，这就意味着多大的文件都可以上传，如果你需要上传大文件的话。 但是如果你简单的改变一下控制。 你可以大概的设置成10MB LimitXMLRequestBody 10485760 限制并发 apache有些设置可以限制并发请求。MaxClients就是服务器能承受的最大用户值。 其他的指令比如MaxSpareServers，MaxRequestsPerChild, Apache2上的 ThreadsPerChild,ServerLimit,和MaxSpareThreads 和你的系统硬件配置的配合都是很重要的。 IP限制地址段 如果你有一些资源只能给特定的网段使用...176。16.0.0--176.16.0.16 Order Deny,Allow deny from all Allow from 176.16.0.0/16 或者也可以限定单一IP Order Deny,Allow Deny from all Allow from 127.0.0.1 调整KeepAlive(永久保持)设置 MaxKeepAliveRequests --> 100  (你需要的数) KeepAliveTimeout --> 15  (你需要的数) 在Chroot环境运行apache chroot allows you to run a program in its own isolated jail. This prevents a break in on one service from being able to effect anything else on the server. It can be fairly tricky to set this up using chroot due to library dependencies. I mentioned above that the mod_security module has built in chroot support. It makes the process as simple as adding a mod_security directive to your configuration: SecChrootDir /chroot/apache There are however some caveats however, so check out the docs for more info. [0]: http://www.petefreitag.com/item/505.cfm [1]: http://httpd.apache.org/docs/2.0/mod/ [2]: http://httpd.apache.org/docs/2.0/mod/core.html","date":1277712241000,"updated":1586328684167,"size":4565},{"title":"最近玩 Vue 的心得和收集的一些技巧","slug":"some-tips-for-using-vue","content":" 动态组件的强制数据渲染 **dynamic component vue force re-render** 问题：切换组件时re-render，变数据时却不 解决：表明唯一身份，加个 :key 参数 <component ... :key=\"{MyMethod()}\"></component> MyMethod(){     return +new Date } PS：**$forceUpdate是没用的，因为根本没有更新props** [https://cn.vuejs.org/v2/guide/list.html#key]() 生命周期 [Vue Parent and Child lifecycle hooks](https://medium.com/@brockreece/vue-parent-and-child-lifecycle-hooks-5d6236bd561f) ![](http://static.0.codante.org/e/3/e3c6e4b2a540c0ce4833c14c4f275804892ffa8b.png) 这图很有用 ![](http://static.0.codante.org/a/f/af4260b93777258e321ce7a2ca1d288e2f9e3e3c.png)","date":1546570925000,"updated":1586328684168,"size":689},{"title":"SVN安装及配置流程","slug":"svn-install-and-configuration","content":" 卸载系统自带的svn rpm -e --allmatches subversion 安装apr wget http://apache.mirror.phpchina.com/apr/apr-1.3.5.tar.gz ./configure make make install 安装apr-util wget http://apache.mirror.phpchina.com/apr/apr-util-1.3.7.tar.gz ./configure --with-apr=/usr/local/apr make make install 安装subversion wget http://subversion.tigris.org/downloads/subversion-1.4.5.tar.gz ./configure \\ --with-apxs=/usr/local/webserver/apache_web_001/bin/apxs \\ --prefix=/usr/local/subversion \\ --with-apr=/usr/local/apr/bin/apr-1-config \\ --with-apr-util=/usr/local/apr/bin/apu-1-config \\ --with-ssl \\ --with-zlib \\ --enable-maintainer-mode \\ --bindir=/usr/bin/ LDFLAGS=\"-L/usr/lib64 -L/lib64\" make make install * 如果使用的是64位系统，一定要加上这句 **- -bindir=/usr/bin/ LDFLAGS=\"-L/usr/lib64 -L/lib64\"** 安装apache wget http://apache.etoak.com/httpd/httpd-2.2.11.tar.gz ./configure \\ --prefix=/usr/local/webserver/apache_svn \\ --enable-dav \\ --enable-modules=so \\ --enable-maintainer-mode --enable-rewrite \\ --with-apr=/usr/local/apr/bin/apr-1-config \\ --with-apr-util=/usr/local/apr/bin/apu-1-config make make install * 一定要加上 **- -enable-dav**，后面配置svn的时候会用到 [更多关于apache的安装及配置][0] 配置 修改httpd.conf 添加以下信息 LoadModule dav_svn_module modules/mod_dav_svn.so LoadModule authz_svn_module modules/mod_authz_svn.so 在末尾添加 <Location /svn>   DAV svn   SVNParentPath /home/nuptsoft/subversion_project  (此处配置你的版本库根目录)   AuthType Basic   AuthName \"Subversion repository\"  （此处字符串内容修改为提示对话框标题）   AuthUserFile /home/nuptsoft/passwd    (此处修改为访问版本库用户的文件，用apache 的 htpasswd命令生成)   AuthzSVNAccessFile /home/nuptsoft/auth （此处修改为访问版本库权限的文件）   Require valid-user </Location> 创建版本库目录 svnadmin create /home/nuptsoft/subversion_project/test 添加用户和密码 运行apache的htpasswd /usr/local/webserver/apache_svn/bin/htpasswd -cm /home/nuptsoft/passwd admin /usr/local/webserver/apache_svn/bin/htpasswd -m /home/nuptsoft/passwd somebody 第一次执行要加参数 **c** 来建立文件 svn项目权限分配 通过修改auth文件来配置权限 用户组格式： [groups] <用户组名> = <用户1>,<用户2> 其中，1个用户组可以包含1个或多个用户，用户间以逗号分隔。 版本库目录格式： [<版本库>:/项目/目录] @<用户组名> = <权限> <用户名> = <权限> 其中，方框号内部分可以有多种写法: /,表示根目录及以下。根目录是svnserve启动时指定的，我们指定为/opt/svndata。这样，/就是表示对全部版本库设置权限。 repos1:/,表示对版本库1设置权限 repos2:/abc, ,表示对版本库2中的abc项目设置权限 repos2:/abc/aaa, ,表示对版本库2中的abc项目的aaa目录设置权限 权限主体可以是用户组、用户或*，用户组在前面加@，*表示全部用户。权限可以是w、r、wr和空，空表示没有任何权限。 示例： [groups] admin = alan [/] @admin = rw [repos1:/abc/aaa] somebody = rw [repos2:/pass] somebody = 附1：与CVS对比 在SVN之前，CVS是使用最广泛的版本管理软件。SVN与CVS对比的优点如下： * 统一的版本号。CVS是对每个文件顺序编排版本号，在某一时间各文件的版本号各不相同。而Subversion下，任何一次提交都会对所有文件增加到同一 个新版本号，即使是提交并不涉及的文件。所以，各文件在某任意时间的版本号是相同的。版本号相同的文件构成软件的一个版本。 * 原子提交。一次提交不管是单个还是多个文件，都是作为一个整体提交的。在这当中发生的意外例如传输中断，不会引起数据库的不完整和数据损坏。 * 重命名、复制、删除文件等动作都保存在版本历史记录当中。 * 对于二进制文件，使用了节省空间的保存方法。（简单的理解，就是只保存和上一版本不同之处） * 目录也有版本历史。整个目录树可以被移动或者复制，操作很简单，而且能够保留全部版本记录。 * 分支的开销非常小。 * 优化过的数据库访问，使得一些操作不必访问数据库就可以做到。这样减少了很多不必要的和数据库主机之间的网络流量。 附2：SVN的发展历史 早在2000年，CollabNet, Inc.就开始召集开发人员开发CVS的替代品。CollabNet 提供一套名为SourceCast协同工作套件，其中的一部分组件是版本控制。 虽然SourceCast使用CVS作为其最初的版本控制系统，但是CVS的种种限制从一开始就处处可见，最后CollabNet明白必须要找到一个更好 的解决方案。不幸的是，至少在免费license中，因为没有更好的选择，CVS已经广泛成为了开源世界中事实上的标准。所以CollabNet决定开发 一个新的版本控制系统，保留CVS的基本特性但去除CVS的bug和不好的特性。 在2000年2月，他们联系《使用CVS开发开源项目》（Open Source Development with CVS）(Coriolis, 1999)的作者Karl Fogel，并征求了他是否愿意在这个新的项目中担任一个角色。巧合的是，当时Karl已经和他的朋友Jim Blandy讨论了一个关于新的版本控制系统的设计。在1995年，这两人就成立了Cyclic Software，一个提供CVS的商业支持的软件公司。虽然他们经营商业服务，但是仍然在每天都在工作中使用CVS。使用CVS的挫折感使得Jim认真 思考更好的方法来管理数据，不但确定名字为\"Subversion\"，而且完成了Subversion档案库的基础设计。 当CollabNet的电话到来时，Karl立即答应了加入项目中，而且Jim让他的雇主 RedHat Software同意让他在这个项目中不定期工作。CollabNet雇用了Karl和Ben Collins-Sussman，并在5月开始了详细设计工作。在得到了来自CollabNet的Brian Behlendorf、Jason Robbins和Greg Stein（当时是一名活跃在WebDAV/DeltaV规范过程的自由程序员）很多创意的帮助下，Subversion很快地引起了一个活跃开发者社区 的注意。它找出并欢迎很多同样在CVS上受到挫折的社员能来为这个项目做点什么。 Subversion 最初的设计Team定下了几个简单的目标。 它必须在功能上可取代 CVS，也就是说, 所有 CVS 可做到的事, 它都要能够作到。 在修正最明显的瑕疵的同时, 还要保留相同的开发模式。 还有, Subversion 应该要和 CVS 很相像, 任何 CVS 使用者只要花费少许的力气, 就可以很快地上手。 经过十四个月的编码后, Subversion 于2001年8月31日开始实现 \"自行管理\"。 也就是说, 开发人员不再使用 CVS 来管理 Subversion 的代码, 而以 Subversion 自己来管理。 [0]: /blog/2010/06/23/apache-install-and-configuration.html","date":1277172550000,"updated":1586328684169,"size":4700},{"title":"什么是UI?","slug":"what-is-ui","content":" UI的本意是用户界面，是英文User和interface的缩写。从字面上看是用户与界面2个组成部分，但实际上还包括用户与界面之间的交互关系，所以这样可分为3个方向，他们分别是：用户研究、交互设计、界面设计。 用户研究 用户研究包含两个方面：一是可用性工程学（usability Engineering），研究如何提高产品的可用性，使得系统的设计更容易被人使用、学习和记忆；二是通过可用性工程学的研究，发掘用户的潜在需求，为 技术创新提供另外一条思路和方法（consumer insight）。所以有：Usability is all about making things easier to use so people can focus more on the work and less on the tools that help them do the work. 用户研究是一个跨学科的专业，涉及可用性工程学、人类功效学、心理学、市场研究学、教育学、设计学等学科。用户研究技术是站在人文学科的角度来研究产品，站在用户的角度介入到产品的开发和设计中。 用户研究通过对于用户的工作环境、产品的使用习惯等研究，使得在产品开发的前期能够把用户对于产品功能的期望、对设计和外观方面的要求融入到产品的开发过程中去，从而帮助企业完善产品设计或者探索一个新产品概念。 他是得到用户需求和反馈的途径，也是检验界面与交互设计是否合理的重要标准。 交互设计 这部分指人与机之间的交互工程，在过去交互设计也由程序员来做，其实程序员擅长编码，而不善于与最终用户交互。所以，很多的软件虽然功能比较齐全，但是交 互方面设计很粗糙，繁琐难用，学习困难。使用这样的软件后，不是使人聪明与进步而是让人感到愚弄与羞辱。许多人因为不能操作电脑软件而下岗失业，这样的交 互使电脑成为让人恐惧的科技怪兽。于是我们把交互设计从程序员的工作中分离出来单独成为一个学科，也就是人机交互设计。他的目的在于加强软件的易用、易 学、易理解，使计算机真正成为方便地为人类服务的工具。 界面设计 在漫长的软件发展中，界面设计工作一直没有被重视起来。做界面设计的人也被贬义的称为\"美工\"。其实软件界面设计就像工业产品中的工业造型设计一样，是产 品的重要买点。一个友好美观的界面会给人带来舒适的视觉享受，拉近人与电脑的距离，为商家创造卖点。界面设计不是单纯的美术绘画，他需要定位使用者、使用 环境、使用方式并且为最终用户而设计，是纯粹的科学性的艺术设计。检验一个界面的标准即不是某个项目开发组领导的意见也不是项目成员投票的结果，而是最终 用户的感受。所以界面设计要和用户研究紧密结合，是一个不断为最终用户设计满意视觉效果的过程。","date":1279271041000,"updated":1586328684171,"size":1251},{"title":"tar命令不完全总结","slug":"tar-command-not-fully-sum-up","content":" 感谢老男孩赐予的知识。 老男孩（QQ:49000448， mail:49000448@qq.com） 常用选项 -z, --gzip, --ungzip #filter the archive through gzip||调用gzip来压缩归档文件，与-x联用时调用gzip完成解压缩 -c, --create #create a new archive ||建立新的归档文件 -v, --verbose #verbosely list files processed||处理过程中输出相关信息 -f, --file [HOSTNAME:]F #use archive file or device F (default \"-\", meaning stdin/stdout)||对普通文件操作 -x, --extract, --get #extract files from an archive||从归档文件中解出文件 -j, --bzip2 #filter archive through bzip2, use to decompress .bz2 files||用GNU的bzip2压缩文件或解压 -C, --directory DIR #change to directory DIR --exclude PATTERN #exclude files based upon PATTERN -X, --exclude-from FILE #exclude files listed in FILE -Z, --compress, --uncompress #filter the archive through compress||调用compress来压缩归档文件，与-x联用时调用compress完成解压缩 -N, --after-date DATE, --newer DATE #only store files newer than DATE 举例 不同方法对应不同的解压方式 方法1 (tar.gz) #打包 tar zcvf test.tar.gz ./test #解压 tar zxvf test.tar.gz 方法2 (tar.bz) #打包 tar jcvf test.tar.bz ./test #解压 tar jxvf test.tar.bz 错误的例子 命令必须对应相应的包，否则无法解压。 tar zxvf test.tar.bz 报错： gzip: stdin: not in gzip format tar: Child returned status 1 tar: Error exit delayed from previous error tar jxvf test.tar.gz 报错： bzip2: (stdin) is not a bzip2 file. tar: Child returned status 2 tar: Error exit delayed from previous errors 指定解压路径(参数 -C) tar jxvf test.tar.bz -C /home/rhy/ tar zxvf test.tar.gz -C /home/rhy/ 排除式打包(参数 -X) #man tar: --exclude PATTERN #exclude files based upon PATTERN -X, --exclude-from FILE #exclude files listed in FILE 测试准备 cd / mkdir -p /test/baoliu mkdir -p /test/paichu touch exceptlist;echo \"paichu\"&gt;exceptlist 测试开始 **--exclude** 参数 cd / tar zcvf  paichu.tar.gz ./test --exclude=test/paichu ./test/ ./test/baoliu/ **-X** 参数 cd / cat exceptlist paichu tar zcvfX paichuX.tar.gz /exceptlist ./test ./test/ ./test/baoliu/ 增量备份(参数 -N) #自00点以来的新文件。 tar -N $(date -d yesterday +%F) zcvf a.tar.gz ./a #自2009-09-26以来的新文件 tar -N 2009-09-26 zcvf a.tar.gz ./a ","date":1277869284000,"updated":1586328684170,"size":2557},{"title":"各种颜色所代表的含义","slug":"the-meaning-of-the-various-colors","content":" 颜色 红色 Red 红色是热烈、冲动、强有力的色彩，它能使肌肉的机能和血液循环加快。由于红色容易引起注意，所以在各种媒体中也被广泛的利用，除了具有较佳的明视效果之外，更被用来传达有活力，积极，热诚，温暖，前进等涵义的企业形象与精神，另外红色也常用来作为警告，危险，禁止，防火等标示用色，人们在一些场合或物品上，看到红色标示时，常不必仔细看内容，及能了解警告危险之意，在工业安全用色中，红色即是警告，危险，禁止，防火的指定色。 大红色一般用来醒目，如红旗、万绿丛中一点红；浅红色一般较为温柔、幼嫩，如：新房的布置、孩童的衣饰等；深红色一般可以作衬托，有比较深沉热烈的感觉。 红色与浅黄色最为匹配，大红色与绿色、橙色、蓝色（尤其是深一点的蓝色）相斥，与奶黄色、灰色为中性搭配。 橙色 Orange 橙色是欢快活泼的光辉色彩，是暖色系中最温暖的色，它使人联想到金色的秋天，丰硕的果实，是一种富足、快乐而幸福的颜色。橙色稍稍混入黑色或白色，会变成一种稳重、含蓄又明快的暖色，但混入较多的黑色，就成为一种烧焦的色；橙色中加入较多的白色会带来一种甜腻的感觉。 橙色明视度高，在工业安全用色中，橙色即是警戒色，如火车头，登山服装，背包，救生衣等，橙色一般可作为喜庆的颜色，同时也可作富贵色，如皇宫里的许多装饰。橙色可作餐厅的布置色，据说在餐厅里多用橙色可以增加食欲。 橙色与浅绿色和浅蓝色相配，可以构成最响亮、最欢乐的色彩。橙色与淡黄色相配有一种很舒服的过渡感。橙色一般不能与紫色或深蓝色相配，这将给人一种不干净、晦涩的感觉。由于橙色非常明亮刺眼，有时会使人有负面低俗的意象，这种状况尤其容易发生在服饰的运用上，所以在运用橙色时，要注意选择搭配的色彩和表现方式，才能把橙色明亮活泼具有口感的特性发挥出来。 黄色 Yellow 黄色的灿烂、辉煌，有着太阳般的光辉，象征着照亮黑暗的智慧之光。黄色有着金色的光芒，有象征着财富和权利，它是骄傲的色彩。在工业用色上，黄色常用来警告危险或提醒注意，如交通标志上的黄灯，工程用的大型机器，学生用雨衣，雨鞋等，都使用黄色。黄色在黑色和紫色的衬托下可以达到力量的无限扩大，淡淡的粉红色也可以像少女一样将黄色这骄傲的王子征服。黄色与绿色相配，显得很有朝气，有活力；黄色与蓝色相配，显得美丽、清新；淡黄色与深黄色相配显得最为高雅。 淡黄色几乎能与所有的颜色相配，但如果要醒目，不能放在其它的浅色上，尤其是白色，因为它将是你什么也看不见。深黄色一般不能与深红色及深紫色相配，也不适合与黑色相配，因为它会使人感到晦涩和垃圾箱的感觉。 绿色 Green 在商业设计中，绿色所传达的清爽，理想，希望，生长的意象，符合了服务业，卫生保健业的诉求，在工厂中为了避免*作时眼睛疲劳，许多工作的机械也是采用绿色，一般的医疗机构场所，也常采用绿色来作空间色彩规划即标示医疗用品。 鲜艳的绿色是一种非常美丽、优雅的颜色，它生机勃勃，象征着生命。绿色宽容、大度，几乎能容纳所有的颜色。绿色的用途极为广阔，无论是童年、青年、中年、还是老年，使用绿色决不失其活泼、大方。在各种绘画、装饰中都离不开绿色，绿色还可以作为一种休闲的颜色。 绿色中渗入黄色为黄绿色，它单纯、年轻；绿色中渗入蓝色为蓝绿色，它清秀、豁达。含灰的绿色，仍是一种宁静、平和的色彩，就像暮色中的森林或晨雾中的田野。深绿色和浅绿色相配有一种和谐、安宁的感觉；绿色与白色相配，显得很年轻；浅绿色与黑色相配，显得美丽、大方。绿色与浅红色相配，象征着春天的到来。但深绿色一般不与深红色及紫红色相配，那样会有杂乱、不洁之感。 蓝色 Blue 蓝色是博大的色彩，天空和大海这辽阔的景色都呈蔚蓝色。蓝色是永恒的象征，它是最冷的色彩。纯净的蓝色表现出一种美丽、文静、 理智、安祥与洁净。 由于蓝色沉稳的特性，具有理智，准确的意象，在商业设计中，强调科技，效率的商品或企业形象，大多选用蓝色当标准色，企业色，如电脑，汽车，影印机，摄影器材等等，另外蓝色也代表忧郁，这是受了西方文化的影响，这个意象也运用在文学作品或感性诉求的商业设计中。 蓝色的用途很广，蓝色可以安定情绪，天蓝色可用作医院、卫生设备的装饰，或者夏日的衣饰、窗帘等。在一般的绘画及各类饰品也决离不开蓝色。 不同的蓝色与白色相配，表现出明朗、清爽与洁净；蓝色与黄色相配，对比度大，较为明快；大块的蓝色一般不与绿色相配，它们只能互相渗入，变成蓝绿色、湖蓝色或青色，这也是令人陶醉的颜色；浅绿色与黑色相配，显得庄重、老成、有修养。深蓝色不能与深红色、紫红色、深棕色与黑色相配，因为这样既无对比度，也无明快度，只有一种赃兮兮、乱糟糟的感觉。 紫色 purple 由于具有强烈的女性化性格，在商业设计用色中，紫色也受到相当的限制，除了和女性有关的商品或企业形象之外，其他类的设计不常采用为主色。 紫色是波长最短的可见光波。紫色是非知觉的色，它美丽而又神秘，给人深刻的印象，它既富有威胁性，又富有鼓舞性。紫色是象征虔诚的色相，当光明与理解照亮了蒙昧的虔诚之色时，优美可爱的晕色就会使人心醉！ 用紫色表现孤独与献身，用紫红色表现神圣的爱与精神的统辖领域，这就是紫色带来的表现价值。 紫色处于冷暖之间游离不定的状态，加上它的低明度性质，构成了这一色彩心理上的消极感。与黄色不同，紫色不能容纳许多色彩，但它可以容纳许多淡化的层次，一个暗的纯紫色只要加入少量的白色，就会成为一种十分优美、柔和的色彩。随着白色的不断加入，产生出许多层次的淡紫色，而每一层次的淡紫色，都显得那样柔美、动人。 褐色 brown 褐色通常用来表现原始材料的质感，如麻，木材，竹片，软木等，或用来传达某些饮品原料的色泽即味感，如咖啡，茶，麦类等，或强调格调古典优雅的企业或商品形象。 白色 white 白色具有高级，科技的意象，通常需和其他色彩搭配使用，纯白色会带给别人寒冷，严峻的感觉，所以在使用白色时，都会掺一些其他的色彩，如象牙白，米白，乳白，苹果白，在生活用品，服饰用色上，白色是永远流行的主要色，可以和任何颜色作搭配。 黑色 Black 黑色具有高贵，稳重，科技的意象，许多科技产品的用色，如电视，跑车，摄影机，音响，仪器的色彩，大多采用黑色，在其他方面，黑色的庄严的意象，也常用在一些特殊场合的空间设计，生活用品和服饰设计大多利用黑色来塑造高贵的形象，也是一种永远流行的主要颜色，适合和许多色彩作搭配。 灰色 Gray 灰色具有柔和，高雅的意象，而且属于中间性格，男女皆能接受，所以灰色也是永远流行的主要颜色，在许多的高科技产品，尤其是和金属材料有关的，几乎都采用灰色来传达高级，科技的形象，使用灰色时，大多利用不同的层次变化组合或他配其他色彩，才不会过单一，沉闷，而有呆板，僵硬的感觉。 黑色与白色是对色彩的最后抽象，代表色彩世界的阴极和阳极。太极图案就是以黑、白两色的循环形式来表现宇宙永恒的运动的。黑色意味着空无，像太阳的毁灭，像永恒的沉默，没有未来，失去希望。而白色的沉默是有无穷的可能。黑白两色是极端对立的色，它们又总是以对方的存在显示自身的力量。它们似乎是整个色彩世界的主宰。 在色彩体系中灰色恐怕是最被动的色彩了，它是彻底的中性色，依靠邻近的色彩获得生命。灰色意味着一切色彩对比的消失，是视觉最安稳的休息点。然而，人眼不能长久地、无限地注视着灰色，因为无休止的休息意味着死亡。 **黑、白、灰在色彩配色中占有相当主要的地位，它们活跃在各种配色中，最大限度地改变对方的明度、亮度与色相，产生出多层次、多品种的优美色彩，因此它们是决不可忽视的无彩色。** 总结 将上面的描述进行归纳与总结 * 红色： 兴奋、精力、热情、欲望、速度、力量、热爱、侵略 * 黄色： 享受、幸福、乐观、理想主义、想象力、希望、阳光、夏天、哲学 * 蓝色： 和平、平静、稳定性、和谐、统一、信任、真相、信心 * 桔色： 精力、平衡、温暖、热情、颤动、率直、火焰、注意、要求 * 绿色： 自然、环境、健康、好运气、更新、青春、努力、春天、慷慨、富饶 * 紫色： 灵性、高贵、仪式、神秘、转变、智慧、启发、残酷 * 灰色： 安全、可靠性、智力、固定、谦逊、尊严、成熟、团体、保守、实际 * 褐色： 土、炉床、家、户外、可靠性、安逸、耐力、稳定性、简洁 * 白色： 尊敬、纯净、简洁、清洁、和平、谦卑、精密、清白、青春、出生 * 黑色： 力量、精深、正式、优雅、财富、谜、害怕、魔鬼、匿名","date":1285384555000,"updated":1586328684171,"size":4050},{"title":"xdebug安装及配置","slug":"xdebug-installation-and-configuration","content":" 下载 wget http://www.xdebug.org/files/xdebug-2.1.1.tgz 安装 cd xdebug-2.1.1 #创建configure /servers/app/php/bin/phpize ./configure --enable-xdebug --with-php-config=/servers/app/php/bin/php-config make make install 配置 xdebug必须用zend_extension加载 编辑php.ini文件，在最末位添加上： zend_extension=/servers/app/php/lib/php/extensions/no-debug-non-zts-20090626/xdebug.so 必须写绝对路径！觉得长的话自己去ln个短的，具体怎么部署这里就不多说了。 **Zend Optimizer和xdebug不兼容，如果已经安装了Zend Optimizer，先注释掉吧。** 附录 关于xdebug配置的一些说明 ;xdebug配置 [Xdebug] ;开启自动跟踪 xdebug.auto_trace = On ;开启异常跟踪 xdebug.show_exception_trace = On ;开启远程调试自动启动 xdebug.remote_autostart = On ;开启远程调试 xdebug.remote_enable = On ;收集变量 xdebug.collect_vars = On ;收集返回值 xdebug.collect_return = On ;收集参数 xdebug.collect_params = On ","date":1303899388000,"updated":1586328684172,"size":1186},{"title":"yum使用说明","slug":"yum-man","content":" 在Centos中yum安装和卸载软件的使用方法 安装 单一软件 yum -y install httpd 多个类似软件 yum -y install httpd* 多个非类似软件 yum -y install httpd php php-gd mysql 卸载 单一软件 yum -y remove httpd 多个相类似软件 yum -y remove httpd* 多个非类似软件 yum -y remove httpd php php-gd mysql yum search 假如我要执行iostat这个命令来查看CPU与存储设备状态，可是执行却发现没有这个命令，于是执行yum install iostat，结果说找不到该软件，使用下面的办法可以解决 yum search iostat 就能查到和iostat相关的安装包了。 另外想安装一个程序，只记得一部分名称，也可以用这个办法来实现安装 yum search png |grep png 就能找到我们想安装的libpng这个名称。","date":1341993037000,"updated":1586328684173,"size":987},{"title":"Zend Grard 安装及配置","slug":"zend-guard-installation","content":" 下载Zend Guard cd /home wget http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz    #32位 wget http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz  #64位 安装Zend Guard mkdir /usr/zend       #建立Zend Guard安装目录 tar xvfz ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz    #解压安装文件 cp ZendGuardLoader-php-5.3-linux-glibc23-i386/php-5.3.x/ZendGuardLoader.so /usr/zend/   #拷贝文件到安装目录        配置Zend Guard cp /etc/php.ini    /etc/php.inibak   #修改之前先备份 vi /etc/php.ini    #编辑文件 在最后位置添加以下内容 [Zend Guard] zend_extension=/usr/zend/ZendGuardLoader.so zend_loader.enable=1 zend_loader.disable_licensing=0 zend_loader.obfuscation_level_support=3 重启php-fpm","date":1586328684173,"updated":1586328684174,"size":821},{"title":"常用英语1000句","slug":"commonly-used-in-english-1000","content":" - I see. 我明白了。 - I quit! 我不干了!  - Let go! 放手!  - Me too. 我也是。 - My god! 天哪!  - No way! 不行!  - Come on. 来吧(赶快) - Hold on. 等一等。 - I agree. 我同意。 - Not bad. 还不错。 - Not yet. 还没。 - See you. 再见。 - Shut up! 闭嘴!  - So long. 再见。 - Why not? 好呀! (为什么不呢?) - Allow me. 让我来。 - Be quiet! 安静点!  - Cheer up! 振作起来!  - Good job! 做得好!  - Have fun! 玩得开心!  - How much? 多少钱? - I'm full. 我饱了。 - I'm home. 我回来了。 - I'm lost. 我迷路了。 - My treat. 我请客。 - So do I. 我也一样。 - This way. 这边请。 - After you. 您先。 - Bless you! 祝福你!  - Follow me. 跟我来。 - Forget it! 休想! (算了! ) - Good luck! 祝好运!  - I decline! 我拒绝!  - I promise. 我保证。 - Of course! 当然了!  - Slow down! 慢点!  - Take care! 保重!  - They hurt. (伤口)疼。 - Try again. 再试试。 - Watch out! 当心。 - What's up? 有什么事吗? - Be careful! 注意!  - Bottoms up! 干杯(见底)!  - Don't move! 不许动!  - Guess what? 猜猜看? - I doubt it 我怀疑。 - I think so. 我也这么想。 - I'm single. 我是单身贵族。 - Keep it up! 坚持下去!  - Let me see. 让我想想。 - Never mind. 不要紧。 - No problem! 没问题!  - That's all! 就这样!  - Time is up. 时间快到了。 - What's new? 有什么新鲜事吗? - Count me on 算上我。 - Don't worry. 别担心。 - Feel better? 好点了吗? - I love you! 我爱你!  - I'm his fan. 我是他的影迷。 - Is it yours? 这是你的吗? - That's neat. 这很好。 - Are you sure? 你肯定吗? - Do l have to 非做不可吗? - He is my age. 他和我同岁。 - Here you are. 给你。 - No one knows . 没有人知道。 - Take it easy. 别紧张。 - What a pity! 太遗憾了!  - Any thing else? 还要别的吗? - To be careful! 一定要小心!  - Do me a favor? 帮个忙，好吗? - Help yourself. 别客气。 - I'm on a diet. 我在节食。 - Keep in Touch. 保持联络。 - Time is money. 时间就是金钱。 - Who's calling? 是哪一位? - You did right. 你做得对。 - You set me up! 你出卖我!  - Can I help you? 我能帮你吗? - Enjoy yourself! 祝你玩得开心!  - Excuse me，Sir. 先生，对不起。 - Give me a hand! 帮帮我!  - How's it going? 怎么样? - I have no idea. 我没有头绪。 - I just made it! 我做到了!  - I'll see to it 我会留意的。 - I'm in a hurry! 我在赶时间!  - It's her field. 这是她的本行。 - It's up to you. 由你决定。 - Just wonderful! 简直太棒了!  - What about you? 你呢? - You owe me one. 你欠我一个人情。 - You're welcome. 不客气。 - Any day will do. 哪一天都行夕 - Are you kidding? 你在开玩笑吧!  - Congratulations! 祝贺你!  - T can't help it. 我情不自禁。 - I don't mean it. 我不是故意的。 - I'll fix you Up. 我会帮你打点的。 - It sounds great! . 听起来很不错。 - It's a fine day. 今天是个好天。 - So far，So good. 目前还不错。 - What time is it? 几点了? - You can make it! 你能做到!  - Control yourself! 克制一下!  - He came by train. 他乘火车来。 - He is ill in bed. 他卧病在床。 - He lacks courage. 他缺乏勇气。 - How's everything? 一切还好吧? - I have no choice. 我别无选择。 - I like ice-cream. 我喜欢吃冰淇淋。 - I love this game. 我钟爱这项运动。 - I'll try my best. 我尽力而为。 - I'm On your side. 我全力支持你。 - Long time no see! 好久不见!  - No pain，no gain. 不劳无获。 - Well，it depends 噢，这得看情况。 - We're all for it. 我们全都同意。 - What a good deal! 真便宜!  - What should I do? 我该怎么办？ - You asked for it! 你自讨苦吃!  - You have my word. 我保证。 - Believe it or not! 信不信由你!  - Don't count on me. 别指望我。 - Don't fall for it! 别上当!  - Don't let me down. 别让我失望。 - Easy come easy go. 来得容易，去得快。 - I beg your pardon. 请你原谅。 - I beg your pardon? 请您再说一遍(我没有听清)。 - I'll be back soon. 我马上回来。 - I'll check it out. 我去查查看。 - It's a long story. 说来话长。 - It's Sunday today. 今天是星期天。 - Just wait and see! 等着瞧!  - Make up your mind. 做个决定吧。 - That's all I need. 我就要这些。 - The view is great. 景色多么漂亮!  - The wall has ears. 隔墙有耳。 - There comes a bus. 汽车来了。 - What day is today? 今天星期几? - What do you think? 你怎么认为？ - Who told you that? 谁告诉你的? - Who's kicking off? 现在是谁在开球? - Yes，I suppose So. 是的，我也这么认为。 - You can't miss it 你一定能找到的。 - Any messages for me? 有我的留言吗? - Don't be so modest. 别谦虚了。 - Don't give me that! 少来这套!  - He is a smart boy. 他是个小机灵鬼。 - He is just a child. 他只是个孩子。 - I can't follow you. 我不懂你说的。 - I felt sort of ill. 我感觉有点不适。 - I have a good idea! 我有一个好主意。 - It is growing cool. 天气渐渐凉爽起来。 - It seems all right. 看来这没问题。 - It's going too far. 太离谱了。 - May I use your pen? 我可以用你的笔吗? - She had a bad cold. 她患了重感冒。 - That's a good idea. 这个主意真不错。 - The answer is zero. 白忙了。 - What does she like? 她喜欢什么? - As soon as possible! 越快越好!  - He can hardly speak. 他几乎说不出话来。 - He always talks big. 他总是吹牛。 - He won an election. 他在选举中获胜。 - I am a football fan. 我是个足球迷。 - If only I could fly. 要是我能飞就好了。 - I'll be right there. 我马上就到。 - I'll see you at six. 我六点钟见你。 - IS it true or false? 这是对的还是错的? - Just read it for me. 就读给我听好了。 - Knowledge is power. 知识就是力量。 - Move out of my way! 让开!  - Time is running out. 没时间了。 - We are good friends. 我们是好朋友。 - What's your trouble? 你哪儿不舒服? - You did fairly well! 你干得相当不错1 - Clothes make the man. 人要衣装。 - Did you miss the bus? 你错过公共汽车了? - Don't lose your head. 不要惊慌失措。 - He can't take a joke. 他开不得玩笑。 - He owes my uncle $100. 他欠我叔叔100美元。 - How are things going? 事情进展得怎样? - How are you recently? 最近怎么样? - I know all about it. 我知道有关它的一切。 - It really takes time. 这样太耽误时间了。 - It's against the law. 这是违法的。 - Love me，love my dog. (谚语)爱屋及乌。 - My mouth is watering. 我要流口水了。 - Speak louder，please. 说话请大声点儿。 - This boy has no job. 这个男孩没有工作。 - This house is my own. 这所房子是我自己的。 - What happened to you? 你怎么了? - You are just in time. 你来得正是时候。 - You need to workout. 你需要去运动锻炼一下。 - Your hand feels cold. 你的手摸起来很冷. 。 - Don't be so childish. 别这么孩子气。 - Don't trust to chance! 不要碰运气。 - Fasten your seat belt. 系好你的安全带 - He has a large income. 他有很高的收入。 - He looks very healthy. 他看来很健康。 - He paused for a reply. 他停下来等着\\*回答。 - He repaired his house. 他修理了他的房子。 - He suggested a picnic. 他建议搞一次野餐。 - Here's a gift for you. 这里有个礼物送给你。 - How much does it cost? 多少钱? - I caught the last bus. 我赶上了最后一班车。 - I could hardly speak. 我简直说不出话来。 - I'll have to try that. 我得试试这么做。 - I'm very proud of you. 我为你感到非常骄傲。 - It doesn't make sense. 这没有意义(不合常理)。 - Make yourself at home. 请不要拘礼。 - My car needs washing. 我的车需要洗一洗。 - None of your business! 与你无关!  - Not a sound was heard. 一点声音也没有。 - That's always the case. 习以为常了。 - The road divides here. 这条路在这里分岔。 - Those are watermelons. 那些是西瓜。 - What a nice day it is! 今天天气真好!  - What's wrong with you? 你哪里不对劲? - You are a chicken. 你是个胆小鬼。 - A lovely day，isn't it? 好天气，是吗? - He is collecting money. 他在筹集资金。 - He was born in New York. 他出生在纽约。 - He was not a bit tired. 他一点也不累。 - I will be more careful. 我会小心一些的， - I will never forget it. 我会记着的。 - It is Just what I need. 这正是我所需要的。 - It rather surprised me. 那事使我颇感惊讶。 - Just around the comer. 就在附近。 - Just for entertainment. 只是为了消遣一下。 - Let bygones be bygones. 过去的，就让它过去吧。 - Mother doesn't make up. 妈妈不化妆。 - Oh，you are kidding me. 哦，你别拿我开玩笑了。 - She has been to school. 她上学去了。 - Skating is interesting. 滑冰很有趣。 - Supper is ready at six. 晚餐六点钟就好了。 - That's a terrific idea! 真是好主意!  - What horrible weather! 这鬼天气!  - Which would you prefer? 你要选哪个? - Does she like ice-cream? 她喜欢吃冰淇淋吗? - First come first served. 先到先得。 - Great minds think alike. 英雄所见略同。 - He has a sense of humor. 他有幽默感。 - He is acting an old man. 他正扮演一个老人。 - He is looking for a job. 他正在找工作。 - He doesn't care about me. 他并不在乎我。 - I develop films myself. 我自己冲洗照片。 - I felt no regret for it. 对这件事我不觉得后悔。 - I get up at six o'clock. 我六点起床。 - I meet the boss himself. 我见到了老板本人。 - I owe you for my dinner. 我欠你晚餐的钱。 - I really enjoyed myself. 我玩得很开心。 - I'm fed up with my work! 我对工作烦死了!  - It's no use complaining. 发牢骚没什么用。 - She's under the weather. 她心情\\*不好。 - The child sobbed sadly. 小孩伤心地抽泣着。 - The rumor had no basis. 那谣言没有\\*根据。 - They praised him highly. 他们大大地表扬了他。 - Winter is a cold season. 冬天是一个，寒冷的季节。 - You can call me any time. 你可以随时打电话给我。 - 15 divided by3 equals 5. 15除以3等于5。 - All for one，one for all. 我为人人，人人为我。 - East,west，home is best. 金窝，银窝，不如自己的草窝。 - He grasped both my hands. 他紧握住我的双手。 - He is physically mature. 他身体己发育成熟。 - I am so sorry about this. 对此我非常抱歉(遗憾)。 - I can't afford a new car. 我买不起一部新车。 - I do want to see him now. 我现在确实很想去见他。 - I have the right to know. 我有权知道。 - I heard some one laughing. 我听见有人在笑。 - I suppose you dance much. 我想你常常跳舞吧。 - I walked across the park. 我穿过了公园。 - I'll just play it by ear. 我到时随机应变。 - I'm not sure I can do it. 恐怕这事我干不了。 - I'm not used to drinking. 我不习惯喝酒。 - Is the cut still painful? 伤口还在痛吗? - It's too good to be true! 好得难以置信。 - Jean is a blue-eyed girl. 珍是个蓝眼睛的女孩。 - Let's not waste our time. 咱们别浪费时间了。 - May I ask some questions? 我可以问几个问题吗? - Money is not everything. 金钱不是一切。 - Neither of the men spoke. 两个人都没说过话。 - Stop making such a noise. 别吵了。 - That makes no difference. 没什么区别。 - The price is reasonable. 价格还算合理。 - They crowned him king. 他们拥立他为国王。 - They're in red and white. 他们穿着红白相间的衣服。 - We all desire happiness. 我们都想要幸福。 - We just caught the plane 我们刚好赶上了飞机。 - What shall we do tonight? 我们今天晚上去干点儿什么呢? - What's your goal in life 你的人生目标是什么? - When was the house built? 这幢房子是什么时候建造的? - Why did you stay at home? 为什么呆在家里? - Would you like some help? 今天真漂亮!  - You mustn't aim too high 你不可好高骛远。 - You're really killing me! 真是笑死我了!  - You've got a point there. 你说得挺有道理的。 - Being criticized is awful! 被人批评真是痛苦!  - Did you enter the contest? 你参加比赛了吗? - Do you accept credit cards? 你们收信用卡吗? - Don't cry over spilt milk. 不要做无益的后悔。 - Don't let chances pass by. 不要让机遇从我们身边溜走。 - He owned himself defeated. 他承认自己失败了。 - He seems at little nervous. 他显得有点紧张。 - He strolls about the town. 他在镇上四处遛达。 - Her tooth ached all night. 她牙疼了一整夜。 - How about a drink tonight? 今晚喝一杯怎样? - I can do nothing but that. 我只会做那件事。 - I get hold of you at last. 我终于找到你了。 - I have a surprise for you. 我有一个意想不到的东西给你看。 - I like all kinds of fruit. 我喜欢各种各样的水果。 - I saw it with my own eyes. 我亲眼所见。 - I will arrange everything. 我会安排一切的。 - I wish I knew my neighbor. 我很想认识我的邻居。 - I would like to check out. 我想结帐。 - It has be come much cooler. 天气变得凉爽多了。 - It's time you went to bed. 你早就该睡觉了。 - No spitting on the street. 禁止在大街上吐痰。 - She was totally exhausted. 她累垮了。 - Show your tickets，please. 请出示你的票。 - Thank you for your advice. 谢谢你的建议。 - That's the latest fashion. 这是最流行的款式。 - The train arrived on time. 火车准时到达。 - There go the house lights. 剧院的灯光灭了。 - They are paid by the hour. 他们按时取酬。 - Things are getting better. 情况正在好转。 - Wake me up at five thirty. 请在五点半叫醒我。 - We are all busy with work. 我们都忙于工作。 - Where do you want to meet? 你想在哪儿见面? - You can get what you want. 你能得到你想要的。 - A barking dog doesn't bite! 吠犬不咬人。 - Are you free this Saturday? 你这个星期六有空吗? - Be careful not to fall ill. 注意不要生病了。 - Being a mother is not easy. 做一个母亲是不容易的。 - Brevity is the soul of wit. 简洁是智慧的精华。 - Cancer is a deadly disease. 癌症是一种致命的疾病。 - Did you fight with others? 你又和别人打架了吗? - Don't dream away your time. 不要虚度光阴。 - Don't keep me waiting long. 不要让我等得太久。 - He has a remarkable memory. 他有惊人的记忆力。 - He has completed the task. 他完成了这个任务。 - He has quite a few friends. 他有不少的朋友。 - He is capable of any crime. 他什么样的坏事都能干得出来。 - He walks with a quick pace. 他快步走路。 - He was not a little tired. 他很累。 - His looks are always funny. 他的样子总是滑稽可笑。 - How about going to a movie? 去看场电影怎么样? - I think I've caught a cold. 我想我得了感冒。 - I was taking care of Sally. 我在照顾萨莉。 - I wish I lived in NEWYORK. 我希望住在纽约。 - I'm very glad to hear that. 很高兴听你这样说。 - I'm your lucky fellow then. 我就是你的幸运舞伴啦!  - It's none of your business! 这不关你的事儿!  - No littering on the campus. 在校园内不准乱丢废物。 - She is a good-looking girl. 她是一个漂亮女孩。 - She mended the broken doll. 她修补了破了的洋娃娃。 - So I just take what I want. 那么我只拿我所需要的东西。 - Spring is a pretty season， 春天是一个好季节。 - The figure seems all Right. 数目看起来是对的。 - The stars are too far away. 星星太遥远了。 - The whole world knows that. 全世界都知道。 - Tomorrow will be a holiday. 明天放假。 - We walk on the garden path. 我们走在花园小径上。 - What you need is just rest. 你需要的就是休息。 - What's your favorite steps? 你最喜欢跳什么舞? - You'd better let her alone. 你们最好是让她一个人呆会儿。 - A lost chance never returns. 错过的机会永不再来。 - Don't let this get you down. 不要为此灰心丧气。 - He shot the lion with a gun. 他用枪把狮子打死了。 - I don't think you are right. 我认为你是不对的。 - I have never seen the movie. 我从未看过那部电影。 - I haven't seen you for ages. 我好久没见到你了。 - I was alone，but not lonely. 我独自一人，但并不觉得寂寞。 - I went there three days ago. 我三天前去过那儿。 - It's a friendly competition. 这是一场友谊赛。 - It's very thoughtful of you. 你想得真周到。 - May I speak to Lora，please? 我能和劳拉说话吗? - Mr. Wang is fixing his bike. 王先生在修他的自行车。 - My brother is see king a job. 我弟弟正在找工作。 - Nancy will retire next year. 南希明年就退休了。 - Neither you nor he is wrong. 你没错，他也没错。 - Opportunity knocks but once. 机不可失，时不再来。 - She dressed herself hastily. 她匆忙穿上衣服。 - She hired a car by the hour. 她租了一辆按钟点计费的汽车。 - Someone is ringing the bell. 有人在按门铃。 - The Smiths are my neighbors. 史密斯一家是我的邻居。 - These shoes don't fit right. 这双鞋不太合适。 - This is only the first half. 这才是上半场呢。 - This pen doesn't write well. 这钢笔不好写。 - Would you like a cup of tea? 你想喝杯茶吗? - You really look sharp today. 你今天真漂亮。 - Another cat came to my house. 又有一只猫来到我家了。 - Check your answers with mine. 把你的答案跟我的核对一下。 - Don't keep the truth from me. 别瞒着我事实真相。 - Everything has its beginning. 凡事都有开端。 - He came to the point at once. 他一下子就说到了点子上。 - He fell behind with his work. 他工作落后了。 - He is the happiest man alive. 他是世界上最快乐的人。 - He neither smokes nor drinks. 他既不抽烟也不喝酒。 - He ran his horse up the hill. 他策马跑上小山。 - He reminds me of his brother. 他使我想起了他的弟弟。 - He was efficient in his work. 他工作效率高。 - He will do anything but work. 只要不是干活，他干什么都行。 - His father runs a restaurant. 他的父亲经营一家餐馆。 - I have something to tell you. 我有事要告诉你。 - I smelled a smell of cooking. 我闻到了烧菜做饭的味道。 - I want to see the film again. 我真想再看一遍。 - I've got too much work to do. 我要做的工作太多了。 - Let's go for a walk，shall we? 咱们出去走走，好吗? - Please let me check the bill. 请让我核对一下帐单。 - Plenty of sleep is healthful. 充足的睡眠有益于健康。 - The sun comes up in the east. 太阳从东方升起。 - This is because we feel pain. 这是因为我们能感到疼痛。 - What do you desire me to do? 你想要我做什么? - What you said was quite true. 你所说的完全符合事实。 - You can either stay or leave. 你或者留下或者离开。 - Your life is your own affair. 你的生活是你自己的事。 - All that glitters is not gold. 发闪光的不全是黄金。 - Are you going to have a party? 你要举行聚会吗? - Aren't you concerned about it? 难道你不担心吗? - Don't forget to keep in touch. 别忘了保持联系。 - He broke his words once again. 他又一次违背了诺言。 - He is in his everyday clothes. 他穿着平常的衣服。 - He is taller than I by ahead. 他比我高一头。 - He led them down the mountain. 他带他们下山。 - He was trained to be a lawyer. 他被培养成一名律师。 - I am afraid that l have to go. 我要走了。 - I don't have any cash with me. 我身上没带现金。 - I have been putting on weight. 我开始发胖了。 - I have just finished the book. 我刚刚读完这本书。 - I was late for work yesterday， 我昨天上班迟到了。 - It appears to be a true story. 这故事似乎是真的。 - I've got to start working out. 我必须开始做健身运动了。 - Japan is to the east of China. 日本在中国的东部。 - John asked Grace to marry him， 约翰向格雷斯求婚。 - My watch is faster than yours. 我的表比你的表快。 - New China was founded in l949. 1949年新中国成立。 - Thanks for your flattering me. 多谢你的夸奖。 - They charged the fault on him. 他们把过失归咎于他。 - This car is in good condition. 这车性能很好。 - This work itself is very easy. 这件工作本身很容易。 - Truth is the daughter of time. 时间见真理。 - We look forward to your visit. 期待您的光临。 - What do you think of this one? 您觉得这个怎么样子 - What's the weather like to day? 今天天气怎么样? - A red tie will match that suit. 红领带会配那件衣服。 - A wet road is usually slippery. 潮湿的路往往是滑的。 - Example is better than precept. 身教胜于言传。 - Go right back to the beginning. 直接回到起始位置。 - He does everything without aim. 他做事都漫无目标。 - He is respectful to his elders. 他对长辈很恭敬。 - He knows English better than I. 他比我懂英语。 - He resolved to give up smoking. 他决心戒烟。 - His talk covered many subjects. 他的报告涉及很多课题。 - I fear that he drinks too much. 我担心他喝的酒太多了。 - I have my hair cut every month. 我每个月都理发。 - I want to have a part-time job. 我想有一份兼职工作。 - I'm sorry to have bothered you. 对不起，打扰你了。 - It is not so easy as you think. 这事没有你想象的那么简单。 - Keep your temper under control. 不要发脾气. 。 - Lying and stealing are immoral. 说谎和偷窃都是不道德的。 - My efforts resulted in nothing. 我的努力毫无结果。 - My false teeth are stuck to it. 我的假牙还在上边呢!  - She is a composer for the harp. 她是位写竖琴曲的作曲家 - Take me to the airport，please. 请送我去机场。 - Talking with you is a pleasure. 和你谈话很愉快 - The eggs are sold by the dozen. 鸡蛋按打卖。 - The price just covers the cost. 这个价格正好抵消成本。 - The sweater is of good quality. 这件毛衣质地很好。 - The teacher got a little angry. 老师有点生气了。 - Think carefully before you act. 三思而后行。 - Walt invented the steam engine. 瓦特发明了蒸汽机。 - We are divided in our opinions. 我们意见分歧。 - What ever I said，he'd disagree. 不论我说什么他都不同意。 - Who ever comes will be welcomed. 来的人我们都欢迎。 - You look as if you didn't care. 你看上去好像满不在乎。 - You should look at it yourself. 你应该亲自看看它。 - Draw your chair up to the table. 把你的椅子拉到桌子旁边来。 - He covered himself with a quilt. 他给自己盖上一条被。 - He found my lecture interesting. 他觉得我讲课有趣。 - He had a good many friends here. 他在这儿有很多朋友。 - He is only about five feet high. 他大概只有五英尺高。 - Her family are all music lovers. 她全家人都是音乐爱好者。 - I am busy. How is your business? 我很忙. 你的生意做得怎样? - I don't think much of the movie. 我认为那电影不怎么样。 - I feel like eating an ice-cream. 我想吃一个冰淇淋。 - I found him seated on the bench. 我发现他在椅子上坐着 - I gave much time to the old car. 我在这辆破车上花了不少时间。 - I lost the door key about here. 我在这附近掉了门钥匙。 - I'm not guessing，I really know. 我不是在猜想，我真的知道。 - It's time to tell her the truth. 是该告诉她真相的时候了。 - Let's watch TV with a candle on. 咱们点上蜡烛看电视吧。 - Most games cost about that much. 大部分游戏差不多都是这个价钱。 - My parents want me to go abroad. 我父母想让我出国。 - She has been collecting stamps. 她一直收集邮票。 - There are many stars in the sky. 天上有很多星星。 - We get to London this afternoon. 我们是今天下午到达伦敦的。 - What about having a pizza first? 先吃点比萨饼怎么样? - You'd better look before you leap. 你最好三思而后行。 - You know what I'm talking about. 我想你知道我在说什么。 - He has been sick for three weeks. 他已经病了几周了。 - He inspected the car for defects. 他详细检查车子有无效障。 - I count you as one of my friends 我把你算作我的一个朋友。 - I go to school by bike every day. 我每天骑自行车上学。 - I have a large collection of CDs. 我收集了很多唱片。 - I won't be able to see him today. 今天我不可能去看他。 - I'll call a taxi in case of need. 如果需要的话，我会叫出租车的。 - Is there any sugar in the bottle? 瓶子里还有糖吗? - It's a secret between you and me. 这是你我之间的秘密。 - It's very kind of you to help me. 你帮助我真是太好了。 - Let's divide the cake into three. 我们将蛋糕分成三份吧。 - Patience is a mark of confidence. 耐心是自信心的一种表现。 - Susan is going to finish college. 苏珊将完成大学学业。 - That is my idea about friendship. 这是我关于友谊的看法。 - The book you ask for is sold out. 你要的那本书已经售完了。 - The boy was too nervous to speak. 那男孩紧张得说不出话来。 - The play may begin at any moment. 戏随时都有可能开始。 - The salve will heal slight burns. 这种药膏能治疗轻微烧伤。 - The sea sparkled in the sunlight. 阳光下，大海波光粼粼。 - The teacher tested us in English. 老师用英文考我们。 - There is a bridge over the river. 河上有一座桥。 - They rode their respective bikes. 他们各自骑着自己的自行车。 - They will arrive in half an hour. 他们将于半小时之内到达。 - Time is more valuable than money. 时间比金钱宝贵。 - We are all in favor of this plan. 我们都赞同这项计划。 - We reached London this afternoon. 我们是今天下午到达伦敦的。 - We two finished a bottle of wine. 我俩喝完了一瓶酒。 - what a lovely little girl she is! 她是一个多么可爱的小女孩耶!  - Will you pick me up at my place? 你能到我的住处来接我吗? - You may choose whatever you like. 你可以喜欢什么就选什么。 - You're suffering from an allergy? 你过敏吗? - Beyond all questions you are right. 毫无疑问，你是对的。 - But I plan to weed the yard today. 我计划今天除院子里的草。 - But who will do all the house work? 但是这些家务活谁来做呢? - Close the door after you，please. 请随手关门。 - Come to see me whenever you like. 你可以随时来见我。 - Don't pull the chairs about,boys! 不要把椅子拖来拖去，孩子们!  - He drives more carefully than you. 他开车比你小心。 - He invited me to dinner yesterday. 他昨天请我吃晚饭了。 - He struck his attacker on the ear. 他打了那个攻击者一耳光。 - He suddenly appeared in the party. 他突然在晚会上出现了。 - Her handbag goes with her clothes. 她的手袋和她的衣服很搭配。 - Here we are. Row M, seats l and 3. 哦，到了. M排，l号和3号。 - His boss might get angry with him. 他的老板也许会生他的气。 - I expect to be there this evening. 我打算今天晚上到那儿去。 - I really need to lose some weight. 我真的需要减肥了。 - I think you have the Wrong number. 我想你打错号码了。 - I would rather stay at home alone. 我宁愿独自呆在家。 - I'd like to look at some sweaters. 我想看看毛衣。 - Its origin is still a mystery now. 它的起源至今仍是个谜。 - Money is no more than our servant. 金钱不过是我们的仆人。 - Once you begin，you must continue. 一旦开始，你就得继续。 - She is poor but quite respectable. 她虽穷，人品却很端正。 - She spent a lot of money on books. 她花了很多钱来买书。 - The girl in red is his girlfriend. 穿红衣服的那个女孩是他的女朋友。 - There is a chair below the window. 窗户下面有一把椅子。 - They employed him as a consultant. 他们雇用他为顾问。 - To be honest with you，I'm twenty. 老实说，我20岁。 - We often call him by his nickname. 我们经常叫他的绰号。 - Will you be free tomorrow evening? 你明晚有空吗? - Would you like to leave a message? 你要留话吗? - You can never turn the clock back. 时光不能倒流。 - You may as well tell me the truth. 你还是把事实告诉我为好。 - Are your grandparents still living? 你的祖父母还在么? - Can you recognize that woman，Mary? 你能认出那个女人是谁了吗，玛丽? - Do you have any suggestions for me? 你对我有什么建议么? - He is tough，but I am even tougher. 他是一个硬汉子，不过我要比他更硬。 - He made his way through the forest. 他设法穿过了森林。 - He suggests you leave here at once. 他建议你立刻离开这儿。 - He was married to a friend of mine. 他和我的一个朋友结了婚。 - He will blame you for carelessness. 他会责备你的粗心大意。 - I can give you a number of excuses. 我可以给你说出很多韵理由。 - I don't doubt that he will help me. 我不怀疑他会援助我。 - I hope you enjoy your stay with us. 希望您在这儿过的愉快。 - I'd like to-repair our differences. 我愿意消除一下我们之间的分歧。 - It's nothing to be surprised about. 这事不值得大惊小怪。 - It's rude to stare at other people. 盯着别人看是不礼貌的。 - Bob has always had a crush on Lucy. 鲍伯一直在爱着露茜。 - Let's take a short break for lunch. 让我们休息一会儿，去吃午饭。 - Linda speaks as if she were a boss. 琳达说话总好象她是老板。 - She became more and more beautiful. 她变得越来越漂亮了。 - Suppose it rains,what shall we do? 万一下雨，我们该怎么办? - The book is protected by copyright. 该书受版权保护。 - The ice is hard enough to skate on. 冰已经厚得可以划冰了。 - The price includes postage charges. 价格包括邮资在内。 - This is a little something for you. 这是我给你们的一点心意。 - What he likes best is making jokes. 他最喜欢开玩笑。 - Who but Jack would do such a thing? 除了杰克谁会做这种事呢? - You should have a mind of your own. 你必须有自己的主见。 - You will soon get used to the work. 你很快就会习惯于这项工作的。 - Columbus discovered America in l492. 哥伦布于1492年发现了美洲。 - God helps those who he1p themselves. 上帝帮助那些自己帮自己的人。 - He has a nice sum of money put away. 他存了一大笔钱。 - He is heavily insured against death. 他给自己投了巨额的人身保险。 - He used to learn everything by rote. 他过去总是死记硬背。 - He's a terrible man when he's angry. 他生气的时候很可怕。 - I am on my way to the grocery store. 我正在去杂货店的路上。 - I am sick of always waiting for you! 你，老让我等你，真是烦透了。 - I appreciate John's helping in time. 我感谢约翰的及时帮助。 - I bought it the day it was released. 它发行的当天我就买了。 - I doubted whether the story is true. 我怀疑那故事是不是真的。 - I learnt that I had passed the test. 我获悉我测验及格了。 - I will seek from my doctor's advice. 我将请教医生的意见。 - Ice cream is popular among children. 冰淇淋深受孩子们的欢迎。 - I'd like to get this film developed. 我要冲洗这卷胶卷。 - In a word，I am tired of everything. 总之，我对一切都很厌倦。 - Let us do it by ourselves，will you? 我们自己做这件事，可以吗? - May I know the quantity you require? 请问你们需要多少数量的货物? - Nobody has ever solved this problem. 没有人曾解决过这个问题。 - Our school covers 100 square meters. 我们学校占地面积平方米。 - People enjoyed the stamps very much. 人们非常喜爱这些邮票。 - The editor over looked a print error. 这位编辑漏掉了一个印刷错误。 - The sudden barking frightened Clara. 突然的狗叫声吓坏了克拉拉。 - The teams are coming onto the field. 队员们都进场了。 - There is a mark of ink on his shirt. 他的衬衣上有一块墨迹。 - There isn't any water in the bottle. 瓶子里一点水也没有。 - This joke has gone a little too far. 这个玩笑开得有点-过分了。 - We arrived in London this afternoon. 我们是今天下午到达伦敦的。 - We can't go out because of the rain. 我们不能出去因为下雨了。 - We should make good use of our time. 我们应该充分利用我们的时间。 - We should save unnecessary expenses. 我们应节省不必要的开支。 - You may have heard of Birth Control. 你们也许听说过控制人口出生的措施。 - After a pause he continued his story. 停顿一下之后他继续说他的。 - As you know, I am a very kind person. 你知道，我是个很和善的人。 - He dare not tell us his evil conduct. 他不敢告诉我们他的恶行。 - I can express myself in good English. 我可以用很好的英语来表达自己的观点。 - I'll furnish my house with furniture. 我要为我的房子置办家具。 - It seemed as if there was no way out. 看情形似乎没有出路了。 - It's the hottest day I've had so far. 这是迄今为止我经历的最热的一天。 - Mr. Smith is in charge of this class. 史密斯老师负责该班。 - Mr. Smith taught English at a school. 史密斯先生在一所学校教英语。 - None of us is afraid of difficulties. 我们当中没有一个人害怕困难。 - Our school is in the east of Beijing. 我们学校在北京的东部。 - She really wishes her clock had rung. 她真希望今天早上她的闹钟响了。 - She teaches foreign students Chinese. 她教外国学生汉语。 - The question will be settled tonight. 这个问题将在今晚解决。 - The weight is too much for my height. 相对于我的身高来说，体重太重了!  - There are mice in Mrs. Lee's kitchen! 李太太的厨房里有老鼠!  - There is no one but hopes to be rich. 没有人不想发财。 - There'll be some sport reviews on TV. 电视上会有一些体育评论。 - This company is our regular customer. 这家公司是我们的老客户。 - This is a good example of his poetry. 这是他诗作的一个好例子。 - What we read influences our thinking. 我们所阅读的书本会影响我们的思想。 - Words can't express what I felt then. 无法用语言形容我当时的感受。 - You really have an ear for pop music. 你确实对流行音乐很有欣赏力。 - A bad workman quarrels with his tools. 手艺差的工人总是抱怨工具不好使。 - Can you adapt yourself to the new job? 你能适应新的工作吗? - Does the computer ever make a mistake. ? 计算机出错吗? - Don't be uneasy about the consequence. 不必为后果忧虑不安。 - Even a child can answer this question. 即使小孩儿都能回答这个问题。 - He has many strange ideas in his mind. 他脑子里尽足奇思怪想。 - He is commonly supposed to be foolish. 他是公认的傻瓜。 - He sat with his arms across the chest. 他双臂交*于胸前的坐在那里。 - He set up a fine example to all of us. 他为我们树立了一个好榜样。 - His cake is four times as big as mine. 他的蛋糕是我的四倍大。 - I do not care whether it rains or not. 我不管天会不会下雨。 - I have a lot in common with my sister. 我和我姐姐有很多相同之处。 - I haven't even touched your tooth yet. 我还没有碰到你的牙齿呢。 - I'm looking forward to a prompt reply. 盼迅速答复。 - It is an excellent novel in every way. 无论从哪方面来看，这都是一本优秀的小说。 - It is clear that the cat has eaten it! 很明显，是猫偷吃的!  - Nothing but death can part the couple. 除了死之外，什么也拆不散这一对。 - Now she looks pale as if she were ill. 现在她脸色难看，好像病了一样。 - She was injured badly in the accident. 她在这次意外中受到重伤。 - The secret was spread among the crowd. 秘密在人群当中传播开来。 - The two brothers look very much alike. 这兄弟俩看上去很相像。 - Their interest is listening to others. 他们的兴趣是听别人说话。 - There was a notice in the supermarket. 超市里有一个布告。 - This one cannot compare with that one. 这个与那个无法比较。 - To know everything is to know nothing. 样样通，样样松。 - To tell the truth, I don't like disco. 说实话，我不喜欢迪斯科。 - True and False have opposite meanings. 真与假含义完全相反。 - What's the point of going to college? 上大学有何用? - Where can we make the insurance claim? 我们可以在哪里提出保险赔偿?这个无法与那个比较。 - Why don't I pick you up at your house? 为什么不让我去接你呢? - Why don't you attend an aerobic class? 你为什么不去参加一个有氧健身班呢? - You can kill two birds with one stone. 一举两得。 - You can't go in no matter who you are. 不管你是谁，都不能进去。 - You should learn these words by heart. 你应该把这些词背熟。 - Could I have those two tickets, please?这两张票给我行不行? - He has to take care of his sick mother. 他得照顾他生病的母亲。 - He hired a workman to repair the fence. 他雇用了一个工人修理围墙。 - I can't make this machine run properly. 我无法使这部机器正常运转。 - I don't know if I'll have the patience. 我不知道我有没有耐心。 - I don't like what you are saying. 我不喜欢你说的话。 - I fell in love with her at first sight. 我第一眼见到她就爱上了她。 - I have just heard from my sister, Mary. 我刚收到我妹妹玛丽的一封信。 - If you would only try, you could do it. 只要你肯尝试，你一定能做这件事。 - It is no use learning without thinking. 学而不思则惘。 - It was a lazy, breezy autumn afternoon. 这是一个懒散的，起风的秋日下午。 - Jack is the strongest boy in the class. 杰克是全班最强壮的男孩。 - Please fetch a chair from another room. 请到别的房间取一把椅子。 - The doctor began to operate on the boy. 医生开始给那个男孩动手术。 - The doctor is taking my blood pressure. 医生正给我量血压。 - The machines will not operate properly. 那些机器不能正常运转。 - The students declared against cheating. 学生们表示反对作弊。 - There is hope so long as he is with us. 只要他在就有希望。 - He talks as if he were the head of the office. 他说话的口气像办公室主任似的。 - His cake is three times bigger than mine. 他的蛋糕比我的大三倍。 - I am looking forward to your early reply. 希望早日得到你的答复。 - I could say nothing but that I was sorry. 我除了说\"对不起\"之外，什么也说不出来。 - I don't know how to express my gratitude. 我不知道怎样来表达我的感激之情. 我要赶飞机 - I have to catch a plane. Could you hurry?你能快点吗?我好久没有她的消息了。 - I haven't heard from her for a long time. 我好久没有她的消息了。 - I would like to wash the clothes for you. 我愿意帮你洗这些衣服。 - Let me see your driver's license, please. 请让我看看你的驾驶执照。 - She goes to work every day except Sunday. 除星期天外，他每天去上班。 - Take a seat please, make yourself at home. 请坐，随便一点。 - The damage was caused by external forces. 损害是由外力引起的。 - The doctor advised me to give up smoking. 医生建议我戒烟。 - The flowers make the room more beautiful. 花使房间变得更加美了。 - There is a good restaurant on the street. 那条大街上有一个很好的餐馆。 - They covered 120 miles in a single night. 他们仅一夜就走了120英里路。 - Try to look on the bright side of things. 尽量从好的方面看。 - What's your plan for the summer vacation?你暑假打算干什么? - You may pick whichever one you like best. 你可以挑你最喜欢的。 - You're welcome to stay with us next time. 欢迎您下次再光临我们的饭店。 - There was a murder in London yesterday. 昨天伦敦发生了一起谋杀案。 - They stared at the huge tiger with awe. 他们敬畏地看着那头巨虎。 - He never misses a chance to see a movie. 他从不错过看电影的机会。 - I cannot put up with my noisy roommates. 我受不了我那些吵闹的室友了。 - I will be back by the end of next month. 我下个月底会回来。 - I'm good at freestyle and breast stroke. 我擅长自由泳和蛙泳。 - It was your turn to wash them yesterday. 昨天轮到你把它们洗干净。 - Let's go out to have a dinner, shall we?咱们出去吃饭吧，好吗? - Please push the ladder against the wall. 请把梯子靠在墙壁上。 - She is standing in the front of the bus. 她站在公共汽车的前部。 - The doctor asked me to watch what I eat. 医生要我注意饮食。 - The grass is moist early in the morning. 清晨的草地湿漉漉的。 - The test finished. We began our holiday. 考试结束了，我们开始放假。 - This question is too complicated for me. 这个问题对我说来太复杂了。 - Tony speaks English and he plays tennis. 托尼会说英语，打网球。 - What is worth doing is worth doing well. 只要你觉得某事值得去做，就一定要把它做好。 - Would you like to go to a party with me?你想不想和我一起去参加一个聚会? - All at once, a rabbit came out of a hole. 突然，一只兔子从一个洞中跑了出来。 - All characters in the book are imaginary. 书中所有的人物都是虚构的。 - Do you feel like going to that new disco? 你想去那个新开的迪厅 - Ducks know how to swim when they are born. 鸭子天生会游泳 - He spent most of his life gathering money. 他一生大部分时间用来积聚钱财。 - He usually stays at home with his pet dog. 他通常跟他的爱犬待在家里。 - How peaceful and beautiful the country is! 多么平静美丽的国家呀!  - I am told that you dance wonderfully well. 我听说你的舞跳得特棒。 - I have had several conversations with him. 我已经和他谈过几次了。 - It is the best film that I have ever seen. 这是我所看过的最好的电影。 - It's only a party in honor of my birthday. 这只是为了庆祝我的生日而举行的晚会。 - Learning English is like building a house. 学英语象盖房子。 - Listening with your heart is good for you. 专心聆听别人说话对你有好处。 - My grandpa died of hunger in the old days. 我爷爷在旧社会死于饥饿。 - She feared staying alone in the farmhouse. 她害怕一个人留在农舍里。 - She guided the tourists around the castle. 她引导旅游者参观了这座城堡。 - She runs everyday in order to lose weight. 她每天都跑步是为了减肥。 - She sang perfectly in the hall last night. 她昨晚在大厅唱得非常好。 - Somebody is always complaining to others. 有人总是向别人抱怨。 - They don't often have a bad day this year. 他们今年的运气还不错。 - We regard the matter as nothing important. 我们认为这件事情不重要。 - We'll take our holiday sometime in August. 我们将在八月份的某个时候休假。 - Could you direct me to the station, please?请问到车站怎么走? - Have you cleared your luggage with customs ?你的行李通关了吗? - He bothered me with a great many questions. 他对我提了一大堆问题，真烦!  - He does exercises every day in the morning. 他每天早上锻练身体。 - How do I control myself? I can't calm down. 我怎能控制我自己?我无法冷静下来。 - I dig songs and I like pop music very much. 我特别喜欢歌曲和流行音乐。 - I'd like to cash a traveler's check please. 我想兑换旅行支票。 - I'd like to pick sea shells this afternoon. 今天下午我想去捡贝壳。 - It's odd that they didn't reply our letter. 他们没有给我们回信，这真奇怪。 - John seldom gets together with his friends. 约翰很少与朋友聚在一起。 - Many people have been out of work recently. 最近有许多人失业。 - Please give my best regards to your family. 请代我向你们全家致以最诚挚的问候。 - Some people have compared books to friends. 有些人把书比作朋友。 - The bat together with the balls was stolen. 球拍和球全被偷了。 - The color of her dress suits her very well. 她衣服的颜色很适合她。 - The days get longer and the nights get shorter. 白天变长了，黑夜变短了。 - The dress doesn't fit her. She is too thin. 这件衣服不适合她，她太瘦了。 - The examination put a lot of stress on him. 那次考试给了他很大的压力。 - The mother sat the child at a little table. 母亲安排孩子坐到小桌旁。 - There is some difference between the twins. 这对双胞胎有点儿不一样。 - They insisted on staying rather than going. 他们坚持留下来，而不愿意走 - Trust me, the game is really worth playing. 相信我，这游戏确实值得一玩。 - Unlike her friends, she never gave up hope. 与她的朋友的不同之处是，她从不放弃希望。 - Well done! You are always doing a good job! 干得不错! 你总是干得很出色!  - We're planning a tour to Italy this summer. 我们计划今年夏天到意大利去旅行。 - Were there any letters for me this morning?今天早上有我的信吗? - Why isn't Mrs. Lee's cat catching the mice?李太太的猫为何不在抓这些老鼠呢? - Your English is improving little by little. 你的英语正在渐渐提高。 - Could you tell me where I can wash my hands?请问洗手间怎么走? - Do you have any plans for the long weekend?你有办法打发这个漫长的周末吗? - He decided to bring a suit against his boss. 他决定起诉他的老板。 - He devoted his life to the study of science. 他把毕生献给科学研究。 - He had to choose between death and dishonor. 他不得不在死亡和耻辱之间选择。 - His previous attempts had been unsuccessful. 他以前的尝试没有成功。 - I determined that nothing should be changed. 我决定什么都不改变。 - I don't think it will lead to a good result. 我认为这事不会有什么好结果。 - I have 4 books and 2 magazines to check out. 我有4本书和2本杂志要借。 - I think I've filled in everything correctly. 我想各项都填对了。 - I'm not sure whether I have locked the door. 我没把握是否锁了门。 - It took him a little time to fix that watch. 他很快就把表修理好了。 - My father is at home looking for the ticket. 我爸爸正在家里找票呢!  - Not until last week did I get a work permit. 直到上周我才拿到工作许可证。 - She intends to make teaching her profession. 她想以教书为职业。 - The letter \"x\" stands for an unknown number. 字母x代表未知数。 - The sight of the dead body scared him stiff. 看到尸体把他吓僵了。 - There are lots of huge buildings in Beijing. 在北京有许多高大的建筑物。 - There is an interesting film on Channel one. 在一频道有一部有趣的电影。 - They plan to immigrate to Finland next year. 他们计划明年移居芬兰。 - We enjoyed driving along the new expressway. 我们喜欢沿着新建的高速公路开车。 - We need to cooperate perfectly to win the game. 要想赢得比赛，我们需要密切配合。 - We need more than listening. We need action! 我们需要的不光是听得进意见，我们要的是行动。 - Yes. I wouldn't go home early if I were you. 是的，如果我是你，我不会早回家。 - Your answer is satisfying. I feel satisfied. 你的答案是令人满意的. 我感到很满意。 - Betty and Susan are talking on the telephone. 贝蒂和苏珊正在通电话。 - Great efforts ensure the success of our work. 巨大的努力确保了我们工作的成功。 - He has tasted the sweets and bitters of life. 他已尝遍了人生的甜酸苦辣。 - He said he was educated in the United States. 他说他是在美国受的教育。 - How do you like our English literature Prof. ?你觉得我们的英国文学课的教授怎么样? - I am looking forward to your visit next week. 我期待着你下周来访。 - I feel I am the happiest person in the world. 我觉得自己是世界上最幸福的人了。 - I had to sit up all night writing the report. 我不得不熬通宵写报告。 - I hope we can see each other again some time. 希望还能有相见的机会。 - I saw him playing football on the playground. 我看见他在操场上踢足球。 - It is tomorrow that they will have a meeting. 就在明天(而不是在别的某一天)他们要开会。 - Let me tell you some details about clearance. 让我告诉你一些通关的细节。 - The brain needs a continuous supply of blood. 大脑需要连续不断地供血。 - The doctor's words made him feel comfortable. 医生的话让他感觉很舒服。 - The truth is quite other than what you think. 事实真相和你所想的完全不同。 - They stopped talking when their boss came in. 当老板进来的时候；他们停止了交谈。 - They were glad of the examination being over. 他们为考试结束了而高兴。 - This is by far the largest cake in the world. 这是目前世界上最大的蛋糕了。 - Whichever you choose, you won't be satisfied. 不论你选择哪一个，你都不会满意。 - Will you connect this wire to the television ?你把这根电线和电视机连上好吗? - His words are strongly impressed on my memory. 他的话深深地铭记在我的心头。 - Is this the fight bus for the Capital Library?这辆车到首都图书馆吗? - One third of this area is covered with forest. 这一地区三分之一的地方都是森林。 - They are arguing over who should pay the bill. 他们为谁应该付款而争论不休。 - Wait a moment, I'll be with you in an instant. 等一下，我立刻就来。 - You'll save time not waiting for the elevator. 你可以节省等电梯的时间。 - A clear conscience laughs at false accusation. 只要问心无愧，无端的指责可以一笑置之。 - I have a headache, and she has a stomachache. 我头疼，她胃疼。 - He glared at Bill, ready to teach him a lesson. 他怒视着比尔，准备教训他一顿。 - I assure you that you will feel no pain at all. 我保证你根本不会觉得疼的。 - I can't afford to go to a restaurant every day. 每天都去餐馆吃饭，我真是支付不起。 - I left at 6:00 so that I could catch the train. 我六点钟出门，以便赶上火车。 - I'm afraid I have some rather bad news for you. 我恐怕有些很坏的消息要告诉你。 - Learn to say the fight thing at the fight time. 学会在适当的时候说适当的话。 - No wonder you can't sleep when you eat so much. 你吃这么多难怪睡不着。 - Please ask her to call me back when she's back. 她回来时请让她给我回个电话。 - There are a lot of people in the swimming pool. 游泳池里挤满了人。 - They have to work hard to support their family. 他们必须努力工作来支持他们的家。 - This way, he can kill two birds with one stone. 这样他就能两全其美。 - We are all taking medicine against the disease. 我们都服药治疗疾病。 - Would you please go to a dancing party with me?请你跟我一起去参加一个舞会好吗? - He usually drops in at my place on his way home. 他常常在回家的路上顺便来看看我。 - His vanity was hurt by their talking so frankly. 他们坦率的谈话伤害了他的虚荣心。 - How would you go to Beijing, by air or by train?你怎样去北京，是乘飞机还是坐火车? - I cannot express how glad I am to hear from him. 我无法表达我接到他的信时有多高兴。 - If Tom cannot keep his promise, he'll lose face. 如果汤姆不能信守诺言，他就会丢面子。 - I'll still love her even if she doesn't love me. 即使她不爱我，我还仍然爱她。 - I received an invitation, but I did not accept it. 我收到-份请帖，但没有接受。 - If I were you, I would not be bothered by English. 如果我是你，就不会为英语烦恼了。 - If you don't work, you will fail to pass the exam. 如果你不学习，你考试就会不及格。 - I'm thinking of hanging the lamp from the ceiling. 我打算把灯吊在天花板上。 - It is more important to be healthy than bony slim. 健康永远比皮包骨头好。 - Long ago, people believed that the world was flat. 很久以前人们相信地球是平的。 - Old tunes are sweetest and old friends are surest. 老调最甜美，老友最可靠。 - She makes it clear that she doesn't like swimming. 她明确地表示她不喜欢游泳。 - The constitution guards the liberty of the people. 宪法保护人民的自由。 - The doctor examined the soldier's wound carefully. 大夫仔细检查了战士的伤口。 - The harder I study, the better my English will be. 我越努力，我的英语就会越好。 - The sun was shining and the sky was crystal clear. 阳光闪烁，天空湛蓝。 - This cellar room is very damp in the rainy season. 这间地下室在雨季非常潮湿。 - Computers are becoming a part of our everyday life. 电子计算机正渐渐成为我们日常生活的一部分。 - Every man is fool sometimes, but none at all times. 每个人都有愚蠢的时候，但是没有一个人永远愚蠢。 - He dreamed of traveling to remote South Sea Islands. 他曾梦想到遥远的南海诸岛去旅游。 - How can I climb up that wall! I wish I were a bird! 我怎么能够爬得上那堵墙?我要是一只鸟就好了!  - However, Susan has not really made up her mind yet. 然而，苏珊却还没有决定。 - I really think a little exercise would do you good. 我真的觉得做点运动对你有好处。 - I will never forget the days that I spent with you. 我永远都不会忘记和你一起度过的日子。 - we got a bad headache, and my nose is running. 我头痛得厉害，还流鼻涕。 - Many young girls dream of being a fashion model. 许多年轻女孩梦想成为时装模特儿。 - Most of the earth's surface is covered by water. 大部分的地球表面被水覆盖着。 - Somebody's knocking at the door. I'll answer it. 有人在敲门，我去开。 - The number 13 bus will take you to the hospital. 13路车会带你去医院。 - They celebrated his birthday with a dance party. 也们举办舞会来祝贺他的生日。 - They misplaced this book under other categories. 他们把它错放到另一个类别去了。 - They played a shameful part in the whole affair. 他们在这一事件中扮演了可耻的角色。 - As a matter of fact, he was pretending to be ill. 实际上，他是在装病。 - I will speak against anything I know to be wrong. 我会对所有我认为不对的事情直言不讳。 - In spite of the heavy rain, she went to the shop. 尽管下着大雨，她还是去了商店。 - No matter what happened, he would not say a word. 不管发生什么事，他也不会说一句话。 - No one knows the location of the hidden treasure. 谁也不知道藏宝地点在哪里。 - The old lady enjoys a quiet life with her family. 老太太和她的家人安享宁静的生活。 - The population of the city is close to a million. 这个城市的人口接近一百万。 - We are prohibited from smoking on school grounds. 我们被禁止在校园内抽烟。 - Growth, however, brings new problems and concerns. 不过，发展也带来了新的问题和顾虑。 - He appears to be your friend but I doubt if he is. 他看上去像是你的朋友，但我怀疑他是否是真心的。 - I am so full that I would burst with another bite. 我吃得如此之饱，我感觉我再吃一口肚子就要胀破了。 - I have two cats. One is white, the other is black. 我有两只猫，一只是白猫，另一只是黑猫。 - I'm sorry, these 2 books are 3 days overdue. 小姐，对不起，这两本书已经过期3天了。 - Jalu has forgotten falling off his bicycle. 詹露早忘掉他从白行车上摔下来这件事了。 - Manners are quite different from country to country. 各国的礼仪各不相同。 - Not only did I know her, but I was her best friend. 我不仅认识她，还是她最好的朋友。 - The best-known movie awards are the Academy Awards. 最著名的电影奖是奥斯卡金像奖。 - We've got to do something about the neighbor's dog! 我们得对邻居的狗采取点行动了!  - Will you come and join us for dinner on Sunday?星期天来和我们共进晚餐好吗? - Do you think people are a company's greatest wealth?你认为人是公司最大的财富吗? - He thinks himself somebody, but we think him nobody. 他自以为是重要人物，但我们觉得他什么也不是。 - I believe I haven't reached the summit of my career. 我相信我还没有达到事业的巅峰。 - It is no matter whether you get there early or late. 你早到晚到都没有关系。 - It's against the rules to handle the ball in soccer. 在足球中以手触球就是犯规。 - The nurse assisted the doctor in the operating room. 护士在手术室协助医生动手术。 - What I do on my own time is nobody else's business. 我在自己的时间里干什么根本不关别人的事。 - What I want to do is different from those of others. 我想做的与别人不同。 - You forget to write down the date of your departure. 您忘了写离店日期了。 - \"I wish I'd known about that rule earlier\", she said. \"我要是早点知道这个规矩就好了! \"她说。 - Could you tell me your secret for a long, happy life?你能告诉我长时间地过着快乐的生活的秘诀吗? - He holds a position of great responsibility upon him. 他担任着一个责任重大的职务。 - It is said he has secret love affairs with two women! 据说他背地里和两个女人有关系！ - Number 13 buses run much more frequently, don't they?13路车跑得更勤，是不是? - They are only too delighted to accept the invitation. 他们非常乐意接受邀请。 - We are going to have the final examination next week. 我们下周举行期末考试。 - And now medical care helps to keep people alive longer. 现在的医疗保健使得人们活得更长。 - Do you think you'll be able to go to sleep fight away?你认为你马上就能睡着吗? - I am in charge of the company when the manager is out. 经理不在时山我来管理公司。 - I borrowed a notebook from Tom and I lent it to Marry. 我从汤姆那儿借了一本笔记本，我又把它借给玛丽了。 - I'm doing some washing and John is cooking dinner. 我正在洗衣服，约翰在做晚饭。 - Were there any exciting incidents during your journey?你们在旅行中有没有什么令人激动的事情? - As far as policy is concerned, I have to say something. 谈到政策，我得说几句。 - Could you tell me what the maximum weight allowance is?您能告诉我行李的最大重量限额是多少吗? - He came out of the library, a large book under his arm. 他夹着本厚书，走出了图书馆。 - The brothers differ from each other in their interests. 这几个兄弟各有所好。 - Although we can't see these atoms, they really do exist. 虽然我们看不见原子，但它们的确存在。 - I am familiar with the casual atmosphere in the company. 我对公司中这种放松的氛围感到很熟悉。 - Most people eat, write, and work with their fight hands. 大多数人吃饭，写字，工作都用右手。 - Only by working hard can we succeed in doing everything. 只有努力，才能成功 - Take it easy, you will be all right in a couple of days. . 别担心，你两天之内就会痊愈的。 - The Beatles represented part of the spirit of their age. 甲壳虫乐队代表了他们时代的部分精神。 - There being no one to help me, I had to do it all alone. 因为没有人帮助我，我不得不独立完成这项工作。 - How much cloth does it take to make a skirt for the girl?女孩做一条裙子要用多少布? - With all these mouths to feed, he didn't know what to do. 由于有那么多人要供养，他不知道怎么办才好。 - I forgot to prepare the speech I'm supposed to give today. 我忘了准备今天的我该做的演讲了。 - It's supposed to start at 6:30 sharp, but I doubt it will. 应该是六点半整的，但是我觉得够呛。 - On behalf of my company, I would like to welcome you here. 我代表我们公司欢迎你来这里。 - She's been quite different since coming back from America. 从美国回来之后，她变化很大。 - Today it is common that women and girls make up in public. 今天，在公共场所看到妇女和姑娘化妆打扮是很普遍的事。 - I have to transfer to No. ll bus, but where is the bus stop?我需要换乘11路公共汽车，但是汽车站在哪儿? - I supposed him to be very clever but he was in fact a fool. 我以为他很聪明，其实他是个蠢货。 - The rabbit ran to the woods and did not come back any more. 兔子跑进了森林再也没有出来了。 - Tom and Mary congratulated us on the birth of our daughter. 汤姆和玛丽为我们女儿的出生向我们表示祝贺。 - I can't help eating sweets whenever they are in my presence. 我无论什么时候一看到甜食就忍不住要吃。 - l am vacuuming the floor now and have several shirts to iron. 我正在用真空吸尘器清理地板，还有好几件衬衫要熨。 - I will love you until the seas run dry and the rocks crumble. 我将爱你直到海枯石烂。 - There is a broken small old gray stone bridge over the river河上有一座破烂不堪的、古老的、灰色的小石桥。 - No wonder people say that computers are taking over the world. 难怪有人说电子计算机正渐渐接管世界。 - The enormous increase of population will create many problems. 巨大的人口增长将产生很多问题。 - There's nothing better for you than plenty of water and sleep. 你最好多喝水多休息。 - You should always depend on yourself rather than someone else. 你应该是依靠你自己，而不足别人。 - I would like to express to all of you here our sincere welcome. 让我向在座诸位致以最真挚的欢迎. ' - Many people prefer living in the country to living in the town. 许多人喜欢住在农村而不喜欢住在城市。 - Since I'm here, I'd like to try a typical dish of this country. 既然来了，我想吃这个国家特有的食物。 - Walking up and down the stairs would beat any exercise machine. 上下楼梯可比什么健身器都要好。 - Had it not been for the alarm clock she wouldn't have been late. 如果不是因为闹钟不响的话，她就不会迟到了。 - How ever you may work hard, the boss will not be fully satisfied. 无论你有多努力，老板总不会完全满意。 - If he had not broken his tooth, he would not be in hospital now. 如果他没有把牙齿弄坏，现在就不在医院了。 - You might as well throw your money away as spend it in gambling. 你与其把钱花在赌博上，不如把它丢掉的好。 - Can you put me in the picture about the World Cup Football Match? 你能给我讲讲关于世界杯足球赛的状况吗? - I'm usually just using the search engines to look up information. 我通常只是用搜索引擎找一些资料。 - He goes home early everyday for fear that his wife would be angry. 他每天很早就回家，免得老婆生气。 - I regret to inform you that we are unable to offer you employment. 很遗憾地告诉你，我们无法雇用你。 - I will continue my learning, though I am tired of learning English. 尽管我很烦英语，我还是要学它。 - Li Bai is one of the greatest poets that have ever lived in China. 李白是中国有史以来最伟大的诗人之一。 - Many people complain that computers are taking over their jobs. 许多人抱怨说计算机正在接管人的工作。 - The cupboards in her kitchen were full of things she did not need. 她厨房的橱柜中放满了她不需要的东西。 - What be said did not annoy me much, for I knew he did not mean it. 我并不在乎他所说的，我知道他不是那个意思。 - He asked me some personal questions, but I would never answer them. 他问了我几个个人问题，我根本不愿回答。 - I don't care where we go as long as we don't have to stand in line. 不管去哪里，只要不用站着排队就行。 - She likes Mike a lot, but she doesn't want to get married so early. 她喜欢迈克，但她不想那么早就结婚。 - Why don't you find a job and end this dependence upon your parents? 你为何不找个职业. 不再依靠你的父母呢? - Will you please try to find out for me what time the train arrives? 能不能请你帮我查查火车什么时候到? - A good knowledge of English will improve your chances of employment. 英语好将有助于增加你们的就业机会。 - If she finds out you spilled ink on her coat, she'll blow her stack. 如果她发现你在她上衣上洒了墨水，她会大发脾气的。 - I would be very grateful for information about entry to your college. 若能寄给我贵校的入学申请材料我将十分感激。 - Mr. Smith knew Jack didn't look at the others because he was nervous. 史密斯先生知道杰克不敢看别人是因为紧张。 - On being introduced to somebody, a British person often shakes hands. 英国人被介绍给别人的时候常常和对方握握手。 - I want to take a walk along the river bank, singing my favorite songs. 我想在河边散步，唱我喜欢的歌。 - Many people believe that overweight results from overeating and stress. 很多人认为肥胖超重是因为吃得过多和压力造成的。 - Yet all these things, different as they seem, have one thing in common. 然而所有这些东西，看上去虽不同，但却有一个共同点。 - All my best memories come back clearly to me, some can even make me cry. 所有美好的记忆又在我脑海清晰地浮现了，有些甚至还令我哭泣。 - This is the most wonderful day of my life, because I'm here with you now. 今天是我一生中最美好的一天，因为我现在和你在一起。 - When I was young, I'd listen to the radio, waiting for my favorite songs. 当我还是个小女孩的时候，我常听着收音机，等待我最喜欢的歌。 - I'm certain he'll go to see the film, because he's bought a ticket. 我肯定他会去看电影的，冈为他把票都买好了。 - Unfortunately you'll have to pay the fine before you check those books out. 在你借书之前你要先付清罚款。 - Hi! You guys keep talking so loudly that I have to speak at the top my voice! 哎! 你们一直这样大声讲话，我都不得不扯着嗓子说话了。 - We should not only know the theory but also how to apply it to practice. 我们不仅要知道理论，还要知道怎样把理论应用于实践。 - Combining exercise with the diet may be the most effective way to lose weight. 运动与节食结合也许是减肥最有效的途径。 - The maximum weight allowance is 60 kilos per traveler, excluding hand luggage. 每个旅客托运的行李最大重量限额是60公斤，手提行李除外。 - You are just putting on a little weight. I believe you'll get that off easily. 你只是稍微胖了些. 很快就会恢复的。 - In many countries, more and more companies are replacing people with computers. 在许多国家有越来越多的公司使用电子计算机来代替人。 - There are mice next to the refrigerator, under the sink and inside the cupboard! 冰箱边、洗碗槽下，还有橱柜里面都有老鼠! ","date":1336549156000,"updated":1586328684117,"size":47938}]}
